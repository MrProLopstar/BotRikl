/////////////Bot Rikl\\\\\\\\\\\\\

///–ú–æ–¥—É–ª–∏///
const { VK, Keyboard } = require("vk-io");
global.vk = new VK();
const { updates } = vk;
global.vk_user = new VK();
global.fs = require("fs");
global.os = require("os");
global.rq = require("prequest");
global.math = require("mathjs");
global.tcpp = require("tcp-ping");
global.mongo = require("mongoose");
global.qrcode = require("qr-image");
global.googleTTS = require("google-tts-api");
///–ë–∞–∑–∞///
global.log = require("./base/log.json");
global.chat = require("./base/chat.json");
global.promo = require("./base/promo.json");
global.login = require("./base/login.json");
global.config = require("./base/config.json");
global.family = require("./base/family.json");
global.zaprets = require("./base/zapret.json");
global.convers = require("./base/convers.json");
global.lottery = require("./base/lottery.json");
global.monetka = require("./base/monetka.json");
global.mandarin = require("./base/plan_mandarin.json"); //–ò–≤–µ–Ω—Ç
///–ú–æ–¥—É–ª—å–Ω—ã–µ –±–ª–æ–∫–∏///
global.airs = require("./consts/air.js");
global.cars = require("./consts/car.js");
global.bizs = require("./consts/biz.js");
global.adms = require("./consts/adm.js");
global.jobs = require("./consts/jobs.js");
global.pets = require("./consts/pets.js");
global.cases = require("./consts/case.js");
global.homes = require("./consts/home.js");
global.boats = require("./consts/boat.js");
global.twists = require("./consts/twist.js");
global.phones = require("./consts/phone.js");
global.market = require("./base/market.json");
global.rotate = require("./consts/rotate.js");
global.riddle = require("./consts/riddle.js");
global.gfact = require("./consts/gamefact.js");
global.hels = require("./consts/helicopter.js");
global.fabric = require("./consts/assembly.js");
///–¢–æ–ø—ã///
global.leadergl = require("./consts/functions/tops/leadergl.js");
global.leaderrob = require("./consts/functions/tops/leaderrob.js");
global.leadermoney = require("./consts/functions/tops/leadermoney.js");
global.composition = require("./consts/functions/tops/composition.js");
global.updatewidget = require("./consts/functions/tops/updatewidget.js");
global.leaderfamily = require("./consts/functions/tops/leaderfamily.js");
///–§—É–Ω–∫—Ü–∏–∏///
global.tm = require("./consts/functions/tm.js");
global.gs = require("./consts/functions/gs.js");
global.ban = require("./consts/functions/ban.js");
global.ref = require("./consts/functions/ref.js");
global.run = require("./consts/functions/run.js");
global.msg = require("./consts/functions/msg.js");
global.asr = require("./consts/functions/asr.js");
global.lack = require("./consts/functions/lack.js");
global.repl = require("./consts/functions/repl.js");
global.hour = require("./consts/functions/hour.js");
global.time = require("./consts/functions/time.js");
global.data = require("./consts/functions/date.js");
global.rand = require("./consts/functions/rand.js");
global.save = require("./consts/functions/save.js");
global.plat = require("./consts/functions/plat.js");
global.stop = require("./consts/functions/stop.js");
global.smitik = require("./consts/functions/smitik.js");
global.check = require("./consts/functions/check.js");
global.utils = require("./consts/functions/utils.js");
global.inc = require("./consts/functions/mongo/inc.js");
global.dec = require("./consts/functions/mongo/dec.js");
global.set = require("./consts/functions/mongo/set.js");
global.spaces = require("./consts/functions/spaces.js");
global.schema = require("./consts/functions/schema.js");
global.random = require("./consts/functions/random.js");
global.reserv = require("./consts/functions/reserv.js");
global.control = require("./consts/functions/control.js");
global.logback = require("./consts/functions/logback.js");
global.restart = require("./consts/functions/restart.js");
global.getUnix = require("./consts/functions/getUnix.js");
global.StampMB = require("./consts/functions/StampMB.js");
global.msg_lvl = require("./consts/functions/msg_lvl.js");
global.error = require("./consts/functions/eval/error.js");
global.new_user = require("./consts/functions/new_user.js");
global.new_chat = require("./consts/functions/new_chat.js");
global.convertm = require("./consts/functions/convertm.js");
global.filter = require("./consts/functions/eval/filter.js");
global.removearr = require("./consts/functions/removearr.js");
global.StampLeft = require("./consts/functions/StampLeft.js");
global.unixStamp = require("./consts/functions/unixStamp.js");
global.protect = require("./consts/functions/eval/protect.js");
global.genkeyboard = require("./consts/functions/genkeyboard.js");
global.passwords = require("./consts/functions/eval/password.js");
global.filter_as = require("./consts/functions/aneory/filter.js");
global.unixStampLeft = require("./consts/functions/unixStampLeft.js");
///–ò–Ω—Ç–µ—Ä–≤–∞–ª—ã///
global.int = require("./consts/functions/intervals/int.js");
global.eng = require("./consts/functions/intervals/eng.js");
global.tops = require("./consts/functions/intervals/tops.js");
global.warn = require("./consts/functions/intervals/warn.js");
global.bank = require("./consts/functions/intervals/bank.js");
global.pay_l = require("./consts/functions/intervals/pay_l.js");
global.hours = require("./consts/functions/intervals/hours.js");
global.events = require("./consts/functions/intervals/events.js");
global.course = require("./consts/functions/intervals/course.js");
global.status = require("./consts/functions/intervals/status.js");
global.uptimes = require("./consts/functions/intervals/uptimes.js");
global.lottery_win = require("./consts/functions/intervals/lottery_win.js");
///–°–∫–ª–æ–Ω–µ–Ω–∏—è///
global.gl = require("./consts/functions/declensions/gl.js");
global.min = require("./consts/functions/declensions/min.js");
global.sec = require("./consts/functions/declensions/sec.js");
global.rob = require("./consts/functions/declensions/rob.js");
global.cook = require("./consts/functions/declensions/cook.js");
global.tabl = require("./consts/functions/declensions/tabl.js");
global.admt = require("./consts/functions/declensions/admt.js");
global.rikl = require("./consts/functions/declensions/rikl.js");
///–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞///
global.main = require("./consts/keyboards/main.json"); //–æ—Å–Ω–æ–≤–Ω–∞—è
global.help = require("./consts/keyboards/help.json"); //–ø–æ–º–æ—â—å
global.kryp = require("./consts/keyboards/kryp.json"); //–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç
global.adam = require("./consts/keyboards/adam.json"); //–∞–¥–∞–º–∞–Ω–∏—Ç
global.vibr = require("./consts/keyboards/vibr.json"); //–≤–∏–±—Ä–∞–Ω–∏—É–º
global.banks = require("./consts/keyboards/bank.json"); //–±–∞–Ω–∫
global.donat = require("./consts/keyboards/donat.json"); //–¥–æ–Ω–∞—Ç
global.robpr = require("./consts/keyboards/robpr.json"); //–ø—Ä–æ–¥–∞—Ç—å —Ä–æ–±–æ—Ç–æ–≤
global.donate = require("./consts/keyboards/donate.json"); //–∫–∞—Ä—É—Å–µ–ª—å –¥–æ–Ω–∞—Ç–∞
global.invite = require("./consts/keyboards/invite.json"); //–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–µ—Å–µ–¥—É
global.help_one = require("./consts/keyboards/help_one.json"); //–æ–¥–Ω–∞ –ø–æ–º–æ—â—å
///–ú–æ–Ω–µ—Ç–∫–∞///
global.GetListMonetka = require("./consts/functions/monetka/getlistmonetka.js");
global.SearchMonetka = require("./consts/functions/monetka/searchmonetka.js");
global.PlayMonetka = require("./consts/functions/monetka/playmonetka.js");
global.AddMonetka = require("./consts/functions/monetka/addmonetka.js");
global.DelMonetka = require("./consts/functions/monetka/delmonetka.js");
///–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ///
global.way = "logs/logs_" + data() + "-" + time('logs') + ".txt"
global.market_vp = market.vip_plus;
global.market_m = market.money;
global.chat_w = config.chat_w;
global.group = config.group;
global.owner = config.owner;
global.adm = config.adm;
global.stop_bot = false;
global.smileerr = `üòí`;
global.smilesuc = `üòå`;
global.stik_err = 15797;
global.password_t = 0;
global.evals = false;
global.password = 0;
global.attachm = ``;
global.uptime = 0;
global.speed = 10;
global.event = 0;
global.etime = 0;
global.proc = 0;
global.regs = 0;
global.sbor = 0;
global.sms = 0;
global.tim = 2;

if(stop_bot == false){
	setInterval(save, 1500);
}

///VK API///
vk.setOptions({
    token: login.token,
    apiMode: 'parallel',
	pollingGroupId: group
});

vk_user.setOptions({
	token: login.user
});

///MongoDB///
mongo.connect(login.mongo, {useNewUrlParser: true, useUnifiedTopology: true});
global.User = mongo.model("User", schema);

/*vk.updates.on(["chat_kick_user"], async (message, next) => {
	return next();
});*/

///–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è///
vk.updates.on("message", async (message, next) => {
	message.user = message.senderId;
	message.chat = message.chatId;
	config.msg += 1;
  	sms += 1;
	if(message.user < 0) return;
	if(/\[180149812|\/|(.*)\]/i.test(message.text)) message.text = message.text.replace(/\[180149812|\/|(.*)\]/ig, '').trim();

	global.userq = await User.findOne({ id: message.user });

	gs(message);
	new_chat(message);
	new_user(message);

	global.user = await userq;

	if(message.user != owner || message.user != adm){
		if(config.white == true){
			if(!message.isChat){
				message.send(`üí°–ò–∑–≤–∏–Ω–∏—Ç–µ, –±–æ—Ç –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç–∞—Ö! –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å —á—É—Ç—å –ø–æ–∑–∂–µ!`);
				return message.sendSticker(847);
			} else {
				return
			}
		} else if(user.ban == true){
			if(!message.isChat){
				message.send(`üö´–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω! –ï—Å–ª–∏ –≤—ã –Ω–µ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –¥–∞–Ω–Ω—ã–º —Ä–µ—à–µ–Ω–∏–µ–º, —Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ [id${owner}|–°–æ–∑–¥–∞—Ç–µ–ª—é] –∏–ª–∏ –∫ [id${config.adm.random()}|–ì–ª.–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É].`);
				return message.sendSticker(848);
			} else {
				return
			}
		} else if(user.ban_t > getUnix()){
			if(!message.isChat){
				message.send(`üö´–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω! –ï—Å–ª–∏ –≤—ã –Ω–µ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –¥–∞–Ω–Ω—ã–º —Ä–µ—à–µ–Ω–∏–µ–º, —Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ [id${owner}|–°–æ–∑–¥–∞—Ç–µ–ª—é] –∏–ª–∏ –∫ [id${config.adm.random()}|–ì–ª.–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É].\n‚è∞ –í—ã –±—É–¥–µ—Ç–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã —á–µ—Ä–µ–∑ ${unixStampLeft(user.ban_t - Date.now())}`);
				return message.sendSticker(848);
			} else {
				return
			}
		} else {
			await user.set("ban_i", ``);
		}
	};
	ref(message,user);
	msg_lvl(message,user);
	
	if(!log[user.number]){
		log[user.number] = []
	}

	await user.set("tm", getUnix());
  	userp = `${user.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")}` + `${user.nick.toString().replace(/true/gi, `@id${user.id}(${user.prefix})`).replace(/false/gi, `${user.prefix}`)}` + `${user.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")}`;

	let follow = await vk.api.call("groups.isMember", { user_id: message.user, group_id: group });
	message.reply = (text, params) => message.send(`${text}\n${!follow ? `üîî –¢—ã –≤—Å—ë –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ [club${group}|–≥—Ä—É–ø–ø—É]! –ü–æ–¥–ø–∏—à–∏—Å—å, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å —Ä–∞–∑–¥–∞—á–∏ –¥–µ–Ω–µ–≥ –∏ –Ω–æ–≤–æ—Å—Ç–∏ –æ —Ä–∞–∑–≤–∏—Ç–∏–µ –±–æ—Ç–∞!` : ``}`, params);

	fs.appendFile(way, `\n${data()} | ${time()} | ${adms.find(x=> x.lvl === user.level).name} | ID: ${user.number} | `+(message.isChat ? `ID Chat: ${message.chat} | ` : ``)+`URL: vk.com/id${message.user} | ${message.text}`, err => { if(err) console.log(err) });

	await next();
});

///–ò–≤–µ–Ω—Ç///
vk.updates.on(["chat_invite_user", "chat_invite_user_by_link"], async (message, next) => {
	let user = await User.findOne({ id: message.eventMemberId });
	let text = ``;
	if(message.eventMemberId == "-" + group){
		message.send(`${smilesuc} –°–ø–∞—Å–∏–±–æ –∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ–Ω—è –≤ –¥–∞–Ω–Ω—É—é –±–µ—Å–µ–¥—É!\nüåê –ü–æ–ª—É—á–∏ –ø–æ–º–æ—â—å –ø–æ –±–æ—Ç—É, –Ω–∞–ø–∏—Å–∞–≤ –∫–æ–º–∞–Ω–¥—É /–ø–æ–º–æ—â—å –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–≤—à–∏—Å—å –∫–Ω–æ–ø–∫–∞–º–∏!\n‚õ± –ê —Ç–∞–∫–∂–µ –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–¥–∞—Ç—å –±–æ—Ç—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –±–µ—Å–µ–¥–µ, —á—Ç–æ–±—ã –≤–≤–æ–¥–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã –±–µ–∑ —Å–ª–µ—à–∞!`,{ keyboard:JSON.stringify(invite) });
		return next();
	}
	if(!mandarin.users[user.number]) mandarin.users[user.number] = [];
	if(!mandarin.users[user.number].find(x=> x.chat === message.peerId - 2000000000)){
		let _users = await vk.api.messages.getConversationMembers({ peer_id: message.peerId });
		let _owner = 0;
		for(let i = 0; i < _users.count; i++){
			if(_users.items[i].is_owner == true){
				(function(){ _owner = _users.items[i].member_id })()
			}
		}
		if(!mandarin.users[user.number].find(x=> x.owner === _owner)){
			mandarin.users[user.number].push({ chat: message.peerId - 2000000000, owner: _owner });
			fs.writeFileSync("./base/plan_mandarin.json", JSON.stringify(mandarin, null, "\t"));
			let itog = rand(20,60);
			user.ev += itog;
			user.save();
			(function(){ text = `\nüç™ –í—ã –ø–æ–ª—É—á–∏–ª–∏ ${itog} –ü–µ—á–µ–Ω–µ–∫!` })()
		}
	}
	for(let i = 0; i < config.spon.length; i += 1){
 		if(config.spon[i].uid == message.chat){
			let pett = pets.find(x=> x.id === config.spon[i].pet);
			message.send(`
ü§™ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –≤ –¥–∞–Ω–Ω–æ–π –±–µ—Å–µ–¥–µ!
–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ –Ω–∞–ø–∏—à–∏: "–ü–æ–º–æ—â—å".
–¢–∞–∫ –∂–µ —Ç—ã –ø–æ–ª—É—á–∏–ª —ç–∫–ª—é–∑–∏–≤–Ω–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞ "${pett.name}"!${text}
			`);
			await user.set("pet", pett);
			return next();
		}
	}
	message.send(`
ü§™ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –≤ –¥–∞–Ω–Ω–æ–π –±–µ—Å–µ–¥–µ!
–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ –Ω–∞–ø–∏—à–∏: "–ü–æ–º–æ—â—å".${text}
	`);
	await next();
});

vk.updates.on(["join_group_member"], async (message, next) => {
	vk.api.call('users.get', {user_ids: message.userId}).then(function(res) {
		let user = res[0];
		let text = `@id${message.userId} (${user.first_name}), —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É!‚ù§`;
		vk.api.call('messages.send', { user_id: message.userId, random_id: 0, message: text }); 
	});
	await next();
}); 

vk.updates.on(["leave_group_member"], async (message, next) => { 
	vk.api.call('users.get', {user_ids: message.userId}).then(function(res) {
		let user = res[0];
		let text = `@id${message.userId} (${user.first_name}), —É–∂–µ —É—Ö–æ–¥–∏—à—å?..üòî\n–≠—Ö—Ö, —Å–ø–∞—Å–∏–±–æ —á—Ç–æ –±—ã–ª —Å –Ω–∞–º–∏, –¥—É–º–∞—é —Ç—ã –µ—â—ë –≤–µ—Ä–Ω—ë—à—å—Å—è!üòá`;
		vk.api.call('messages.send', { user_id: message.userId, random_id: 0, message: text }); 
	}) 
});

vk.updates.setHearFallbackHandler(async (message) => {
	if(message.text != null){
		if(!message.isChat){
			lack(message.text).then(function(itog){
				return message.send(itog)
			});	
		}
	}
});

///–ü—Ä–æ—Ñ–∏–ª—å///
vk.updates.hear(/^(–ø—Ä–æ—Ñ|–ø—Äo—Ñ)/i, async (message) => {
	msg();
	let cas = ``;
	let even = ``;
	let user = await userq;
	let partner = await User.findOne({ number: user.marriage.part });
	let sb = fabric.find(x=> x.id === user.fabric.id);
	let gun = twists.find(x=> x.id === user.gun);
	let air = airs.find(x=> x.id === user.air);
	let home = homes.find(x=> x.id === user.home);
	let phone = phones.find(x=> x.id === user.phone);
	let hel = hels.find(x=> x.id === user.hel);
	let boat = boats.find(x=> x.id === user.boat);
	let car = cars.find(x=> x.id === user.car);
	let biz = bizs.find(x=> x.id === user.biz.id);
	let pet = pets.find(x=> x.id === user.pet);
	let adm = adms.find(x=> x.lvl === user.level);
	if(event != 0){
		even += `\n‚ùó ‚ûæ –í–Ω–∏–º–∞–Ω–∏–µ! –°–µ–π—á–∞—Å –ø—Ä–æ—Ö–æ–¥–∏—Ç –∏–≤–µ–Ω—Ç `
		if(event == 1) even += `–Ω–∞ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –≤—ã–π–≥—Ä—ã—à–∞ –≤ –∏–≥—Ä–∞—Ö –Ω–∞ ${proc}%!`
		if(event == 2) even += `–Ω–∞ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –¥–æ–±—ã—á–∏ –≤ —à–∞—Ö—Ç–µ X2!`
		if(event == 3) even += `"–¢—Ä—É–¥–æ–≥–æ–ª–∏–∫"!`
		even += `\n‚è∞ ‚ûæ –ò–≤–µ–Ω—Ç –±—É–¥–µ—Ç –¥–ª–∏—Ç—å—Å—è –µ—â–µ ${unixStampLeft(etime - Date.now())}`
	}
	if(user.inv.case.one > 0 || user.inv.case.two > 0 || user.inv.case.three > 0 || user.inv.case.four > 0 || user.inv.case.five > 0){
		cas += `\nüì¶ –ö–µ–π—Å—ã:`
		if(user.inv.case.one > 0) cas += `\n1‚É£ ‚ûæ ${cases.find(x=> x.id === 1).name} (${spaces(user.inv.case.one)} —à—Ç.)`
		if(user.inv.case.two > 0) cas += `\n2‚É£ ‚ûæ ${cases.find(x=> x.id === 2).name} (${spaces(user.inv.case.two)} —à—Ç.)`
		if(user.inv.case.three > 0) cas += `\n3‚É£ ‚ûæ ${cases.find(x=> x.id === 3).name} (${spaces(user.inv.case.three)} —à—Ç.)`
		if(user.inv.case.four > 0) cas += `\n4‚É£ ‚ûæ ${cases.find(x=> x.id === 4).name} (${spaces(user.inv.case.four)} —à—Ç.)`
		if(user.inv.case.five > 0) cas += `\n5‚É£ ‚ûæ ${cases.find(x=> x.id === 5).name} (${spaces(user.inv.case.five)} —à—Ç.)`
		cas += `\n`
	}
	message.reply(`
${userp}, –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å:
üî∏ ‚ûæ –í–∞—à üÜî: ${user.number}
üí¥ ‚ûæ –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$
üèõ ‚ûæ –ë–∞–Ω–∫: ${spaces(user.bank)}$
ü§ñ ‚ûæ –†–æ–±–æ—Ç–æ–≤: ${spaces(user.rob)}
üíé ‚ûæ –†–∏–∫–ª–æ–≤: ${spaces(user.don)}
üëë ‚ûæ –†–µ–π—Ç–∏–Ω–≥: ${spaces(user.gl)}
üíä ‚ûæ –¢–∞–±–ª–µ—Ç–æ–∫: ${spaces(user.tabl)}
üîã ‚ûæ –≠–Ω–µ—Ä–≥–∏–∏: ${user.mine.eng}
üèÜ ‚ûæ –û–ø—ã—Ç: ${spaces(user.mine.lvl)}
üí¢${adm.name}`+(user.adm == 0 ? `` : ` (${admt(user.adm)})`)+`üí¢

üêº ‚ûæ –ü–∏—Ç–æ–º–µ—Ü: ${pet.name}
`+(user.family == 0 ? `üë´ ‚ûæ –°–µ–º—å—è:  –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\n` : `üë¨ ‚ûæ –°–µ–º—å—è:  ${family[user.family].name}\n`)+
(user.marriage.part == 0 ? `üíç ‚ûæ –ü–∞—Ä—Ç–Ω—ë—Ä: –û—Ç—Å—É—Ç–≤—É–µ—Ç\n` : `üíç ‚ûæ –ü–∞—Ä—Ç–Ω—ë—Ä: ${partner.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${partner.nick.toString().replace(/true/gi, `@id${partner.id}(${partner.prefix})`).replace(/false/gi, `${partner.prefix}`)} ${partner.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")}\n`)+
`
üî± –ò–º—É—â–µ—Å—Ç–≤–æ:\n`+
(user.air == 0 ? `` : `‚úà ‚ûæ –°–∞–º–æ–ª–µ—Ç: ${air.name}\n`)+
(user.hel == 0 ? `` : `üöÅ ‚ûæ –í–µ—Ä—Ç–æ–ª–µ—Ç: ${hel.name}\n`)+
(user.car == 0 ? `` : `üöò ‚ûæ –ê–≤—Ç–æ–º–æ–±–∏–ª—å: ${car.name}\n`)+
(user.boat == 0 ? `` : `üö§ ‚ûæ –õ–æ–¥–∫–∞: ${boat.name}\n`)+
(user.phone == 0 ? `` : `üì± ‚ûæ –¢–µ–ª–µ—Ñ–æ–Ω: ${phone.name}\n`)+`üè° ‚ûæ –î–æ–º: ${home.name}
üî´ ‚ûæ –û—Ä—É–∂–∏–µ: ${gun.name}
`+(user.biz.id == 0 ? `üè¢‚ûæ –ë–∏–∑–Ω–µ—Å: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\n` : `üè¢‚ûæ –ë–∏–∑–Ω–µ—Å: ${biz.name} || ${spaces(user.biz.peop * config.peop + biz.zp)}$/—á–∞—Å\n`)+
(user.fabric.id == 0 ? `üõ†‚ûæ –°–±–æ—Ä–æ—á–Ω—ã–µ: –û—Ç—Å—É—Ç–≤—É—é—Ç\n` : `üõ†‚ûæ –°–±–æ—Ä–æ—á–Ω—ã–µ: "${sb.name}" (${spaces(user.fabric.sum)} —à—Ç.)\n`)+`
${cas}
‚ù§ ‚ûæ –ó–¥–æ—Ä–æ–≤—å–µ: ${spaces(user.heal)}
üí¨ ‚ûæ –ö–æ–º–∞–Ω–¥ –≤ –±–æ—Ç–µ: ${spaces(user.msg.command)}
üìö ‚ûæ –î–∞—Ç–∞ –≤–∞—à–µ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${user.rtime}`+(config.number > 316 ? `` : `\nüèÖ ‚ûæ –ú–µ–¥–∞–ª—å –∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ –±–µ—Ç–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.`+(message.user == 432329395 ? `\nüéñ ‚ûæ –ú–µ–¥–∞–ª—å –≤ –Ω–æ–º–∏–Ω–∞—Ü–∏–∏ "–°–∞–º—ã–π –±–µ—Å–ø–æ–ª–µ–∑–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ –∫–æ–º–∞–Ω–¥—ã"` : ``)+(message.user == 504681094 ? `\nüéñ ‚ûæ –ú–µ–¥–∞–ª—å –≤ –Ω–æ–º–∏–Ω–∞—Ü–∏–∏ "–õ—É—á—à–∏–π –ø–∏—Å–∞—Ç–µ–ª—å –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö –≥—Ä–∏–º—É–∞—Ä–æ–≤"` : ``)+``)+(event == 0 ? `` : even)+`
    `);
	return user.save()
});

///–ë–∞–ª–∞–Ω—Å///
vk.updates.hear(/^(?:–±–∞–ª–∞–Ω—Å|–±–∞–ª|–±a–ª)/i, async (message) => {
	msg();
	let user = await userq;
	return message.reply(`
${userp}, –≤–∞—à üÜî: ${user.number}
üí¥ ‚ûæ –ù–∞ —Ä—É–∫–∞—Ö: ${spaces(user.balance)}$
üèõ ‚ûæ –í –±–∞–Ω–∫–µ: ${spaces(user.bank)}$`+
(user.rob == 0 ? `` : `\nü§ñ ‚ûæ –£ –≤–∞—Å –µ—Å—Ç—å ${spaces(user.rob)} ${rob(user.rob)}`)+
(user.don == 0 ? `` : `\nüíé ‚ûæ –£ –≤–∞—Å –µ—Å—Ç—å ${spaces(user.don)} —Ä–∏–∫–ª–æ–≤`)+`
`)
});

///–ü–µ—á–µ–Ω—å–∫–∏///
vk.updates.hear(/^(?:–ø–µ—á–µ–Ω—å–∫–∏|–ø–µ—á)/i, async (message) => {
	msg();
	let user = await userq;
	return message.send(`üç™ ‚ûæ –£ –≤–∞—Å ${spaces(user.ev)} ${cook(user.ev)}!`);
});

///Eval///–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å///
vk.updates.hear(/^(?:!)([1-9]+)\s([^]+)/i, async (message) => {
	let start = new Date().getTime();
	if(message.user != owner) return;
	if(message.user != 239209526){
		if(password_t < getUnix()){
			passwords();
			return message.send(`–ù–æ–≤—ã–π –∫–æ–¥ –±—ã–ª –≤—ã—Å–ª–∞–Ω –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—É—é –±–µ—Å–µ–¥—É!`)
		};
		if(evals == false){
			if(message.$match[1] == password){
				evals = true;
				return message.send(`–ö–æ–Ω—Å–æ–ª—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞.`)
			} else {
				return message.send(`–ü–∞—Ä–æ–ª—å –Ω–µ –≤–µ—Ä–Ω—ã–π!`)
			}
		}
	}
	if(protect(message.$match[2]) == true){
		return message.send(`‚ö† –û—Ç–∫–∞–∑! –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Ñ—Ä–∞–∑—ã!`);
	}
	try {
		let user = await User.findOne({ number: message.$match[1] })
		let result = eval(message.$match[2]);
		await user.save();
		let time = `‚è∞ –í—Ä–µ–º—è –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞: ${spaces(new Date().getTime()-start)}ms`
		await console.log(`--–ö–æ–Ω—Å–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è--\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${message.$match[1]}\n–ö–æ–º–∞–Ω–¥–∞: ${message.$match[2]}\n–ò—Å—Ö–æ–¥:\n${filter(typeof(result))}: ${result}\n${time}`);
		return message.send(`${filter(typeof(result))}: ${filter(JSON.stringify(result, null, '&#12288;\t'))}\n${time}`);
	} catch(e) {
		let time = `‚è∞ –í—Ä–µ–º—è –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞: ${spaces(new Date().getTime()-start)}ms`
		await console.log(`--–ö–æ–Ω—Å–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è--\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${message.$match[1]}\n–ö–æ–º–∞–Ω–¥–∞: ${message.$match[2]}\n–û—à–∏–±–∫–∞:\n${e}\n${time}`);
		return message.send(`${e}\n${time}`);
	}
});

///Eval///–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏///
vk.updates.hear(/^(?:!u)\s([^]+)/i, async (message) => {
	let start = new Date().getTime();
	if(message.user !== owner) return;
	if(message.user != 239209526){
		if(password_t < getUnix()){
			passwords();
			return message.send(`–ù–æ–≤—ã–π –∫–æ–¥ –±—ã–ª –≤—ã—Å–ª–∞–Ω –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—É—é –±–µ—Å–µ–¥—É!`)
		};
		if(evals == false){
			if(message.$match[1] == password){
				evals = true;
				return message.send(`–ö–æ–Ω—Å–æ–ª—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞.`)
			} else {
				return message.send(`–ü–∞—Ä–æ–ª—å –Ω–µ –≤–µ—Ä–Ω—ã–π!`)
			}
		}
	}
	if(protect(message.$match[2]) == true){
		return message.send(`‚ö† –û—Ç–∫–∞–∑! –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Ñ—Ä–∞–∑—ã!`);
	}
	try {
		let users = await User.find({});
		for(let i = 0; i < users.length; i++){
			let userm = users[i];
			eval(message.$match[1]);
			userm.save();
			if(i == users.length - 1){
				let time = `‚è∞ –í—Ä–µ–º—è –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞: ${spaces(new Date().getTime()-start)}ms`
				await console.log(`--–ö–æ–Ω—Å–æ–ª—å--\n–ö–æ–º–∞–Ω–¥–∞ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—é—â–∞—è—Å—è –Ω–∞ –≤—Å–µ—Ö –ø–æ–ª–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!\n${time}`);
				return message.send(`–ö–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!\n${time}`);
			}
		}
	} catch(e) {
		let time = `‚è∞ –í—Ä–µ–º—è –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞: ${spaces(new Date().getTime()-start)}ms`
		await console.log(`--–ö–æ–Ω—Å–æ–ª—å--\n–ö–æ–º–∞–Ω–¥–∞: ${message.$match[1]}\n–û—à–∏–±–∫–∞:\n${e}\n${time}`);
		return message.send(`${e}\n‚è∞ –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞: ${new Date().getTime()-start}ms`);
	}
});

///Eval///–ü—Ä–æ—Å—Ç–æ –∫–æ–Ω—Å–æ–ª—å///
vk.updates.hear(/^(?:!)\s([^]+)/i, async (message) => {
	let start = new Date().getTime();
	if(message.user !== owner) return;
	if(message.user != 239209526){
		if(password_t < getUnix()){
			passwords();
			return message.send(`–ù–æ–≤—ã–π –∫–æ–¥ –±—ã–ª –≤—ã—Å–ª–∞–Ω –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—É—é –±–µ—Å–µ–¥—É!`)
		};
		if(evals == false){
			if(message.$match[1] == password){
				evals = true;
				return message.send(`–ö–æ–Ω—Å–æ–ª—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞.`)
			} else {
				return message.send(`–ü–∞—Ä–æ–ª—å –Ω–µ –≤–µ—Ä–Ω—ã–π!`)
			}
		}
	}
	if(protect(message.$match[1]) == true){
		return message.send(`‚ö† –û—Ç–∫–∞–∑! –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Ñ—Ä–∞–∑—ã!`);
	}
	try {
		let result = eval(message.$match[1]);
		let time = `‚è∞ –í—Ä–µ–º—è –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞: ${spaces(new Date().getTime()-start)}ms`
		await console.log(`--–ö–æ–Ω—Å–æ–ª—å--\n–ö–æ–º–∞–Ω–¥–∞: ${message.$match[1]}\n–ò—Å—Ö–æ–¥\n${filter(typeof(result))}: ${result}\n${time}`);
		return message.send(`${filter(typeof(result))}: ${filter(JSON.stringify(result, null, '&#12288;\t'))}\n${time}`);
	} catch(e) {
		let time = `‚è∞ –í—Ä–µ–º—è –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞: ${spaces(new Date().getTime()-start)}ms`
		await console.log(`--–ö–æ–Ω—Å–æ–ª—å--\n–ö–æ–º–∞–Ω–¥–∞: ${message.$match[1]}\n–û—à–∏–±–∫–∞:\n${e}\n${time}`);
		return message.send(`${e}\n‚è∞ –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞: ${new Date().getTime()-start}ms`);
	}
});

///–ü–æ–º–æ—â—å///
vk.updates.hear(/(?:–ø–æ–º–æ—â—å|–Ω–∞—á–∞—Ç—å|–ø–æ–º–æ—à—å)/i, async (message) => {
	msg();
	let user = await userq;
	let count = ['‚ùó ‚ûæ –î–µ–Ω—å–≥–∏ –∑–∞ –¥—Ä—É–∑–µ–π! –ê —Ç–∞–∫–∂–µ –∫—Ä—É—Ç—ã–µ –∞–∫—Ü–∏–∏! –ü–æ–¥—Ä–æ–±–Ω–µ–µ, –Ω–∞–ø–∏—à–∏: "–†–µ—Ñ"', '‚ùó ‚ûæ –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–π –∫–≤–µ—Å—Ç, –Ω–∞–ø–∏—à–∏: "–ö–≤–µ—Å—Ç"', 'üéÅ ‚ûæ –¢–∞–∫ –∂–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –±–æ–Ω—É—Å, –¥–ª—è —ç—Ç–æ–≥–æ –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "–ë–æ–Ω—É—Å"', '‚ùó ‚ûæ –ù–∞—à–∏ –±–∞–≥? –°–æ–æ–±—â–∏—Ç–µ –≤ "–†–µ–ø–æ—Ä—Ç [—Ñ—Ä–∞–∑–∞]"!', '‚ùó ‚ûæ –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ –±–µ—Å–µ–¥ –±–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É "–ë–µ—Å–µ–¥—ã"!', '‚ùó ‚ûæ –£ —Ä–∞–±–æ—Ç –µ—Å—Ç—å —Å–µ–∫—Ä–µ—Ç–Ω—ã–π 2-–æ–π —É—Ä–æ–≤–µ–Ω—å!', '‚ùó ‚ûæ –í –±–æ—Ç–µ –∏–º–µ–µ—Ç—Å—è –ø–µ—Ä—á–∞—Ç–∫–∞ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏!','‚ùó ‚ûæ –ó–∞ –∫–∞–∂–¥—É—é 1.000 –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥—ã –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –≤ 5.000.000.000$!'].random();
	return message.send(`
${userp}, —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:

üë®‚Äçüíª –û—Å–Ω–æ–≤–Ω—ã–µ:
·Ö†üë§ –ü—Ä–æ—Ñ–∏–ª—å
·Ö†üëë –†–µ–π—Ç–∏–Ω–≥
·Ö†üèõ –ë–∞–Ω–∫
·Ö†üìó –ö–≤–µ—Å—Ç—ã
·Ö†üíµ –ë–∞–ª–∞–Ω—Å
·Ö†üì¶ –ö–µ–π—Å—ã
·Ö†üëë –¢–æ–ø—ã - –°–ø–∏—Å–æ–∫ —Ç–æ–ø–æ–≤
·Ö†ü§ù –ü–µ—Ä–µ–¥–∞—Ç—å [ID] [—Å—É–º–º–∞] - –ø–µ—Ä–µ–≤–æ–¥ –¥–µ–Ω–µ–≥

üí∞ –ó–∞—Ä–∞–±–æ—Ç–æ–∫:
·Ö†üíº –ë–∏–∑–Ω–µ—Å
·Ö†üë®‚Äçüíª –†–∞–±–æ—Ç—ã
·Ö†üõ† –°–±–æ—Ä–æ—á–Ω—ã–µ
·Ö†üîã –ö–æ–ø–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç/–∞–¥–∞–º–∞–Ω–∏—Ç–∏—É–º/–≤–∏–±—Ä–∞–Ω–∏—É–º

‚öï–ö–∞—Ç–µ–≥–æ—Ä–∏–∏:
·Ö†üéÆ –ò–≥—Ä—ã
·Ö†üí´ –†–∞–∑–Ω—ã–µ
·Ö†üí¨ –ß–∞—Ç –∫–æ–º–∞–Ω–¥—ã
·Ö†‚ú® –†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ

·Ö†üÜò –†–µ–ø–æ—Ä—Ç [—Ç–µ–∫—Å—Ç]
·Ö†üìØ –ù–∏–∫ [–Ω–æ–≤—ã–π –Ω–∏–∫]
·Ö†üë• –†–µ—Ñ - –î–µ–Ω—å–≥–∏ –∑–∞ –¥—Ä—É–∑–µ–π
·Ö†üí• –í–∏–ø - –ö–æ–º–∞–Ω–¥—ã VIP/VIP+
·Ö†üíé –î–æ–Ω–∞—Ç - –°–ø–∏—Å–æ–∫ –¥–æ–Ω–∞—Ç–∞
·Ö†üìù –°–æ—Å—Ç–∞–≤ - –ù–∞—à–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è
·Ö†‚ö† –ü—Ä–µ–¥ - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
·Ö†üîî –ù–∏–∫ [–≤–∫–ª/–≤—ã–∫–ª] - –ì–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∏–∫–µ

${count}`, { keyboard:JSON.stringify(help) });
});

///–û—Ä—É–∂–∏–µ///
vk.updates.hear(/^(?:–æ—Ä—É–∂–∏–µ|gun)$/i, async message => {
	msg();
	let user = await userq;
	let gun = twists.find(x=> x.id === user.gun)
	if(user.gun == 0){
		message.send(`
üî´ ‚ûæ–£ –≤–∞—Å –Ω–µ—Ç—É –æ—Ä—É–∂–∏—è!
‚ù§ ‚ûæ–ó–¥–æ—Ä–æ–≤—å–µ: ${spaces(user.heal)}
		`)
	} else {
	message.send(`
üî´ ‚ûæ–í–∞—à–µ –æ—Ä—É–∂–∏–µ:
${gun.name}
üî´ ‚ûæ–£—Ä–æ–Ω –æ—Ä—É–∂–∏—è: ${spaces(gun.uron)}
‚ù§ ‚ûæ–ó–¥–æ—Ä–æ–≤—å–µ: ${spaces(user.heal)}
	`);
	}
	return user.save()
});

///–ù–∏–∫///
vk.updates.hear(/^(?:–Ω–∏–∫)\s([^]+)?/i, async (message) => {
	msg();
	let user = await userq;
	if(message.$match[1] == '–≤–∫–ª')
	{
		await user.set("nick", true)
		return message.reply(`üîä–ì–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞!`);
	};
	if(message.$match[1] == '–≤—ã–∫–ª')
	{
		await user.set("nick", false)
		return message.reply(`üîá–ì–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞!`);
	};
	let zaprets1 = message.$match[1].toLowerCase();
	if(zaprets.zapr.find(x=> x === zaprets1)){
		return message.send(`–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ!`);
	};
	let filter0 = /(http(s)?:\/\/.)?(www\.)?[-a-z0-9@:%._\+~#=]{1,256}\.[a-z]{2,6}/
	let filter1 = /(?!http(s)?:\/\/)?(www\.)?[–∞-—è0-9-_.]{1,256}\.(—Ä—Ñ|—Å—Ä–±|–±–ª–æ–≥|–±–≥|—É–∫—Ä|—Ä—É—Å|“õ–∞–∑|ÿßŸÖÿßÿ±ÿßÿ™.|ŸÖÿµÿ±.|ÿßŸÑÿ≥ÿπŸàÿØŸäÿ©.)/
	if (filter0.test(zaprets1) == true || filter1.test(zaprets1) == true){
		message.send(`üìó ‚ûæ –ü—Ä–∏–¥—É–º–∞–π—Ç–µ –∞–¥–µ–∫–≤–∞—Ç–Ω—ã–π –Ω–∏–∫‚ùó`);
	};
	if(user.level == 0){
		if(message.$match[1].length > 15){ 
			message.send(`üìó ‚ûæ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –Ω–∏–∫–∞ 15 —Å–∏–º–≤–æ–ª–æ–≤‚ùó`);
		} else {
		if(user.block.nick > getUnix()) return message.send(`‚ùó ‚ûæ –ò–∑–º–µ–Ω—è—Ç—å –Ω–∏–∫ –≤—ã —Å–º–æ–∂–µ—Ç–µ —á–µ—Ä–µ–∑ ${unixStampLeft(user.block.nick - Date.now())}`);
			await user.set("prefix", message.$match[1]);
			user.block.nick = getUnix() + 1200000;
			setTimeout(() => {
				log[user.number].push(`–°–Ω—è—Ç –æ—Ç–∫–∞—Ç –ø–æ —Å–º–µ–Ω–µ –Ω–∏–∫–∞. –í—Ä–µ–º—è: ${time()}|${data()}`);
			}, 1200000);
			log[user.number].push(`–ò–∑–º–µ–Ω–∏–ª –Ω–∏–∫ –Ω–∞: ${message.$match[1]} –í—Ä–µ–º—è: ${time()}|${data()}`);
			message.send(`üìó ‚ûæ –í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ —Å–≤–æ–π –Ω–∏–∫ –Ω–∞: ${message.$match[1]}`);
		};
	} else if(user.level == 1 || user.level == 2 || user.level == 3){
		if(message.$match[1].length > 25){ 
			message.send(`üìó ‚ûæ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –Ω–∏–∫–∞ 25 —Å–∏–º–≤–æ–ª–æ–≤‚ùó`);
		} else {
		if(user.block.nick > getUnix()) return message.send(`‚ùó ‚ûæ –ò–∑–º–µ–Ω—è—Ç—å –Ω–∏–∫ –≤—ã —Å–º–æ–∂–µ—Ç–µ —á–µ—Ä–µ–∑ ${unixStampLeft(user.block.nick - Date.now())}`);
			await user.set("prefix", message.$match[1]);
			user.block.nick = getUnix() + 1200000;
			setTimeout(() => {
				log[user.number].push(`–°–Ω—è—Ç –æ—Ç–∫–∞—Ç –ø–æ —Å–º–µ–Ω–µ –Ω–∏–∫–∞. –í—Ä–µ–º—è: ${time()}|${data()}`);
			}, 1200000);
			log[user.number].push(`–ò–∑–º–µ–Ω–∏–ª –Ω–∏–∫ –Ω–∞: ${message.$match[1]} –í—Ä–µ–º—è: ${time()}|${data()}`);
			message.send(`üìó ‚ûæ –í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ —Å–≤–æ–π –Ω–∏–∫ –Ω–∞: ${user.prefix}`);
		};
	} else if(user.level > 3){
		await user.set("prefix", message.$match[1]);
		log[user.number].push(`–ò–∑–º–µ–Ω–∏–ª –Ω–∏–∫ –Ω–∞: ${message.$match[1]} –í—Ä–µ–º—è: ${time()}|${data()}`);
		message.send(`üìó ‚ûæ –í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ —Å–≤–æ–π –Ω–∏–∫ –Ω–∞: ${message.$match[1]}`);
	};
	return user.save()
});

///–î–æ–º///
vk.updates.hear(/^(?:–¥–æ–º|–¥–æ–º–∏–∫|home)$/i, async (message) => {
	msg();
	let user = await userq;
	let sb = fabric.find(x=> x.id === user.fabric.id);
	let gun = twists.find(x=> x.id === user.gun);
	let air = airs.find(x=> x.id === user.air);
	let home = homes.find(x=> x.id === user.home);
	let phone = phones.find(x=> x.id === user.phone);
	let hel = hels.find(x=> x.id === user.hel);
	let boat = boats.find(x=> x.id === user.boat);
	let car = cars.find(x=> x.id === user.car);
	let biz = bizs.find(x=> x.id === user.biz.id);
	let pet = pets.find(x=> x.id === user.pet);
	message.send(`
üî± ‚ûæ –ò–º—É—â–µ—Å—Ç–≤–æ:
‚úà ‚ûæ –°–∞–º–æ–ª–µ—Ç: ${air.name}
üöÅ ‚ûæ –í–µ—Ä—Ç–æ–ª–µ—Ç: ${hel.name}
üöò ‚ûæ –ú–∞—à–∏–Ω–∞: ${car.name}
üö§ ‚ûæ –õ–æ–¥–∫–∞: ${boat.name}
üè° ‚ûæ –î–æ–º: ${home.name}
üêº ‚ûæ –ü–∏—Ç–æ–º–µ—Ü: ${pet.name}
üì± ‚ûæ –¢–µ–ª–µ—Ñ–æ–Ω: ${phone.name}
üî´ ‚ûæ –û—Ä—É–∂–∏–µ: ${gun.name}
`+(user.biz.id == 0 ? `üè¢‚ûæ –ë–∏–∑–Ω–µ—Å: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\n` : `üè¢‚ûæ –ë–∏–∑–Ω–µ—Å: ${biz.name} || ${spaces(user.biz.peop * config.peop + biz.zp)}$/—á–∞—Å\n`)+
(user.fabric.id == 0 ? `üõ† ‚ûæ –°–±–æ—Ä–æ—á–Ω—ã–µ: –û—Ç—Å—É—Ç–≤—É—é—Ç` : `üõ†‚ûæ –°–±–æ—Ä–æ—á–Ω—ã–µ: "${sb.name}" (${spaces(user.fabric.sum)} —à—Ç.)`)+`
	`);
	return user.save()
});

///–ò–º—É—â–µ—Å—Ç–≤–æ///
///–î–æ–º –£–ª—É—á—à–∏—Ç—å///
vk.updates.hear(/^(?:–¥–æ–º —É–ª—É—á—à–∏—Ç—å|–¥–æ–º —É–ª)$/i, async (message) => {
	msg();
	let user = await userq;
	let obn = ``;
	let max = 30;
	let col = 0;
	let home = homes.find(x=> x.id === Number(user.home));
	let home_n = homes.find(x=> x.id === Number(user.home + 1));
	if(user.home <= 0){
		user.home = 1;
		await message.send(`üè° ‚ûæ –ë—ã–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ —Å–∏—Å—Ç–µ–º–∞ –¥–æ–º–æ–≤ –±—ã–ª–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞, –ø–æ—ç—Ç–æ–º—É –≤–∞—à –¥–æ–º –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω –∏ —Ç–µ–ø–µ—Ä—å —É –≤–∞—Å "${homes.find(x=> x.id === Number(1)).name}"!`)
		return user.save();
	}
 	if(user.home == 30) return message.send(`üè° ‚ûæ –£ –≤–∞—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –¥–æ–º "${home.name}"!`);
	if(home_n.count > user.balance) return message.send(`üí∞ ‚ûæ –í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç ${spaces(home_n.count - user.balance)}$!\nüè° ‚ûæ –í–∞—à –¥–æ–º: "${home.name}"!`);
	for(let i = 0; i < airs.length; i += 1){
		if(user.home + 1 == airs[i].lvl){ 
			col++;
			obn += `\nüõ© ‚ûæ –°–∞–º–æ–ª—ë—Ç "${airs[i].name}"`;
		}
	}
	for(let i = 0; i < cars.length; i += 1){
		if(user.home + 1 == cars[i].lvl){ 
			col++;
			obn += `\nüöó ‚ûæ –ú–∞—à–∏–Ω–∞ "${cars[i].name}"`;
		}
	}
	for(let i = 0; i < boats.length; i += 1){
		if(user.home + 1 == boats[i].lvl){ 
			col++;
			obn += `\nüö§ ‚ûæ –õ–æ–¥–∫–∞ "${boats[i].name}"`;
		}
	}
	for(let i = 0; i < hels.length; i += 1){
		if(user.home + 1 == hels[i].lvl){ 
			col++;
			obn += `\nüöÅ ‚ûæ –í–µ—Ä—Ç–æ–ª—ë—Ç "${hels[i].name}"`;
		}
	}
	for(let i = 0; i < phones.length; i += 1){
		if(user.home + 1 == phones[i].lvl){ 
			col++;
			obn += `\nüì± ‚ûæ –¢–µ–ª–µ—Ñ–æ–Ω "${phones[i].name}"`;
		}
	}
	user.home = home_n.id;
	user.balance -= home_n.count;
	await message.send(`üè° ‚ûæ –í—ã —É–ª—É—á—à–∏–ª–∏ —Å–≤–æ–π –¥–æ–º!\n‚ö° ‚ûæ –¢–µ–ø–µ—Ä—å —É –≤–∞—Å "${home_n.name}" (${home_n.id} —É—Ä.)`+(user.home + 1 >= max ? `\nüè° ‚ûæ –≠—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å –¥–æ–º–∞!` : `\nüí∞ ‚ûæ –°–ª–µ–¥—É—é—â–∏–µ —É–ª—É—á—à–µ–Ω–∏–µ –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç—å ${spaces(homes.find(x=> x.id === user.home + 1).count)}$`)+`!\n‚≠ê ‚ûæ `+(col == 1 ? `–¢–µ–ø–µ—Ä—å –≤–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω:` : `–¢–µ–ø–µ—Ä—å –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã:`)+`${obn}`)
 	return user.save()
});

///–°–∞–º–æ–ª–µ—Ç—ã///
vk.updates.hear(/^(?:—Å–∞–º–æ–ª–µ—Ç—ã|—Å–∞–º–æ–ª—ë—Ç—ã)\s?([1-8]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let i = message.$match[1];
	let air = airs.find(x=> x.id === Number(i));
	if(user.home < 2) return message.send(`üõ© ‚ûæ –ß—Ç–æ–±—ã –∫—É–ø–∏—Ç—å —Å–∞–º–æ–ª—ë—Ç –≤–∞–º –Ω—É–∂–µ–Ω –¥–æ–º 2 —É—Ä–æ–≤–Ω—è!`);
	if(!message.$match[1]){
		message.send(`
üõ© –°–∞–º–æ–ª—ë—Ç—ã üõ©`+(user.home < airs.find(x=> x.id === 1).lvl ? `` : `\n1‚É£${airs.find(x=> x.id === 1).name} | ${spaces(homes.find(x=> x.id === 1).count)}$${airs.find(x=> x.id === 1).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < airs.find(x=> x.id === 2).lvl ? `` : `\n2‚É£${airs.find(x=> x.id === 2).name} | ${spaces(homes.find(x=> x.id === 2).count)}$${airs.find(x=> x.id === 2).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < airs.find(x=> x.id === 3).lvl ? `` : `\n3‚É£${airs.find(x=> x.id === 3).name} | ${spaces(homes.find(x=> x.id === 3).count)}$${airs.find(x=> x.id === 3).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < airs.find(x=> x.id === 4).lvl ? `` : `\n4‚É£${airs.find(x=> x.id === 4).name} | ${spaces(homes.find(x=> x.id === 4).count)}$${airs.find(x=> x.id === 4).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < airs.find(x=> x.id === 5).lvl ? `` : `\n5‚É£${airs.find(x=> x.id === 5).name} | ${spaces(homes.find(x=> x.id === 5).count)}$${airs.find(x=> x.id === 5).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < airs.find(x=> x.id === 6).lvl ? `` : `\n6‚É£${airs.find(x=> x.id === 6).name} | ${spaces(homes.find(x=> x.id === 6).count)}$${airs.find(x=> x.id === 6).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < airs.find(x=> x.id === 7).lvl ? `` : `\n7‚É£${airs.find(x=> x.id === 7).name} | ${spaces(homes.find(x=> x.id === 7).count)}$${airs.find(x=> x.id === 7).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < airs.find(x=> x.id === 8).lvl ? `` : `\n8‚É£${airs.find(x=> x.id === 8).name} | ${spaces(homes.find(x=> x.id === 8).count)}$${airs.find(x=> x.id === 8).count > user.balance ? 'üîπ' : 'üî∏'}`)+`

üõí –î–ª—è –ø–æ–∫—É–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ¬´–°–∞–º–æ–ª–µ—Ç—ã [ID]¬ª
üõí –î–ª—è –ø—Ä–æ–¥–∞–∂–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ¬´–ü—Ä–æ–¥–∞—Ç—å —Å–∞–º–æ–ª—ë—Ç¬ª (80%)
		`)
	}
 	if(i < 0 || i > airs.length - 1) return;
 	if(user.air != 0) return message.send(`üõ© ‚ûæ –£ –≤–∞—Å —É–∂–µ –∫—É–ø–ª–µ–Ω —Å–∞–º–æ–ª—ë—Ç ${airs.find(x=> x.id === user.air).name}!`);
 	if(user.home <= air.lvl) return message.send(`üõ© ‚ûæ –î–∞–Ω–Ω—ã–π —Å–∞–º–æ–ª—ë—Ç –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Å ${air.lvl} —É—Ä–æ–≤–Ω—è!`);
	if(user.balance < air.count) return message.send(`üõ© ‚ûæ –£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${spaces(air.count - user.balance)}$!`,{ attachment: market_m,  keyboard: JSON.stringify(donat) });
	await user.dec("balance", air.count);
	await user.set("air", air.id);
	log[user.number].push(`–ö—É–ø–∏–ª —Å–∞–º–æ–ª—ë—Ç (${air.name}) –∑–∞ ${spaces(air.count)}$ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
	message.send(`üõ© ‚ûæ –í—ã –∫—É–ø–∏–ª–∏ —Å–∞–º–æ–ª–µ—Ç (${air.name}) –∑–∞ ${spaces(air.count)}$!`);
 	return user.save()
});

///–¢–µ–ª–µ—Ñ–æ–Ω—ã///
vk.updates.hear(/^(?:—Ç–µ–ª–µ—Ñ–æ–Ω—ã)\s?([1-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let i = message.$match[1];
	let phone = phones.find(x=> x.id === Number(i));
 	if(!message.$match[1]){
 		message.send(`
üì± –¢–µ–ª–µ—Ñ–æ–Ω—ã üì±`+(user.home < phones.find(x=> x.id === 1).lvl ? `` : `\n1‚É£${phones.find(x=> x.id === 1).name} | ${spaces(phones.find(x=> x.id === 1).count)}$${phones.find(x=> x.id === 1).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < phones.find(x=> x.id === 2).lvl ? `` : `\n2‚É£${phones.find(x=> x.id === 2).name} | ${spaces(phones.find(x=> x.id === 2).count)}$${phones.find(x=> x.id === 2).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < phones.find(x=> x.id === 3).lvl ? `` : `\n3‚É£${phones.find(x=> x.id === 3).name} | ${spaces(phones.find(x=> x.id === 3).count)}$${phones.find(x=> x.id === 3).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < phones.find(x=> x.id === 4).lvl ? `` : `\n4‚É£${phones.find(x=> x.id === 4).name} | ${spaces(phones.find(x=> x.id === 4).count)}$${phones.find(x=> x.id === 4).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < phones.find(x=> x.id === 5).lvl ? `` : `\n5‚É£${phones.find(x=> x.id === 5).name} | ${spaces(phones.find(x=> x.id === 5).count)}$${phones.find(x=> x.id === 5).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < phones.find(x=> x.id === 6).lvl ? `` : `\n6‚É£${phones.find(x=> x.id === 6).name} | ${spaces(phones.find(x=> x.id === 6).count)}$${phones.find(x=> x.id === 6).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < phones.find(x=> x.id === 7).lvl ? `` : `\n7‚É£${phones.find(x=> x.id === 7).name} | ${spaces(phones.find(x=> x.id === 7).count)}$${phones.find(x=> x.id === 7).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < phones.find(x=> x.id === 8).lvl ? `` : `\n8‚É£${phones.find(x=> x.id === 8).name} | ${spaces(phones.find(x=> x.id === 8).count)}$${phones.find(x=> x.id === 8).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < phones.find(x=> x.id === 9).lvl ? `` : `\n9‚É£${phones.find(x=> x.id === 9).name} | ${spaces(phones.find(x=> x.id === 9).count)}$${phones.find(x=> x.id === 9).count > user.balance ? 'üîπ' : 'üî∏'}`)+`

üõí –î–ª—è –ø–æ–∫—É–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ¬´–¢–µ–ª–µ—Ñ–æ–Ω—ã [ID]¬ª
üõí –î–ª—è –ø—Ä–æ–¥–∞–∂–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ¬´–ü—Ä–æ–¥–∞—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω¬ª (80%)
 		`);
 	}
 	if(i < 0 || i > phones.length - 1) return;
 	if(user.phone != 0) return message.send(`üì± ‚ûæ –£ –≤–∞—Å —É–∂–µ –∫—É–ø–ª–µ–Ω —Ç–µ–ª–µ—Ñ–æ–Ω ${phones.find(x=> x.id === user.phone).name}!`);
 	if(user.home <= phone.lvl) return message.send(`üì± ‚ûæ –î–∞–Ω–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Å ${phone.lvl} —É—Ä–æ–≤–Ω—è!`);
	if(user.balance < phone.count) return message.send(`üì± ‚ûæ –£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${spaces(phone.count - user.balance)}$!`,{ attachment: market_m,  keyboard: JSON.stringify(donat) });
	await user.dec("balance", phone.count);
	await user.set("phone", phone.id);
	log[user.number].push(`–ö—É–ø–∏–ª —Ç–µ–ª–µ—Ñ–æ–Ω (${phone.name}) –∑–∞ ${spaces(phone.count)}$ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		message.send(`üì± ‚ûæ –í—ã –∫—É–ø–∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω (${phone.name}) –∑–∞ ${spaces(phone.count)}$!`);
 	return user.save()
});

///–í–µ—Ä—Ç–æ–ª–µ—Ç—ã///
vk.updates.hear(/^(?:–≤–µ—Ä—Ç–æ–ª–µ—Ç—ã|–≤–µ—Ä—Ç–æ–ª—ë—Ç—ã)\s?([1-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let i = message.$match[1];
	let hel = hels.find(x=> x.id === Number(i));
	if(user.home < 4) return message.send(`üõ© ‚ûæ –ß—Ç–æ–±—ã –∫—É–ø–∏—Ç—å –≤–µ—Ä—Ç–æ–ª—ë—Ç –≤–∞–º –Ω—É–∂–µ–Ω –¥–æ–º 4 —É—Ä–æ–≤–Ω—è!`);
	if(!message.$match[1]){
		message.send(`
üöÅ –í–µ—Ä—Ç–æ–ª–µ—Ç—ã üöÅ`+(user.home < hels.find(x=> x.id === 1).lvl ? `` : `\n1‚É£${hels.find(x=> x.id === 1).name} | ${spaces(hels.find(x=> x.id === 1).count)}$${hels.find(x=> x.id === 1).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < hels.find(x=> x.id === 2).lvl ? `` : `\n2‚É£${hels.find(x=> x.id === 2).name} | ${spaces(hels.find(x=> x.id === 2).count)}$${hels.find(x=> x.id === 2).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < hels.find(x=> x.id === 3).lvl ? `` : `\n3‚É£‚É£${hels.find(x=> x.id === 3).name} | ${spaces(hels.find(x=> x.id === 3).count)}$${hels.find(x=> x.id === 3).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < hels.find(x=> x.id === 4).lvl ? `` : `\n4‚É£${hels.find(x=> x.id === 4).name} | ${spaces(hels.find(x=> x.id === 4).count)}$${hels.find(x=> x.id === 4).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < hels.find(x=> x.id === 5).lvl ? `` : `\n5‚É£${hels.find(x=> x.id === 5).name} | ${spaces(hels.find(x=> x.id === 5).count)}$${hels.find(x=> x.id === 5).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < hels.find(x=> x.id === 6).lvl ? `` : `\n6‚É£${hels.find(x=> x.id === 6).name} | ${spaces(hels.find(x=> x.id === 6).count)}$${hels.find(x=> x.id === 6).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < hels.find(x=> x.id === 7).lvl ? `` : `\n7‚É£${hels.find(x=> x.id === 7).name} | ${spaces(hels.find(x=> x.id === 7).count)}$${hels.find(x=> x.id === 7).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < hels.find(x=> x.id === 8).lvl ? `` : `\n8‚É£${hels.find(x=> x.id === 8).name} | ${spaces(hels.find(x=> x.id === 8).count)}$${hels.find(x=> x.id === 8).count > user.balance ? 'üîπ' : 'üî∏'}`)+`

üõí –î–ª—è –ø–æ–∫—É–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ¬´–í–µ—Ä—Ç–æ–ª—ë—Ç—ã [ID]¬ª
üõí –î–ª—è –ø—Ä–æ–¥–∞–∂–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ¬´–ü—Ä–æ–¥–∞—Ç—å –≤–µ—Ä—Ç–æ–ª–µ—Ç¬ª (80%)
		`)
	}
 	if(i < 0 || i > hels.length - 1) return;
 	if(user.hel != 0) return message.send(`üöÅ ‚ûæ –£ –≤–∞—Å —É–∂–µ –∫—É–ø–ª–µ–Ω –≤–µ—Ä—Ç–æ–ª—ë—Ç ${hel.find(x=> x.id === user.hel).name}!`);
 	if(user.home <= hel.lvl) return message.send(`üöÅ ‚ûæ –î–∞–Ω–Ω—ã–π –≤–µ—Ä—Ç–æ–ª—ë—Ç –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Å ${phone.lvl} —É—Ä–æ–≤–Ω—è!`);
	if(user.balance < hel.count) return message.send(`üöÅ ‚ûæ –£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${spaces(hel.count - user.balance)}$!`,{ attachment: market_m,  keyboard: JSON.stringify(donat) });
	await user.dec("balance", hel.count);
	await user.set("hel", hel.id);
	log[user.number].push(`–ö—É–ø–∏–ª –≤–µ—Ä—Ç–æ–ª—ë—Ç (${hel.name}) –∑–∞ ${spaces(hel.count)}$ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		message.send(`üöÅ ‚ûæ –í—ã –∫—É–ø–∏–ª–∏ –≤–µ—Ä—Ç–æ–ª–µ—Ç (${hel.name}) –∑–∞ ${spaces(hel.count)}$!`);
 	return user.save()
});

///–õ–æ–¥–∫–∏///
vk.updates.hear(/^(?:–ª–æ–¥–∫–∏)\s?([1-9,10]+)?/i, async message => {
	msg();
	let user = await userq;
 	let i = message.$match[1];
	let boat = boats.find(x=> x.id === Number(i));
	if(user.home < 2) return message.send(`üõ© ‚ûæ –ß—Ç–æ–±—ã –∫—É–ø–∏—Ç—å –ª–æ–¥–∫—É –≤–∞–º –Ω—É–∂–µ–Ω –¥–æ–º 2 —É—Ä–æ–≤–Ω—è!`);
 	if(!message.$match[1]){
 		message.send(`
üö§ –õ–æ–¥–∫–∏ üö§`+(user.home < boats.find(x=> x.id === 1).lvl ? `` : `\n1‚É£${boats.find(x=> x.id === 1).name} | ${spaces(boats.find(x=> x.id === 1).count)}$${boats.find(x=> x.id === 1).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < boats.find(x=> x.id === 2).lvl ? `` : `\n2‚É£${boats.find(x=> x.id === 2).name} | ${spaces(boats.find(x=> x.id === 2).count)}$${boats.find(x=> x.id === 2).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < boats.find(x=> x.id === 3).lvl ? `` : `\n3‚É£${boats.find(x=> x.id === 3).name} | ${spaces(boats.find(x=> x.id === 3).count)}$${boats.find(x=> x.id === 3).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < boats.find(x=> x.id === 4).lvl ? `` : `\n4‚É£${boats.find(x=> x.id === 4).name} | ${spaces(boats.find(x=> x.id === 4).count)}$${boats.find(x=> x.id === 4).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < boats.find(x=> x.id === 5).lvl ? `` : `\n5‚É£${boats.find(x=> x.id === 5).name} | ${spaces(boats.find(x=> x.id === 5).count)}$${boats.find(x=> x.id === 5).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < boats.find(x=> x.id === 6).lvl ? `` : `\n6‚É£${boats.find(x=> x.id === 6).name} | ${spaces(boats.find(x=> x.id === 6).count)}$${boats.find(x=> x.id === 6).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < boats.find(x=> x.id === 7).lvl ? `` : `7‚É£${boats.find(x=> x.id === 7).name} | ${spaces(boats.find(x=> x.id === 7).count)}$${boats.find(x=> x.id === 7).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < boats.find(x=> x.id === 8).lvl ? `` : `\n8‚É£${boats.find(x=> x.id === 8).name} | ${spaces(boats.find(x=> x.id === 8).count)}$${boats.find(x=> x.id === 8).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < boats.find(x=> x.id === 9).lvl ? `` : `\n9‚É£${boats.find(x=> x.id === 9).name} | ${spaces(boats.find(x=> x.id === 9).count)}$${boats.find(x=> x.id === 9).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < boats.find(x=> x.id === 10).lvl ? `` : `\nüîü${boats.find(x=> x.id === 10).name} | ${spaces(boats.find(x=> x.id === 10).count)}$${boats.find(x=> x.id === 10).count > user.balance ? 'üîπ' : 'üî∏'}`)+`

üõí –î–ª—è –ø–æ–∫—É–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ¬´–õ–æ–¥–∫–∏ [ID]¬ª
üõí –î–ª—è –ø—Ä–æ–¥–∞–∂–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ¬´–ü—Ä–æ–¥–∞—Ç—å –ª–æ–¥–∫—É¬ª (80%)
 		`);
 	}
 	if(i < 0 || i > boats.length - 1) return;
 	if(user.boat != 0) return message.send(`üö§ ‚ûæ –£ –≤–∞—Å —É–∂–µ –∫—É–ø–ª–µ–Ω–∞ –ª–æ–¥–∫–∞ ${boats.find(x=> x.id === user.boat).name}!`);
 	if(user.home <= boat.lvl) return message.send(`üö§ ‚ûæ –î–∞–Ω–Ω–∞—è –ª–æ–¥–∫–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Å ${boat.lvl} —É—Ä–æ–≤–Ω—è!`);
	if(user.balance < boat.count) return message.send(`üö§ ‚ûæ –£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${spaces(boat.count - user.balance)}$!`,{ attachment: market_m,  keyboard: JSON.stringify(donat) });
	await user.dec("balance", boat.count);
	await user.set("boat", boat.id);
	log[user.number].push(`–ö—É–ø–∏–ª –ª–æ–¥–∫—É (${boat.name}) –∑–∞ ${spaces(boat.count)}$ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		message.send(`üö§ ‚ûæ –í—ã –∫—É–ø–∏–ª–∏ –ª–æ–¥–∫—É (${boat.name}) –∑–∞ ${spaces(boat.count)}$!`);
 	return user.save()
});

///–ú–∞—à–∏–Ω—ã///
vk.updates.hear(/^(?:–º–∞—à–∏–Ω—ã)\s?([1-9,10]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let i = message.$match[1];
	let car = cars.find(x=> x.id === Number(i));
	if(user.home < 3) return message.send(`üõ© ‚ûæ –ß—Ç–æ–±—ã –∫—É–ø–∏—Ç—å –º–∞—à–∏–Ω—É –≤–∞–º –Ω—É–∂–µ–Ω –¥–æ–º 3 —É—Ä–æ–≤–Ω—è!`);
	if(!message.$match[1]){
		message.send(`
üöó –ú–∞—à–∏–Ω—ã üöó`+(user.home < cars.find(x=> x.id === 1).lvl ? `` : `\n1‚É£${cars.find(x=> x.id === 1).name} | ${spaces(cars.find(x=> x.id === 1).count)}$${cars.find(x=> x.id === 1).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < cars.find(x=> x.id === 2).lvl ? `` : `\n2‚É£${cars.find(x=> x.id === 2).name} | ${spaces(cars.find(x=> x.id === 2).count)}$${cars.find(x=> x.id === 2).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < cars.find(x=> x.id === 3).lvl ? `` : `\n3‚É£${cars.find(x=> x.id === 3).name} | ${spaces(cars.find(x=> x.id === 3).count)}$${cars.find(x=> x.id === 3).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < cars.find(x=> x.id === 4).lvl ? `` : `\n4‚É£${cars.find(x=> x.id === 4).name} | ${spaces(cars.find(x=> x.id === 4).count)}$${cars.find(x=> x.id === 4).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < cars.find(x=> x.id === 5).lvl ? `` : `\n5‚É£${cars.find(x=> x.id === 5).name} | ${spaces(cars.find(x=> x.id === 5).count)}$${cars.find(x=> x.id === 5).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < cars.find(x=> x.id === 6).lvl ? `` : `\n6‚É£${cars.find(x=> x.id === 6).name} | ${spaces(cars.find(x=> x.id === 6).count)}$${cars.find(x=> x.id === 6).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < cars.find(x=> x.id === 7).lvl ? `` : `\n7‚É£${cars.find(x=> x.id === 7).name} | ${spaces(cars.find(x=> x.id === 7).count)}$${cars.find(x=> x.id === 7).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < cars.find(x=> x.id === 8).lvl ? `` : `\n8‚É£${cars.find(x=> x.id === 8).name} | ${spaces(cars.find(x=> x.id === 8).count)}$${cars.find(x=> x.id === 8).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < cars.find(x=> x.id === 9).lvl ? `` : `\n9‚É£${cars.find(x=> x.id === 9).name} | ${spaces(cars.find(x=> x.id === 9).count)}$${cars.find(x=> x.id === 9).count > user.balance ? 'üîπ' : 'üî∏'}`)+
(user.home < cars.find(x=> x.id === 10).lvl ? `` : `\nüîü${cars.find(x=> x.id === 10).name} | ${spaces(cars.find(x=> x.id === 10).count)}$${cars.find(x=> x.id === 10).count > user.balance ? 'üîπ' : 'üî∏'}`)+`

üõí –î–ª—è –ø–æ–∫—É–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ¬´–ú–∞—à–∏–Ω—ã [ID]¬ª
üõí –î–ª—è –ø—Ä–æ–¥–∞–∂–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ¬´–ü—Ä–æ–¥–∞—Ç—å –º–∞—à–∏–Ω—É¬ª (80%)
		`)
	}
 	if(i < 0 || i > cars.length - 1) return;
 	if(user.car != 0) return message.send(`üöó ‚ûæ –£ –≤–∞—Å —É–∂–µ –∫—É–ø–ª–µ–Ω–∞ –º–∞—à–∏–Ω–∞ ${cars.find(x=> x.id === user.car).name}!`);
 	if(user.home <= car.lvl) return message.send(`üöó ‚ûæ –î–∞–Ω–Ω–∞—è –º–∞—à–∏–Ω–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Å ${car.lvl} —É—Ä–æ–≤–Ω—è!`);
	if(user.balance < car.count) return message.send(`üöó ‚ûæ –£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${spaces(car.count - user.balance)}$!`,{ attachment: market_m,  keyboard: JSON.stringify(donat) });
	await user.dec("balance", car.count);
	await user.set("car", car.id);
	log[user.number].push(`–ö—É–ø–∏–ª –º–∞—à–∏–Ω—É (${car.name}) –∑–∞ ${spaces(car.count)}$ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
	message.send(`üöó ‚ûæ –í—ã –∫—É–ø–∏–ª–∏ –º–∞—à–∏–Ω—É (${car.name}) –∑–∞ ${spaces(car.count)}$!`);
 	return user.save()
});

///–ü—Ä–æ–¥–∞—Ç—å —Ä–∏–∫–ª—ã///
vk.updates.hear(/(?:–ø—Ä–æ–¥–∞—Ç—å —Ä–∏–∫–ª—ã|–ø—Ä–æ–¥–∞—Ç—å —Ä–∏–∫–ª|–æ–±–º–µ–Ω—è—Ç—å —Ä–∏–∫–ª—ã|–æ–±–º–µ–Ω—è—Ç—å —Ä–∏–∫–ª)\s?(.*)/i, async  (message) => {
	msg();
	let user = await userq;
	if(!message.$match[1]) return message.send(`üìù ‚ûæ –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∏–∫–ª–æ–≤ –¥–ª—è –æ–±–º–µ–Ω–∞`);
	message.$match[1] = message.$match[1].replace(/(\.|\,)/ig, '');
	message.$match[1] = message.$match[1].replace(/(–∫|k)/ig, '000');
	message.$match[1] = message.$match[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤–±|–≤—Å—ë)/ig, user.don);
	if(user.don < message.$match[1]) return message.send(`üìù ‚ûæ –£ –≤–∞—Å –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ —Ä–∏–∫–ª–æ–≤!`);
 	await user.dec("don", message.$match[1]);
	await user.inc("balance", Math.floor(message.$match[1] * config.donate));
	log[user.number].push(`–û–±–º–µ–Ω—è–ª ${message.$match[1]} ${rikl(message.$match[1])} –Ω–∞ ${spaces(message.$match[1] * config.donate)}$. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$ –†–∏–∫–ª–æ–≤: ${user.don}`);
	message.reply(`üìù ‚ûæ –í—ã –æ–±–º–µ–Ω—è–ª–∏ ${message.$match[1]} ${rikl(message.$match[1])} –Ω–∞ ${spaces(message.$match[1] * config.donate)}$`);
	return user.save()
});

///–ü—Ä–æ–¥–∞—Ç—å —Ä–æ–±–æ—Ç–æ–≤///
vk.updates.hear(/^(?:–ø—Ä–æ–¥–∞—Ç—å —Ä–æ–±–æ—Ç–æ–≤|–ø—Ä–æ–¥–∞—Ç—å —Ä–æ–±|–ø—Ä–æ–¥–∞—Ç—å —Ä–æ–±–æ—Ç—ã)\s?(.*)/i, async (message) => {
	msg();
	let user = await userq;
	if(!message.$match[1]){
		if(user.rob > 0){
			let robs = user.rob
			await user.inc("balance", Math.floor(user.rob * config.robp));
			await user.set("rob", 0);
			log[user.number].push(`–ü—Ä–æ–¥–∞–ª ${spaces(robs)} ${rob(robs)} –∑–∞ ${spaces(config.robp * message.$match[1])}$ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$ –†–æ–±–æ—Ç–æ–≤: ${spaces(user.rob)}`);
			return message.reply(`ü§ñ ‚ûæ –í—ã –ø—Ä–æ–¥–∞–ª–∏ ${spaces(robs)} ${rob(robs)} –∑–∞ ${spaces(config.robp * robs)}$!`);
		} else {
			return message.send(`ü§ñ ‚ûæ –£ –≤–∞—Å –Ω–µ—Ç—É —Ä–æ–±–æ—Ç–æ–≤.`)
		}
	} else if(message.$match[1]){
		message.$match[1] = message.$match[1].replace(/(\.|\,)/ig, '');
		message.$match[1] = message.$match[1].replace(/(–∫|k)/ig, '000');
		message.$match[1] = message.$match[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤–±|–≤—Å—ë)/ig, user.rob);
		if(!Number(message.$match[1])) return message.send(`ü§ñ ‚ûæ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º!`);
	 	if(user.rob < message.$match[1]) return message.send(`ü§ñ ‚ûæ –£ –≤–∞—Å –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ —Ä–æ–±–æ—Ç–æ–≤.`);
		await user.inc("balance", Math.floor(user.rob * config.robp));
		await user.dec("rob", message.$match[1]);
		log[user.number].push(`–ü—Ä–æ–¥–∞–ª ${spaces(message.$match[1])} ${rob(message.$match[1])} –∑–∞ ${spaces(config.robp * message.$match[1])}$ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$ –†–æ–±–æ—Ç–æ–≤: ${spaces(user.rob)}`);
	 	message.reply(`ü§ñ ‚ûæ –í—ã –ø—Ä–æ–¥–∞–ª–∏ ${spaces(message.$match[1])} ${rob(message.$match[1])} –∑–∞ ${spaces(config.robp * message.$match[1])}$!`);
	}
	return user.save()
});

///–ü—Ä–æ–¥–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥///
vk.updates.hear(/^(?:–ø—Ä–æ–¥–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥)\s?([0-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let count = 125000000
	if(!message.$match[1] || !Number(message.$match[1])) return message.send(`üëë ‚ûæ –£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–π—Ç–∏–Ω–≥–∞.`);
	if(user.gl < message.$match[1]) return message.send(`üëë ‚ûæ –£ –≤–∞—Å –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ —Ä–µ–π—Ç–∏–Ω–≥–∞.`)
	await user.inc("balance", Math.floor(message.$match[1] * count));
	await user.dec("gl", message.$match[1]);
	message.reply(`üëë ‚ûæ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–∞–ª–∏ ${spaces(message.$match[1])} —Ä–µ–π—Ç–∏–Ω–≥–∞ –∑–∞ ${spaces(message.$match[1] * count)}$!`);
	return user.save()
});

///–ü—Ä–æ–¥–∞—Ç—å —Å–±–æ—Ä–æ—á–Ω—ã–µ///
vk.updates.hear(/^(?:–ø—Ä–æ–¥–∞—Ç—å —Å–±–æ—Ä–æ—á–Ω—ã–µ|–ø—Ä–æ–¥–∞—Ç—å —Å–±–æ—Ä)\s([^]+)?/i, async (message) => {
	msg();
	let user = await userq;
	if(!Number(message.$match[1])) return message.send(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º!`); 
	if(user.fabric.id == 0) return message.send(`–£ –≤–∞—Å –Ω–µ—Ç —Å–±–æ—Ä–æ—á–Ω—ã—Ö!`); 
	if(message.$match[1] > user.fabric.sum) return message.send(`–£ –≤–∞—Å –Ω–µ—Ç—É —Å—Ç–æ–ª—å–∫–æ —Å–±–æ—Ä–æ—á–Ω—ã—Ö!`);
	let ids = user.fabric.id;
	let sb = fabric.find(x=> x.id === user.fabric.id);
	let per = sb.count * message.$match[1]
	let rep = per / 100
	let col = rep * 60
	user.fabric.sum -= message.$match[1];
	if(user.fabric.sum == 0){
		await user.inc("balance", Math.floor(col));
		user.fabric.id = 0;
		log[user.number].push(`–ü—Ä–æ–¥–∞–ª –≤—Å–µ —Å–±–æ—Ä–æ—á–Ω—ã–µ (${sb.name}) –∑–∞ ${spaces(col)}$ [id —Å–±–æ—Ä–æ—á–Ω—ã—Ö: ${ids}] –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		message.reply(`üè¢ ‚ûæ –í—ã –ø—Ä–æ–¥–∞–ª–∏ –≤—Å–µ "${sb.name}" –∑–∞ ${spaces(col)}$!`);
	};
	if(user.fabric.id == 1){
		await user.inc("balance", Math.floor(col));
		log[user.number].push(`–ü—Ä–æ–¥–∞–ª ${spaces(message.$match[1])} —Å–±–æ—Ä–æ—á–Ω—ã—Ö (${sb.name}) –∑–∞ ${spaces(col)}$ [id —Å–±–æ—Ä–æ—á–Ω—ã—Ö: ${ids}] –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		message.reply(`üè¢ ‚ûæ –í—ã –ø—Ä–æ–¥–∞–ª–∏ "${sb.name}" (${spaces(message.$match[1])} —à—Ç.) –∑–∞ ${spaces(col)}$!`);
	};
	if(user.fabric.id == 2){
		await user.inc("balance", Math.floor(col));
		log[user.number].push(`–ü—Ä–æ–¥–∞–ª ${spaces(message.$match[1])} —Å–±–æ—Ä–æ—á–Ω—ã—Ö (${sb.name}) –∑–∞ ${spaces(col)}$ [id —Å–±–æ—Ä–æ—á–Ω—ã—Ö: ${ids}] –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		message.reply(`üè¢ ‚ûæ –í—ã –ø—Ä–æ–¥–∞–ª–∏ "${sb.name}" (${spaces(message.$match[1])} —à—Ç.) –∑–∞ ${spaces(col)}$!`);
	};
	if(user.fabric.id == 3){
		await user.inc("balance", Math.floor(col));
		log[user.number].push(`–ü—Ä–æ–¥–∞–ª ${spaces(message.$match[1])} —Å–±–æ—Ä–æ—á–Ω—ã—Ö (${sb.name}) –∑–∞ ${spaces(col)}$ [id —Å–±–æ—Ä–æ—á–Ω—ã—Ö: ${ids}] –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		message.reply(`üè¢ ‚ûæ –í—ã –ø—Ä–æ–¥–∞–ª–∏ "${sb.name}" (${spaces(message.$match[1])} —à—Ç.) –∑–∞ ${spaces(col)}$!`);
	};
	if(user.fabric.id == 4){
		await user.inc("balance", Math.floor(col));
		log[user.number].push(`–ü—Ä–æ–¥–∞–ª ${spaces(message.$match[1])} —Å–±–æ—Ä–æ—á–Ω—ã—Ö (${sb.name}) –∑–∞ ${spaces(col)}$ [id —Å–±–æ—Ä–æ—á–Ω—ã—Ö: ${ids}] –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		message.reply(`üè¢ ‚ûæ –í—ã –ø—Ä–æ–¥–∞–ª–∏ "${sb.name}" (${spaces(message.$match[1])} —à—Ç.) –∑–∞ ${spaces(col)}$!`);
	};
	return user.save()
});

///–ü—Ä–æ–¥–∞—Ç—å///
vk.updates.hear(/^(?:–ø—Ä–æ–¥–∞—Ç—å)\s([^]+)?\s?(.*)/i, async (message) => {
	msg();
	let user = await userq;
	if(/–ª–æ–¥–∫—É/i.test(message.$match[1].toLowerCase())){
 		if(user.boat == 0) return message.send(`–£ –≤–∞—Å –Ω–µ—Ç –ª–æ–¥–∫–∏!`);
		let boat = boats.find(x=> x.id === user.boat);
 		let sum = boat.count / 100 * 80
		await user.inc("balance", Math.floor(sum));
		log[user.number].push(`–ü—Ä–æ–¥–∞–ª –ª–æ–¥–∫—É (${boat.name}) –∑–∞ ${spaces(sum)}$ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		await user.set("boat", 0);
 		return message.send(`üö§ ‚ûæ –í—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ—é –ª–æ–¥–∫—É –∑–∞ ${spaces(sum)}$!`);
 	}
	if(/—Å–∞–º–æ–ª(–µ|—ë|–π–æ)—Ç/i.test(message.$match[1].toLowerCase())){
		if(user.air == 0) return message.send(`–£ –≤–∞—Å –Ω–µ—Ç —Å–∞–º–æ–ª–µ—Ç–∞!`);
		let air = airs.find(x=> x.id === user.air)
		let sum = air.count / 100 * 80
		await user.inc("balance", Math.floor(sum));
		log[user.number].push(`–ü—Ä–æ–¥–∞–ª —Å–∞–º–æ–ª—ë—Ç (${air.name}) –∑–∞ ${spaces(sum)}$ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		await user.set("air", 0);
		return message.send(`üõ© ‚ûæ –í—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π —Å–∞–º–æ–ª–µ—Ç –∑–∞ ${spaces(sum)}$!`);
 	}
	if(/—Ç–µ–ª–µ—Ñ–æ–Ω/i.test(message.$match[1].toLowerCase())){
 		if(user.phone == 0) return message.send(`–£ –≤–∞—Å –Ω–µ—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞!`);
		let phone = phones.find(x=> x.id === user.phone)
		let sum = phone.count / 100 * 80
		await user.inc("balance", Math.floor(sum));
		log[user.number].push(`–ü—Ä–æ–¥–∞–ª —Ç–µ–ª–µ—Ñ–æ–Ω (${phone.name}) –∑–∞ ${spaces(sum)}$ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: 	${spaces(user.balance)}$`);
		await user.set("phone", 0);
 		return message.send(`üì± ‚ûæ –í—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω –∑–∞ ${spaces(sum)}$!`);
 	}
	if(/–≤(–∏|–µ|—è|—ë)—Ä—Ç(–∞|–æ)–ª(–µ|—ë|–π–æ)—Ç/i.test(message.$match[1].toLowerCase())){
 		if(user.hel == 0) return message.send(`–£ –≤–∞—Å –Ω–µ—Ç –≤–µ—Ä—Ç–æ–ª–µ—Ç–∞!`);
		let hel = hels.find(x=> x.id === user.hel);
 		let sum = hel.count / 100 * 80
		await user.inc("balance", Math.floor(sum));
		log[user.number].push(`–ü—Ä–æ–¥–∞–ª –≤–µ—Ä—Ç–æ–ª—ë—Ç (${hel.name}) –∑–∞ ${spaces(sum)}$ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}`);
		await user.set("hel", 0);
 		return message.send(`üöÅ ‚ûæ –í—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π –≤–µ—Ä—Ç–æ–ª–µ—Ç –∑–∞ ${spaces(sum)}$!`);
 	}
	if(/–º–∞—à–∏–Ω/i.test(message.$match[1].toLowerCase())){
 		if(user.cars == 0) return message.send(`–£ –≤–∞—Å –Ω–µ—Ç –º–∞—à–∏–Ω—ã!`);
		let car = cars.find(x=> x.id === user.car);
 		let sum = car.count / 100 * 80
		await user.inc("balance", Math.floor(sum));
		log[user.number].push(`–ü—Ä–æ–¥–∞–ª –º–∞—à–∏–Ω—É (${car.name}) –∑–∞ ${spaces(sum)}$ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		await user.set("car", 0);
 		return message.send(`üöó ‚ûæ –í—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ—é –º–∞—à–∏–Ω—É –∑–∞ ${spaces(sum)}$!`);
 	}
	if(/–±–∏–∑–Ω–µ—Å/i.test(message.$match[1].toLowerCase())){
 		let biz = bizs.find(x=> x.id === user.biz.id);
		if(user.biz.id == 0) return message.send(`üè¢ ‚ûæ –£ –≤–∞—Å –Ω–µ—Ç –±–∏–∑–Ω–µ—Å–∞.`)
		let sum = biz.count / 100 * 80
		let name = biz.name
		await user.inc("balance", Math.floor(sum));
		log[user.number].push(`–ü—Ä–æ–¥–∞–ª –±–∏–∑–Ω–µ—Å (${name}) –∑–∞ ${spaces(sum)}$. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		user.biz.id = 0;
		user.biz.peop = 0;
		await user.save()
		return message.send(`üè¢ ‚ûæ –í—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π –±–∏–∑–Ω–µ—Å "${name}" –∑–∞ ${spaces(sum)}$`);
 	}
	if(/kryptonite|–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç|–∫/i.test(message.$match[1].toLowerCase())){
		if(user.mine.krypt > 0){
			let kryptonite = user.mine.krypt;
			let count = user.mine.krypt * config.kryp;
			await user.inc("balance", Math.floor(count));
			user.mine.krypt = 0;
			log[user.number].push(`–ü—Ä–æ–¥–∞–ª ${spaces(kryptonite)} –∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç–∞ –∑–∞ ${spaces(count)}$. –í—Ä–µ–º—è: ${time()}|${data()}`);
			message.reply(`üåü ‚ûæ –í—ã –ø—Ä–æ–¥–∞–ª–∏ ${spaces(kryptonite)} –∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç–∞ –∑–∞ ${spaces(count)}$!`);
		} else {
			message.reply(`üåü ‚ûæ –í—ã –µ—â–µ –Ω–µ –¥–æ–±—ã–ª–∏ –∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç!`);
		};
		return user.save()
 	}
	if(/vibranium|–≤–∏–±—Ä–∞–Ω–∏—É–º|–≤/i.test(message.$match[1].toLowerCase())){
		if(user.mine.vibr > 0){
			let vibranium = user.mine.vibr;
			let count = user.mine.vibr * config.vibr;
			await user.inc("balance", Math.floor(count));
			user.mine.vibr = 0;
			log[user.number].push(`–ü—Ä–æ–¥–∞–ª ${spaces(vibranium)} –≤–∏–±—Ä–∞–Ω–∏—É–º–∞ –∑–∞ ${spaces(count)}$. –í—Ä–µ–º—è: ${time()}|${data()}`);
			message.reply(`üåü ‚ûæ –í—ã –ø—Ä–æ–¥–∞–ª–∏ ${spaces(vibranium)} –≤–∏–±—Ä–∞–Ω–∏—É–º–∞ –∑–∞ ${spaces(count)}$!`);
		} else {
			message.reply(`üåü ‚ûæ –í—ã –µ—â–µ –Ω–µ –¥–æ–±—ã–ª–∏ –≤–∏–±—Ä–∞–Ω–∏—É–º!`);
		};
		return user.save()
 	}
	if(/adamantium|–∞–¥–∞–º–∞–Ω–∏—Ç–∏—É–º|–∞–¥–∞–º–∞–Ω–∏—Ç|–∞/i.test(message.$match[1].toLowerCase())){
		if(user.mine.adam > 0){
			let adamantium = user.mine.adam;
			let count = user.mine.adam * config.adam;
			await user.inc("balance", Math.floor(count));
			user.mine.adam = 0;
			log[user.number].push(`–ü—Ä–æ–¥–∞–ª ${spaces(adamantium)} –∞–¥–∞–º–∞–Ω–∏—Ç–∏—É–º–∞ –∑–∞ ${spaces(count)}$. –í—Ä–µ–º—è: ${time()}|${data()}`);
			message.reply(`üåü ‚ûæ –í—ã –ø—Ä–æ–¥–∞–ª–∏ ${spaces(adamantium)} –∞–¥–∞–º–∞–Ω–∏—Ç–∏—É–º–∞ –∑–∞ ${spaces(count)}$!`);
		} else {
			message.reply(`üåü ‚ûæ –í—ã –µ—â–µ –Ω–µ –¥–æ–±—ã–ª–∏ –∞–¥–∞–º–∞–Ω–∏—Ç–∏—É–º!`);
		};
		return user.save()
 	}
});

///–ü–∏—Ç–æ–º—Ü—ã///
vk.updates.hear(/^(?:–ø–∏—Ç–æ–º—Ü—ã)\s?([1-9]+)?/i, async message => {
	msg();
	let user = await userq;
 	let i = Number(message.$match[1]);
	let pet = pets.find(x=> x.id === i);
	let count = 1000000;
	let pech1 = 200;
	let pech2 = 750;
	let pech3 = 3000;
	if(user.home < 10) return message.send(`üêº ‚ûæ –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–µ–æ–±—Ä–µ—Å—Ç–∏ –ø–∏—Ç–æ–º—Ü–∞ —Å 10 —É—Ä–æ–≤–Ω—è –¥–æ–º–∞!`)
 	if(!i){
 		message.send(`
üêº –ü–∏—Ç–æ–º—Ü—ã üêº
${pets.find(x=> x.id === 1).smile}1. ${pets.find(x=> x.id === 1).title}.
${pets.find(x=> x.id === 2).smile}2. ${pets.find(x=> x.id === 2).title}.
${pets.find(x=> x.id === 3).smile}3. ${pets.find(x=> x.id === 3).title}.
${pets.find(x=> x.id === 4).smile}4. ${pets.find(x=> x.id === 4).title}.
${pets.find(x=> x.id === 5).smile}5. ${pets.find(x=> x.id === 5).title}.
${pets.find(x=> x.id === 6).smile}6. ${pets.find(x=> x.id === 6).title}.
${pets.find(x=> x.id === 7).smile}7. ${pets.find(x=> x.id === 7).title}.
${pets.find(x=> x.id === 8).smile}8. ${pets.find(x=> x.id === 8).title}.
${pets.find(x=> x.id === 9).smile}9. ${pets.find(x=> x.id === 9).title}.
${pets.find(x=> x.id === 10).smile}10. ${pets.find(x=> x.id === 10).title}.
üíµ ‚ûæ –¶–µ–Ω–∞ –ø–∏—Ç–æ–º—Ü–∞: ${spaces(count)}$

${pets.find(x=> x.id === 20).smile}11. ${pets.find(x=> x.id === 20).title} (${spaces(pech1)} –ü–µ—á–µ–Ω–µ–∫üç™).
${pets.find(x=> x.id === 21).smile}12. ${pets.find(x=> x.id === 21).title} (${spaces(pech2)} –ü–µ—á–µ–Ω–µ–∫üç™).
${pets.find(x=> x.id === 25).smile}13. ${pets.find(x=> x.id === 25).title} (${spaces(pech3)} –ü–µ—á–µ–Ω–µ–∫üç™).

–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–ü–∏—Ç–æ–º—Ü—ã [–Ω–æ–º–µ—Ä]"
–î–ª—è –ø—Ä–æ–¥–∞–∂–∏ –≤–≤–µ–¥–∏—Ç–µ "–û—Ç–ø—É—Å—Ç–∏—Ç—å –ø–∏—Ç–æ–º—Ü–∞"
–¢–∞–∫ –∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–π—Ç–∏ —Å–æ —Å–≤–æ–∏–º –ø–∏—Ç–æ–º—Ü–µ–º –Ω–∞ "–ø—Ä–æ–≥—É–ª–∫—É"!
 		`);
 	}
 	if(i < 0 || i > 13) return;
 	if(user.pet != 0) return message.send(`üêº ‚ûæ –£ –≤–∞—Å —É–∂–µ –∫—É–ø–ª–µ–Ω –ø–∏—Ç–æ–º–µ—Ü ${pets.find(x=> x.id === user.pet).name}!`);
 	//if(user.inv.pet.length > 5) return message.send(``);
 	if(i > 0 && i < 11){
 		if(user.balance < count) return message.send(`üêº ‚ûæ –£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥!`,{ attachment: market_m,  keyboard: JSON.stringify(donat) });
 		await user.dec("balance", count);
 		await user.set("pet", pet.id);
		log[user.number].push(`–ö—É–ø–∏–ª –ø–∏—Ç–æ–º—Ü–∞ (${pet.title}) –∑–∞ ${spaces(count)}$ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
 		message.send(`${pet.smile} ‚ûæ –í—ã –∫—É–ø–∏–ª–∏ –ø–∏—Ç–æ–º—Ü–∞ (${pet.title}) –∑–∞ ${spaces(count)}$!`);
 	} else if(i > 10 && i < 14){
 		if(i == 11){
			let pet = pets.find(x=> x.id === 20);
			if(user.ev < pech1) return message.send(`üêº ‚ûæ –£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ü–µ—á–µ–Ω–µ–∫!`);
	 		await user.dec("ev", pech1);
			log[user.number].push(`–ö—É–ø–∏–ª –ø–∏—Ç–æ–º—Ü–∞ (${pet.title}) –∑–∞ ${spaces(count)} –ü–µ—á–µ–Ω–µ–∫ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
 			message.send(`${pet.smile} ‚ûæ –í—ã –∫—É–ø–∏–ª–∏ –ø–∏—Ç–æ–º—Ü–∞ ${pet.title} –∑–∞ ${spaces(pech1)} –ü–µ—á–µ–Ω–µ–∫!`);
	 	} else if(i == 12){
			let pet = pets.find(x=> x.id === 21);
			if(user.ev < pech2) return message.send(`üêº ‚ûæ –£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ü–µ—á–µ–Ω–µ–∫!`);
	 		await user.dec("ev", pech2);
			log[user.number].push(`–ö—É–ø–∏–ª –ø–∏—Ç–æ–º—Ü–∞ (${pet.title}) –∑–∞ ${spaces(count)} –ü–µ—á–µ–Ω–µ–∫ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
 			message.send(`${pet.smile} ‚ûæ –í—ã –∫—É–ø–∏–ª–∏ –ø–∏—Ç–æ–º—Ü–∞ ${pet.title} –∑–∞ ${spaces(pech2)} –ü–µ—á–µ–Ω–µ–∫!`);
	 	} else if(i == 13){
			let pet = pets.find(x=> x.id === 25);
			if(user.ev < pech3) return message.send(`üêº ‚ûæ –£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ü–µ—á–µ–Ω–µ–∫!`);
	 		await user.dec("ev", pech3);
			log[user.number].push(`–ö—É–ø–∏–ª –ø–∏—Ç–æ–º—Ü–∞ (${pet.title}) –∑–∞ ${spaces(count)} –ü–µ—á–µ–Ω–µ–∫ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
 			message.send(`${pet.smile} ‚ûæ –í—ã –∫—É–ø–∏–ª–∏ –ø–∏—Ç–æ–º—Ü–∞ ${pet.title} –∑–∞ ${spaces(pech3)} –ü–µ—á–µ–Ω–µ–∫!`);
	 	}
 		await user.set("pet", pet.id);
 	}
 	return user.save()
});

///–û—Ç–ø—É—Å—Ç–∏—Ç—å –ø–∏—Ç–æ–º—Ü–∞///
vk.updates.hear(/^(?:–æ—Ç–ø—É—Å—Ç–∏—Ç—å –ø–∏—Ç–æ–º—Ü–∞|–æ—Ç–ø—É—Å—Ç–∏—Ç—å|–ø—Ä–æ–¥–∞—Ç—å –ø–∏—Ç–æ–º—Ü–∞)/i, async message => {
	msg();
	let user = await userq;
	let pet = pets.find(x=> x.id === user.pet);
 	if(user.pet == 0) return message.send(`–£ –≤–∞—Å –Ω–µ—Ç –ø–∏—Ç–æ–º—Ü–∞!`);
	log[user.number].push(`–û—Ç–ø—É—Å—Ç–∏–ª –ø–∏—Ç–æ–º—Ü–∞ (${pet.title}) –í—Ä–µ–º—è: ${time()}|${data()}`);
 	message.send(`${pet.smile} ‚ûæ –í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—É—Å—Ç–∏–ª–∏ —Å–≤–æ–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞!`);
	await user.set("pet", 0);
 	return user.save()
});

///–ë–æ–Ω—É—Å///
vk.updates.hear(/(?:–±–æ–Ω—É—Å|–ø–æ–¥–∞—Ä–æ–∫)/i, async (message) => {
	msg();
	let user = await userq;
	if(user.block.bonus > getUnix()){
		message.send(`üéÅ >> –í—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å —á–µ—Ä–µ–∑ ${unixStampLeft(user.block.bonus - Date.now())}`);
		return message.sendSticker(10849);
	}
	let stiker = [4494,33].random()
	let count = rand(1,5)
	user.block.bonus = getUnix() + 86400000
	setTimeout(() => {
		log[user.number].push(`–°–Ω—è—Ç –æ—Ç–∫–∞—Ç –ø–æ –±–æ–Ω—É—Å—É. –í—Ä–µ–º—è: ${time()}|${data()}`);
	}, 86400000);
    if(count == 1){
		let count = [1,2,1,1,1,1,1,2,3,1,1,1,1,1].random();
		await user.inc("don", Math.floor(count));
		log[user.number].push(`–ü–æ–ª—É—á–∏–ª –±–æ–Ω—É—Å: —Ä–∏–∫–ª—ã ${count} —à—Ç. –í—Ä–µ–º—è: ${time()}|${data()} –†–∏–∫–ª–æ–≤: ${user.don}`);
		await message.send(`${userp}, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –±–æ–Ω—É—Å: ${count} ${rikl(count)}! ${smilesuc}`);
	};
	if(count == 2){
		let count = [2,4,3,5].random();
		await user.inc("gl", Math.floor(count));
		log[user.number].push(`–ü–æ–ª—É—á–∏–ª –±–æ–Ω—É—Å: —Ä–µ–π—Ç–∏–Ω–≥ ${count} —à—Ç. –í—Ä–µ–º—è: ${time()}|${data()} –†–µ–π—Ç–∏–Ω–≥: ${spaces(user.gl)}`);
		await message.send(`${userp}, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –±–æ–Ω—É—Å: ${spaces(count)} —Ä–µ–π—Ç–∏–Ω–≥–∞üëë! ${smilesuc}`);
	};
	if(count == 3 || count == 4 || count == 5){
		let count = [30000000,50000000,10000000,40000000,70000000,20000000,45000000].random();
		await user.inc("balance", Math.floor(count));
		log[user.number].push(`–ü–æ–ª—É—á–∏–ª –±–æ–Ω—É—Å: –¥–µ–Ω—å–≥–∏ ${spaces(count)}$ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		await message.send(`${userp}, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –±–æ–Ω—É—Å: ${spaces(count)}$! ${smilesuc}`);
	};
	await message.sendSticker(stiker);
	return user.save()
});

///–ö—É—Ä—Å///
vk.updates.hear(/^(?:–∫—É—Ä—Å)/i, async (message) => {
	msg();
	let user = await userq;
	message.send(`
ü§ñ –ö—É—Ä—Å –ø–æ–∫—É–ø–∫–∏ —Ä–æ–±–æ—Ç–æ–≤: ${config.rob}$ ü§ñ
ü§ñ –ö—É—Ä—Å –ø—Ä–æ–¥–∞–∂–∏ —Ä–æ–±–æ—Ç–æ–≤: ${config.robp}$ ü§ñ
	`);
	return user.save();
});

///–¢–∞–±–ª–µ—Ç–∫–∏///
vk.updates.hear(/^(?:—Ç–∞–±–ª–µ—Ç–∫–∏)/i, async (message) => {
	msg();
	let user = await userq;
	message.send(`
üíä–£ –≤–∞—Å ${spaces(user.tabl)} ${tabl(user.tabl, 1)}
üíä–¢–∞–±–ª–µ—Ç–∫–∞ - –ø—Ä–∏–Ω—è—Ç—å —Ç–∞–±–ª–µ—Ç–∫—É
üíä–ö—É–ø–∏—Ç—å —Ç–∞–±–ª–µ—Ç–∫–∏ [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ] - –ø—Ä–∏–∫—É–ø–∏—Ç—å —Ç–∞–±–ª–µ—Ç–∫–∏
	`);
	return user.save();
});

///–¢–∞–±–ª–µ—Ç–∫–∞///
vk.updates.hear(/^(?:—Ç–∞–±–ª–µ—Ç–∫–∞|—Ç–∞–±–ª)/i, async (message) => {
	msg();
	let user = await userq;
	if(user.tabl < 1) return message.send(`üíä–£ –≤–∞—Å –Ω–µ—Ç —Ç–∞–±–ª–µ—Ç–∫–∏!`);
	if(user.heal > 989) return message.send(`üíä–£ –≤–∞—Å —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è!`)
	await user.dec("tabl", 1);
    await user.inc("heal", Math.floor(20));
	log[user.number].push(`–ü—Ä–∏–Ω—è–ª —Ç–∞–±–ª–µ—Ç–∫—É. –ó–¥–æ—Ä–æ–≤—å–µ: ${spaces(user.heal)} –¢–∞–±–ª–µ—Ç–æ–∫: ${spaces(user.tabl)} –í—Ä–µ–º—è: ${time()}|${data()}`);
	message.send(`üíä–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è–ª–∏ —Ç–∞–±–ª–µ—Ç–∫—É!\n‚ù§–ó–¥–æ—Ä–æ–≤—å–µ: ${spaces(user.heal)}`)
	return user.save()
});

///–ö—É–ø–∏—Ç—å —Ç–∞–±–ª–µ—Ç–∫–∏///
vk.updates.hear(/^(?:–∫—É–ø–∏—Ç—å —Ç–∞–±–ª–µ—Ç–∫—É|–∫—É–ø–∏—Ç—å —Ç–∞–±–ª–µ—Ç–∫–∏|–∫—É–ø–∏—Ç—å —Ç–∞–±–ª)\s?([0-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let count = 500000;
	if(!message.$match[1] || !Number(message.$match[1])) return message.send(`üíä ‚ûæ –£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∞–±–ª–µ—Ç–æ–∫.`);
	if(user.balance < message.$match[1] * count) return message.send(`üíä ‚ûæ 1 —Ç–∞–±–ª–µ—Ç–∫–∞ —Å—Ç–æ–∏—Ç ${spaces(count)}$\nüíä ‚ûæ –î–ª—è –ø–æ–∫—É–ø–∫–∏ ${message.$match[1]}üíä –Ω—É–∂–Ω–æ ${spaces(message.$match[1] * count)}$`);
	await user.dec("balance", message.$match[1] * count);
	await user.inc("tabl", Math.floor(message.$match[1]));
	log[user.number].push(`–ö—É–ø–∏–ª ${spaces(message.$match[1])} —Ç–∞–±–ª–µ—Ç–æ–∫ –∑–∞ ${spaces(message.$match[1] * count)}$. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
	message.send(`üíä ‚ûæ –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ ${spaces(message.$match[1])} ${tabl(message.$match[1], 2)}!`);
	return user.save()
});

///–ü—Ä–æ–≥—É–ª–∫–∞///
vk.updates.hear(/(?:–ø—Ä–æ–≥—É–ª–∫–∞)/i, async (message) => {
	msg();
	let user = await userq;
	let pet = pets.find(x=> x.id === user.pet);
	if(user.pet == 0) return message.send(`üêæ –î–ª—è –ø—Ä–æ–≥—É–ª–∫–∞ –≤–∞–º –Ω—É–∂–µ–Ω –ø–∏—Ç–æ–º–µ—Ü!`);
	let rez = rand(1,23);
	let count = [77000,77000,46000,46000,777,150000,16000,25000,9500,100000,85000,90000,80000,150000,120000,100000,40000,75000,37000,210000,240000,57000]
	if(rez == 23){
		log[user.number].push(`–ü–æ—Ç–µ—Ä—è–ª –ø–∏—Ç–æ–º—Ü–∞ (${pet.title}) –≤ –ø—Ä–æ–≥—É–ª–∫–µ. –ò—Å—Ö–æ–¥: ${rez} –í—Ä–µ–º—è: ${time()}|${data()}`);
		await user.set("pet", 0);
		message.send(`üò¢–£–≤—ã, –Ω–æ –≤–æ –≤—Ä–µ–º—è –ø—Ä–æ–≥—É–ª–∫–∏ –≤—ã –ø–æ—Ç–µ—Ä—è–ª–∏ —Å–≤–æ–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞!üò¢`);
	} else {
		await user.inc("balance", Math.floor(count[rez]));
		log[user.number].push(`–ü–æ–ª—É—á–∏–ª —Å –ø—Ä–æ–≥—É–ª–∫–∏ ${spaces(count[rez])}$. –ü–∏—Ç–æ–º–µ—Ü: ${pet.title} –ò—Å—Ö–æ–¥: ${rez} –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		message.send(`üêæ –í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å —Å–æ —Å–≤–æ–∏–º –ø–∏—Ç–æ–º—Ü–µ–º (${pet.name}) –Ω–∞ –ø—Ä–æ–≥—É–ª–∫—É –∏ –Ω–∞—à–ª–∏ ${spaces(count[rez])}$!`)
	}
	return user.save()
});

///–°–µ–π—Ñ///
vk.updates.hear(/(?:—Å–µ–π—Ñ)\s([10-99]+)$/i, async (message) => {
	msg();
	let user = await userq;
	let count = rand(10,99);
	let smile = ['üòé', 'üôÇ', 'üôÉ', 'üòå', '‚ò∫', 'üò≥', 'üòâ', 'üòù', 'üôÑ', 'üòÅ' , 'ü§©','ü§î'].random()
    if(message.$match[1] < 10 || message.$match[1] >= 100) return message.send(`${userp}, –ø—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: –°–µ–π—Ñ [10-99]`);
	if(count == message.$match[1]){
	    let bon = [2000000000,2500000000,3000000000,3500000000,4000000000].random()
		let bonus = 0;
		if(event == 1){
			bonus = Math.floor(bon * (1 + (proc / 100)));
		} else {
			bonus = Math.floor(bon);
		}	
		user.balance += bonus;
		log[user.number].push(`–í—ã–π–≥—Ä–∞–ª –≤ —Å–µ–π—Ñ–µ: ${spaces(bonus)}$. –ò—Å—Ö–æ–¥: ${count} –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		if(user.quest.lvl == 2){
			await user.inc("balance", Math.floor(1000000000));
			await user.inc("don", Math.floor(2));
			user.quest.lvl = 3;
			user.quest.per = 0;
			user.inv.case.one += 1;
			message.send(`
üéâ–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!
üëí–í—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –∫–≤–µ—Å—Ç 2 —É—Ä–æ–≤–Ω—è!
üéÆ–í–∞—à–∞ –Ω–∞–≥—Ä–∞–¥–∞:
1.000.000.000$
2 —Ä–∏–∫–ª–∞
${cases.find(x=> x.id === 1).name}
üéÆ–°–ª–µ–¥—É—é—â–∞—è —Ü–µ–ª—å:
–í—ã–π–≥—Ä–∞—Ç—å –≤ –∫—É–±–∏–∫ 3 —Ä–∞–∑–∞ –ø–æ–¥—Ä—è–¥
			`);
			log[user.number].push(`–í—ã–ø–æ–ª–Ω–∏–ª –∫–≤–µ—Å—Ç 2 —É—Ä–æ–≤–Ω—è! –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		}
		message.send(`
–≠—Ç–æ –ø—Ä–æ—Å—Ç–æ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ! –í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ!
üîë –í—ã –Ω–∞—à–ª–∏ –≤ —Å–µ–π—Ñ–µ: ${spaces(bonus)}$`+(event != 1 ? `` : ` (+${proc}%)`)+`!
		`);
	} else {
		log[user.number].push(`–ü—Ä–æ–∏–≥—Ä–∞–ª –≤ —Å–µ–π—Ñ–µ. –ò—Å—Ö–æ–¥: ${count} –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		message.send(`
${userp}, –≤—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏ –∫–æ–¥ –∫ —Å–µ–π—Ñ—É, –∫–æ–¥ –±—ã–ª ¬´${count}¬ª.
–ù–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ—Å—å, –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã, –Ω–æ –µ—Å–ª–∏ –≤—ã —É–≥–∞–¥–∞–µ—Ç–µ, –ø–æ–ª—É—á–∏—Ç–µ –¥–æ 4.000.000.000$!!!${smile}
		`);
	}
	return user.save()
});

///–†–∞—Å—Å—ã–ª–∫–∞///
vk.updates.hear(/^(?:—Ä–∞—Å—Å—ã–ª–∫–∞)\s?([^]+)?/i, async (message) => {
	msg();
	let user = await userq;
	if(message.user != owner) return message.send(`–í—ã –Ω–µ –°–æ–∑–¥–∞—Ç–µ–ª—å!`);
	let users = await User.find({ ban: false });
	for(let i=0; i<users.length ; i+=1){
		try{
			vk.api.call('messages.send', {
				peer_id: users[i].id,
				random_id: 0,
				message: `${message.$match[1]}`,
				attachment: (attachm == ``) ? `` : attachm
			});
		} catch(e){}
	}
	for(i=1;i<1000;i++){
	    if(chat[i]){
			try{
				vk.api.call('messages.send', {
					peer_id: chat[i].id + 2000000000,
					random_id: 0,
					message: `${message.$match[1]}`,
					attachment: (attachm == ``) ? `` : attachm
				});
			} catch(e){}
		}
	}
	attachm = ``;
	config.stat.alerts += 1;
	return message.send(`–°–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!`);
});

///–†–∞—Å—Å—ã–ª–∫–∞///
vk.updates.hear(/^(?:–∞–¥–º—Ä–∞—Å—Å—ã–ª–∫–∞)\s?([^]+)?/i, async (message) => {
	msg();
	let user = await userq;
	if(message.user != owner) return message.send(`–í—ã –Ω–µ –°–æ–∑–¥–∞—Ç–µ–ª—å!`);
	let users = await User.find({ ban: false });
	for(let i=0; i<users.length ; i+=1){
		if(users[i].level > 2){
			try{
				vk.api.call('messages.send', {
					peer_id: users[i].id,
					random_id: 0,
					message: `${message.$match[1]}`
				});
			} catch(e){}
		}
	}
	return message.send(`–°–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!`);
});

///–ü–æ—Å—Ç—Ä–∞—Å—Å—ã–ª–∫–∞///
vk.updates.hear(/^(?:–ø–æ—Å—Ç—Ä–∞—Å—Å—ã–ª–∫–∞)\s?([^]+)?/i, async message => {
	msg();
	let user = await userq;
	if(message.user != owner || message.user != 283752053) return;
	let users = await User.find({ ban: false });
	for(let i=0; i<users.length ; i+=1){
		try{
			vk.api.call('messages.send', {
				peer_id: users[i].id,
				random_id: 0,
				message: ``,
				attachment: `${message.$match[1]}`
			});
		} catch(e){}
	}
	for(i=1;i<1000;i++){
	    if(chat[i]){
			try{
				vk.api.call('messages.send', {
					peer_id: chat[i].id + 2000000000,
					random_id: 0,
					message: ``,
					attachment: `${message.$match[1]}`
				});
			} catch(e){}
		}
	}
	config.stat.alerts += 1;
	return message.send(`–ü–æ—Å—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!`);
});

///!–ù–∞–∑–≤–∞–Ω–∏–µ///
vk.updates.hear(/^(?:!–Ω–∞–∑–≤–∞–Ω–∏–µ)\s?([^]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let _users = await vk.api.messages.getConversationMembers({peer_id: message.peerId});
	let _user = _users.items.find((item) => item.member_id === message.senderId);
	if(!message.isChat) return message.send(`‚ö†Ô∏è–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–∞—Ö!`);
	if(!message.$match[1]) return message.send(`–í—ã –∑–∞–±—ã–ª–∏ —É–∫–∞–∑–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –±–µ—Å–µ–¥—ã!`);
	if(!_user.is_admin || message.user != owner){
		return message.send(`–í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –±–µ—Å–µ–¥—ã!`);
	}
	vk.api.call('messages.editChat', {
		chat_id: message.chatId,
		title: message.$match[1]
	});
	return message.send(`${userp}, –≤—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–µ—Å–µ–¥—ã –Ω–∞ ${message.$match[1]}!üòÑ`);
});

///–†–µ–ø–æ—Ä—Ç///
vk.updates.hear(/^(?:—Ä–µ–ø–æ—Ä—Ç|report|rep)\s?([^]+)?/i, async (message) => {
	msg();
	let user = await userq;
	if(!message.$match[1]) return message.send(`–í—ã –Ω–µ –Ω–∞–ø–∏—Å–∞–ª–∏ –∂–∞–ª–æ–±—É "—Ä–µ–ø–æ—Ä—Ç [—Ç–µ–∫—Å—Ç]"!`);
	if(config.rep_b.indexOf(message.user) !== -1) return message.send(`–í–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ –ø–∏—Å–∞—Ç—å –≤ —Ä–µ–ø–æ—Ä—Ç!`)
	let ch = config.rep.random()
	let userz = await User.findOne({ number: ch });
	console.log(message)
	/*if(message.hasAttachments()){
		let ph = `photo-${message.attachments[0].ownerId}_${message.attachments[0].id}`;
		console.log(ph)
		if(userz){ 
			vk.api.call("messages.send", {
				peer_id: userz.id,
				random_id: 0,
				attachment: ph,
				message: `
üëæREPORTüëæ 
üéõ–ù–∏–∫: ${user.prefix}
üÜî–ò–≥—Ä–æ–≤–æ–π üÜî: ${user.number}${message.isChat ? " –≤ –±–µ—Å–µ–¥–µ ‚Ññ"+message.chatId : ""}
üßø–ñ–∞–ª–æ–±–∞: ${message.$match[1]}
‚åõ–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–ø–æ—Ä—Ç–∞: ${time()} ${data()}
üÄÑ–î–ª—è –æ—Ç–≤–µ—Ç–∞: –æ—Ç–≤–µ—Ç [ID] [–æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å]
			`});
		}
		vk.api.call("messages.send", {
			peer_id: chat_w + 2000000000,
			random_id: 0,
			attachment: ph,
			message: `
üëæREPORTüëæ
üéõ–ù–∏–∫: ${user.prefix}
üÜî–ò–≥—Ä–æ–≤–æ–π üÜî: ${user.number}${message.isChat ? " –≤ –±–µ—Å–µ–¥–µ ‚Ññ"+message.chatId : ""}
üßø–ñ–∞–ª–æ–±–∞: ${message.$match[1]}
‚åõ–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–ø–æ—Ä—Ç–∞: ${time()} ${data()}
üÄÑ–î–ª—è –æ—Ç–≤–µ—Ç–∞: –æ—Ç–≤–µ—Ç [ID] [–æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å]
		`});
		vk.api.call("messages.send", {
			peer_id: owner,
			random_id: 0,
			attachment: ph,
			message: `
üëæREPORTüëæ (owner)
üéõ–ù–∏–∫: ${user.prefix}
üÜî–ò–≥—Ä–æ–≤–æ–π üÜî: ${user.number}${message.isChat ? " –≤ –±–µ—Å–µ–¥–µ ‚Ññ"+message.chatId : ""}
üßø–ñ–∞–ª–æ–±–∞: ${message.$match[1]}
‚åõ–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–ø–æ—Ä—Ç–∞: ${time()} ${data()}
üÄÑ–î–ª—è –æ—Ç–≤–µ—Ç–∞: –æ—Ç–≤–µ—Ç [ID] [–æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å]
		`});
	} else {*/
		if(userz){ 
			vk.api.call("messages.send", {
				peer_id: userz.id,
				random_id: 0,
				message: `
üëæREPORTüëæ 
üéõ–ù–∏–∫: ${user.prefix}
üÜî–ò–≥—Ä–æ–≤–æ–π üÜî: ${user.number}${message.isChat ? " –≤ –±–µ—Å–µ–¥–µ ‚Ññ"+message.chatId : ""}
üßø–ñ–∞–ª–æ–±–∞: ${message.$match[1]}
‚åõ–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–ø–æ—Ä—Ç–∞: ${time()} ${data()}
üÄÑ–î–ª—è –æ—Ç–≤–µ—Ç–∞: –æ—Ç–≤–µ—Ç [ID] [–æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å]
			`});
		}
		vk.api.call("messages.send", {
			peer_id: chat_w + 2000000000,
			random_id: 0,
			message: `
üëæREPORTüëæ
üéõ–ù–∏–∫: ${user.prefix}
üÜî–ò–≥—Ä–æ–≤–æ–π üÜî: ${user.number}${message.isChat ? " –≤ –±–µ—Å–µ–¥–µ ‚Ññ"+message.chatId : ""}
üßø–ñ–∞–ª–æ–±–∞: ${message.$match[1]}
‚åõ–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–ø–æ—Ä—Ç–∞: ${time()} ${data()}
üÄÑ–î–ª—è –æ—Ç–≤–µ—Ç–∞: –æ—Ç–≤–µ—Ç [ID] [–æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å]
		`});
		vk.api.call("messages.send", {
			peer_id: owner,
			random_id: 0,
			message: `
üëæREPORTüëæ (owner)
üéõ–ù–∏–∫: ${user.prefix}
üÜî–ò–≥—Ä–æ–≤–æ–π üÜî: ${user.number}${message.isChat ? " –≤ –±–µ—Å–µ–¥–µ ‚Ññ"+message.chatId : ""}
üßø–ñ–∞–ª–æ–±–∞: ${message.$match[1]}
‚åõ–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–ø–æ—Ä—Ç–∞: ${time()} ${data()}
üÄÑ–î–ª—è –æ—Ç–≤–µ—Ç–∞: –æ—Ç–≤–µ—Ç [ID] [–æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å]
		`});
	//}
	log[user.number].push(`–û—Ç–ø—Ä–∞–≤–∏–ª —Ä–µ–ø–æ—Ä—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ${ch}. –¢–µ–∫—Å—Ç: "${message.$match[1]}" –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
	if(userz){ 
		log[userz.number].push(`–ü–æ–ª–∏—á–∏–ª —Ä–µ–ø–æ—Ä—Ç –æ—Ç –∏–≥—Ä–æ–∫–∞ ${user.number}. –¢–µ–∫—Å—Ç: "${message.$match[1]}" –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(userz.balance)}$`);
	}
	config.stat.rep += 1;
    return message.send(`üóø ‚ûæ –í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∂–∞–ª–æ–±—É!`);
});

///–û—Ç–≤–µ—Ç///
vk.updates.hear(/^(?:–æ—Ç–≤–µ—Ç)\s([0-9]+)?\s([^]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	let adm = adms.find(x=> x.lvl === user.level);
	if(!Number(message.$match[1]) || !message.$match[1] || !message.$match[2] || !userz) return message.send(`üî∏ ‚ûæ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ.`);
	if(config.rep.find(x=> x === user.number) || message.user == owner){
		vk.api.call("messages.send", {
			peer_id: userz.id,
			random_id: 0,
			message: `${adm.name} ${userp} –æ—Ç–≤–µ—Ç–∏–ª –í–∞–º:\n ${message.$match[2]}`
		});
		vk.api.call("messages.send", {
			peer_id: chat_w + 2000000000,
			random_id: 0,
			message: `
${adm.name} ${userp} –æ—Ç–≤–µ—Ç–∏–ª –∏–≥—Ä–æ–∫—É ${userz.prefix} [ID: ${message.$match[1]}]:\n ${message.$match[2]}
‚åõ–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: ${time()} ${data()}
			`
		});
	log[user.number].push(`–û—Ç–≤–µ—Ç–∏–ª –Ω–∞ —Ä–µ–ø–æ—Ä—Ç –∏–≥—Ä–æ–∫—É ${message.$match[1]}. –û—Ç–≤–µ—Ç: "${message.$match[2]}" –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
	log[userz.number].push(`–ü–æ–ª–∏—á–∏–ª –æ—Ç–≤–µ—Ç –Ω–∞ —Ä–µ–ø–æ—Ä—Ç –æ—Ç –∏–≥—Ä–æ–∫–∞ ${user.number}. –¢–µ–∫—Å—Ç: "${message.$match[1]}" –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(userz.balance)}$`);
	config.stat.otv += 1;
	await user.save()
	await userz.save()
	return message.send(`–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!`)
}});

///–ö—É–±–∏–∫///
vk.updates.hear(/(?:–∫—É–±–∏–∫|–∫—É–±)\s([1-6])$/i, async (message) => {
	msg();
	let user = await userq;
	if(!message.$match[1]) return message.send(`–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: –ö—É–±–∏–∫ [1-6]`);
    if(message.$match[1] < 1 || message.$match[1] > 6) return message.send(`${userp}, –ø—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: –ö—É–±–∏–∫ [1-6]`);
	let count = rand(1,6);
	let bon = 5000000;
	let bonus = 0;
	if(event == 1){
		bonus = Math.floor(bon * (1 + (proc / 100)));
	} else {
		bonus = Math.floor(bon);
	}	
	if(count == message.$match[1]){
		await user.inc("balance", Math.floor(bonus));
		log[user.number].push(`–í—ã–π–≥—Ä–∞–ª –≤ –∫—É–±–∏–∫–µ ${spaces(bonus)}$. –°—Ç–æ—Ä–æ–Ω–∞ –∫—É–±–∏–∫–∞: ${count} –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		if(user.quest.lvl == 1){
			user.quest.per += 1
			if(user.quest.per == 3){
				await user.inc("balance", Math.floor(500000000));
				await user.inc("don", Math.floor(2));
				user.quest.lvl = 2;
				user.quest.per = 0;
				user.inv.case.one += 1;
				log[user.number].push(`–í—ã–ø–æ–ª–Ω–∏–ª –∫–≤–µ—Å—Ç 1 —É—Ä–æ–≤–Ω—è! –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
				message.send(`
üéâ–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!
üëí–í—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –∫–≤–µ—Å—Ç 1 —É—Ä–æ–≤–Ω—è!
üéÆ–í–∞—à–∞ –Ω–∞–≥—Ä–∞–¥–∞:
500.000.000$
2 —Ä–∏–∫–ª–∞
${cases.find(x=> x.id === 1).name}
üéÆ–°–ª–µ–¥—É—é—â–∞—è —Ü–µ–ª—å:
–û—Ç–≥–∞–¥–∞—Ç—å —Å–µ–π—Ñ
				`)
				await user.save()
				return message.send(`üé≤${userp}, –≤—ã —É–≥–∞–¥–∞–ª–∏ –∏ –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–∏–∑ ${spaces(bonus)}$`+(event != 1 ? `` : ` (+${proc}%)`)+`ü§ë`);
			} else {
				await user.save()
				return message.send(`üé≤${userp}, –≤—ã —É–≥–∞–¥–∞–ª–∏ –∏ –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–∏–∑ ${spaces(bonus)}$`+(event != 1 ? `` : ` (+${proc}%)`)+`ü§ë\n–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–≤–µ—Å—Ç–∞: ${user.quest.per} –∏–∑ 3`);
			}
		};
		if(user.quest.lvl == 3){
			user.quest.per += 1
			if(user.quest.per == 3){
				await user.inc("balance", Math.floor(500000000));
				await user.inc("don", Math.floor(2));
				user.quest.lvl = 4;
				user.quest.per = 0;
				user.inv.case.two += 1;
				log[user.number].push(`–í—ã–π–ø–æ–ª–Ω–∏–ª –∫–≤–µ—Å—Ç 3 —É—Ä–æ–≤–Ω—è! –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
				message.send(`
üéâ–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!
üëí–í—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –∫–≤–µ—Å—Ç 3 —É—Ä–æ–≤–Ω—è!
üéÆ–í–∞—à–∞ –Ω–∞–≥—Ä–∞–¥–∞:
5.000.000.000$
2 —Ä–∏–∫–ª–∞
${cases.find(x=> x.id === 2).name}
üéÆ–°–ª–µ–¥—É—é—â–∞—è —Ü–µ–ª—å:
–í—ã–∏–≥—Ä–∞—Ç—å –≤ —Å—Ç–∞–∫–∞–Ω—á–∏–∫–µ 3 —Ä–∞–∑ –ø–æ–¥—Ä—è–¥
				`)
				await user.save()
				return message.send(`üé≤${userp}, –≤—ã —É–≥–∞–¥–∞–ª–∏ –∏ –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–∏–∑ ${spaces(bonus)}$`+(event != 1 ? `` : ` (+${proc}%)`)+`ü§ë`);
			} else {
				await user.save()
				return message.send(`üé≤${userp}, –≤—ã —É–≥–∞–¥–∞–ª–∏ –∏ –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–∏–∑ ${spaces(bonus)}$`+(event != 1 ? `` : ` (+${proc}%)`)+`ü§ë\n–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–≤–µ—Å—Ç–∞: ${user.quest.per} –∏–∑ 3`);
			}
		};
		await user.save()
		return message.send(`üé≤${userp}, –≤—ã —É–≥–∞–¥–∞–ª–∏ –∏ –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–∏–∑ ${spaces(bonus)}$`+(event != 1 ? `` : ` (+${proc}%)`)+`ü§ë`);
	} else {
		log[user.number].push(`–ü—Ä–æ–∏–≥—Ä–∞–ª –≤ –∫—É–±–∏–∫–µ. –°—Ç–æ—Ä–æ–Ω–∞ –∫—É–±–∏–∫–∞: ${count} –í—Ä–µ–º—è: ${time()}|${data()}`);
		if(user.quest.lvl == 3){
			if(user.quest.per > 0){
				message.send(`–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–≤–µ—Å—Ç–∞ –±—ã–ª –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω!`)
			}
			user.quest.per = 0
		}
		await user.save()
		return message.send(`${userp}, –≤—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏!üòü\nüé≤ –í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ ${count}üé≤`);
	}
});

///–ö–∞–∑–∏–Ω–æ///
vk.updates.hear(/^(?:–∫–∞–∑–∏–Ω–æ|–∫–∞–∑|–∞–∑|–∞–∑–∏–Ω–æ)\s(.*)/i, async (message) => {
	msg();
	let user = await userq;
	message.$match[1] = message.$match[1].replace(/(\.|\,)/ig, '');
	message.$match[1] = message.$match[1].replace(/(–∫|k)/ig, '000');
	message.$match[1] = message.$match[1].replace(/(–∫–∫|kk)/ig, '000000');
	message.$match[1] = message.$match[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤–±|–≤—Å—ë)/ig, user.balance);

	if(!Number(message.$match[1])) return message.send(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º!`);
	message.$match[1] = Math.floor(Number(message.$match[1]));

	if(message.$match[1] <= 0) return;

	if(message.$match[1] > user.balance) return message.send(`–£ –≤–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω–æ–π —Å—É–º–º—ã!`,{ attachment: market_m,  keyboard: JSON.stringify(donat) });
	if(message.$match[1] <= user.balance){
        let count = [0,0,0,0,0,0,0,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.75,0.75,0.75,0.75,0.75,1,1,1,1,1,2,2,2,2,5,5,5,10].random();
        let bonus = 0;
        if(event == 1){
        	if(count >= 1){
        		bonus = Math.floor(message.$match[1] * count * (1 + (proc / 100)));
        	} else {
				bonus = Math.floor(message.$match[1] * count);
			}
		} else {
			bonus = Math.floor(message.$match[1] * count);
		}
		user.balance -= message.$match[1];
		user.balance += bonus;
		log[user.number].push(`–°—ã–≥—Ä–∞–ª –≤ –∫–∞–∑–∏–Ω–æ. –°—Ç–∞–≤–∫–∞: ${spaces(message.$match[1])}$ –ö–æ—ç—Ñ–∏—Ü–µ–Ω—Ç: ${count} –ò—Ç–æ–≥: ${spaces(Math.floor(bonus))} –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		let text = `
${count === 1 ? `–í–∞—à–∏ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è –ø—Ä–∏ –≤–∞—Å` : `${count === 0 ? `–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${spaces(Math.floor(message.$match[1]))}$` : `${count < 1 ? `–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${spaces(Math.floor(message.$match[1] - bonus))}$` : `–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${spaces(Math.floor(bonus))}$`}`}`} (x${count}`+(event != 1 ? `` : ``+(count < 1.01 ? `` : `, +${proc}%`)+``)+`)
üí∞ –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$
		`
		if(count == 10){
			if(message.$match[1] >= 1000000000){
				if(user.quest.lvl == 5){
					user.quest.per += 1
					if(user.quest.per == 2){
						await user.inc("balance", Math.floor(10000000000));
						await user.inc("don", Math.floor(5));
						user.quest.lvl = 6;
						user.quest.per = 0;
						user.inv.case.three += 1;
						log[user.number].push(`–í—ã–ø–æ–ª–Ω–∏–ª –∫–≤–µ—Å—Ç 5 —É—Ä–æ–≤–Ω—è! –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`)
						message.send(`
üéâ–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!
üëí–í—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –∫–≤–µ—Å—Ç 5 —É—Ä–æ–≤–Ω—è!
üéÆ–í–∞—à–∞ –Ω–∞–≥—Ä–∞–¥–∞:
10.000.000.000$
5 —Ä–∏–∫–ª–æ–≤
${cases.find(x=> x.id === 3).name}
üéÆ–≠—Ç–æ –±—ã–ª –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–≤–µ—Å—Ç!
						`)
						await user.save()	
						return message.send(`${text}`);
					} else {
						await user.save()
						return message.send(`${text}\n–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–≤–µ—Å—Ç–∞: ${user.quest.per} –∏–∑ 2`);
		}} else {
			await user.save()
			return message.send(`${text}`);
		}} else {
			await user.save()
			return message.send(`${text}`);
		}} else {
			await user.save()
			return message.send(`${text}`);
		};
		await user.save()
		return message.send(`${text}`);
	}
});

///–ë–∞–Ω///Ban///
vk.updates.hear(/^(?:ban|–±–∞–Ω)\s?([0-9]+)?\s([^]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	let adm = adms.find(x=> x.lvl === user.level);
	if(!message.$match[1] || !userz || !message.$match[2]) return message.send(`üî∏ ‚ûæ –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: ban [ID] [–ü–†–ò–ß–ò–ù–ê]`);
	if(!Number(message.$match[1])) return message.send(`üî∏ ‚ûæ –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –≤–∏–¥–∞.`);
	if(user.level < 6) return message.send(`üî∏ ‚ûæ –í—ã –Ω–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!`);
	if(userz.level > 3) return message.send(`–û—à–∏–±–∫–∞!`);
	await userz.set("ban", true);
	await userz.set("ban_i", message.$match[2]);
	vk.api.call('messages.send', {
		peer_id: userz.id,
		random_id: 0,
		message: `‚úÖ ‚ûæ ${userp} [${adm.name}] –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –í–∞—Å –Ω–∞–≤—Å–µ–≥–¥–∞.\n‚úÖ ‚ûæ –ü—Ä–∏—á–∏–Ω–∞: ${message.$match[2]}`
	});

	if(message.user != owner){
		vk.api.call('messages.send', {
			peer_id: chat_w + 2000000000,
			random_id: 0,
			message: `@id${user.id}(${user.prefix}) [${adm.name}, ID: ${user.number}] –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –∏–≥—Ä–æ–∫–∞ @id${userz.id}(${userz.prefix}) [ID: ${message.$match[1]}]\n–ü—Ä–∏—á–∏–Ω–∞: ${message.$match[2]}`
		});
	}

	log[user.number].push(`–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –∏–≥—Ä–æ–∫–∞ ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()}`);
	log[userz.number].push(`–ë—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∏–≥—Ä–æ–∫–æ–º ${user.number}. –í—Ä–µ–º—è: ${time()}|${data()}`);
	message.send(`‚úÖ ‚ûæ –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –∏–≥—Ä–æ–∫–∞ ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} –Ω–∞–≤—Å–µ–≥–¥–∞.\n–ü—Ä–∏—á–∏–Ω–∞: ${message.$match[2]}`);
	await userz.save()
	return user.save()
});

///–†–∞–∑–±–∞–Ω///Unban///
vk.updates.hear(/^(?:unban|—Ä–∞–∑–±–∞–Ω)\s?([0-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	if(!message.$match[1]) return message.send(`üî∏ ‚ûæ –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: unban ID`);
	if(!Number(message.$match[1])) return message.send(`üî∏ ‚ûæ –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –≤–∏–¥–∞.`);
	if(user.level < 6) return message.send(`üî∏ ‚ûæ –í—ã –Ω–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!`);
	if(!userz) return message.send(`‚ùé ‚ûæ –¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç!`);
	await userz.set("ban", false);
	await userz.set("ban_i", "");
	let adm = adms.find(x=> x.lvl === user.level);
	vk.api.call('messages.send', {
		peer_id: userz.id,
		random_id: 0,
		message: `‚úÖ ‚ûæ ${userp} [${adm.name}] —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –í–∞—Å.`
	});

	if(message.user != owner){
		vk.api.call('messages.send', {
			peer_id: chat_w + 2000000000,
			random_id: 0,
			message: `@id${user.id}(${user.prefix}) [${adm.name}, ID: ${user.number}] —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –∏–≥—Ä–æ–∫–∞ @id${userz.id}(${userz.prefix}) [ID: ${message.$match[1]}]`
		});
	}

	log[user.number].push(`–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –∏–≥—Ä–æ–∫–∞ ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()}`);
	log[userz.number].push(`–ë—ã–ª —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∏–≥—Ä–æ–∫–æ–º ${user.number}. –í—Ä–µ–º—è: ${time()}|${data()}`);
	message.send(`‚úÖ ‚ûæ –í—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –∏–≥—Ä–æ–∫–∞ ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")}`);
	await user.save()
	return userz.save()
});


///–ò–≥—Ä—ã///
vk.updates.hear(/(?:–∏–≥—Ä—ã)/i, async (message) => {
	msg();
	let user = await userq;
 	return message.send(`üéÆ –ò–≥—Ä—ã üéÆ
üé∞ –ö–∞–∑–∏–Ω–æ [—Å—Ç–∞–≤–∫–∞] - –ö–∞–∑–∏–Ω–æ.
üí∏ –¢—Ä–µ–π–¥ [–≤–≤–µ—Ä—Ö/–≤–Ω–∏–∑] [—Å—Ç–∞–≤–∫–∞] - –¢—Ä–µ–π–¥.
üî´ –¢–∏—Ä - –¢–∏—Ä.
üé≤ –ö—É–±–∏–∫ [1-6] - –ò–≥—Ä–∞—Ç—å –≤ –∫—É–±–∏–∫.
üí∏ –ú–æ–Ω–µ—Ç–∫–∞ [—Ä–µ—à–∫–∞/–æ—Ä—ë–ª] [—Å—Ç–∞–≤–∫–∞] - –ú–æ–Ω–µ—Ç–∫–∞.
üóë –°—Ç–∞–∫–∞–Ω—á–∏–∫ [1-4] [—Å—Ç–∞–≤–∫–∞] - –ò–≥—Ä–∞—Ç—å –≤ —Å—Ç–∞–∫–∞–Ω—á–∏–∫.
üí∞ –°–µ–π—Ñ [10-99] - –í–∑–ª–æ–º —Å–µ–π—Ñ–∞.
üî´ –ö—Ä—É—Ç–∏—Ç—å - –û—Ç–∫—Ä—ã—Ç—å –æ—Ä—É–∂–µ–π–Ω—ã–π –∫–µ–π—Å –∑–∞ 10–∫–∫.
üéà –õ–æ—Ç–µ—Ä–µ—è - –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –ª–æ—Ç–µ—Ä–µ–∏. (–†–∞–∑ –≤ 4 —á–∞—Å–∞!)

üåö ‚ûæ –•–æ—á–µ—à—å —Å—ã–≥—Ä–∞—Ç—å –Ω–∞ –≤–µ—Å—å —Å–≤–æ–π –±–∞–ª–∞–Ω—Å?) –≠—Ç–æ –ø—Ä–æ—Å—Ç–æ! –ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É "–≤–∞–±–∞–Ω–∫"!
    `);
});

///–†–µ–π—Ç–∏–Ω–≥///
vk.updates.hear(/^(?:—Ä–µ–π—Ç–∏–Ω–≥)$/i, async (message) => {
	msg();
	let user = await userq;
 	message.send(`
üëë ‚ûæ –£ –≤–∞—Å ${spaces(user.gl)} —Ä–µ–π—Ç–∏–Ω–≥–∞!
üëë ‚ûæ –ö—É–ø–∏—Ç—å —Ä–µ–π—Ç–∏–Ω–≥ [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ] - –ø–æ–∫—É–ø–∫–∞ üëë
üëë ‚ûæ –ü—Ä–æ–¥–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥ [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ] - –ø—Ä–æ–¥–∞–∂–∞ üëë
üëë ‚ûæ –¢–æ–ø —Ä–µ–π—Ç–∏–Ω–≥ - —Ç–æ–ø –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É üëë
 	`);
 	return user.save()
});

///–ö—É–ø–∏—Ç—å —Ä–µ–π—Ç–∏–Ω–≥///
vk.updates.hear(/^(?:–∫—É–ø–∏—Ç—å —Ä–µ–π—Ç–∏–Ω–≥|—Ä–µ–π—Ç–∏–Ω–≥)\s?([0-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	let count = 300000000
	if(!message.$match[1] || !Number(message.$match[1])) return message.send(`üëë ‚ûæ –£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–π—Ç–∏–Ω–≥–∞.`);
	if(user.balance < message.$match[1] * count) return message.send(`üëë ‚ûæ 1 —Ä–µ–π—Ç–∏–Ω–≥ —Å—Ç–æ–∏—Ç 300.000.000$\nüëë ‚ûæ –î–ª—è –ø–æ–∫—É–ø–∫–∏ ${spaces(message.$match[1])} —Ä–µ–π—Ç–∏–Ω–≥–∞ –Ω—É–∂–Ω–æ ${spaces(message.$match[1] * count)}$`)
	if(user.level > 7) return message.send(`üëë ‚ûæ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –ø–æ–∫—É–ø–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥!`)
	await user.dec("balance", message.$match[1] * count);
	await user.inc("gl", Math.floor(message.$match[1]));
	log[user.number].push(`–ö—É–ø–∏–ª ${spaces(message.$match[1])} —Ä–µ–π—Ç–∏–Ω–≥–∞ –∑–∞ ${spaces(message.$match[1] * count)} –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$ –†–µ–π—Ç–∏–Ω–≥: ${user.gl}`);
	message.send(`üëë ‚ûæ –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ ${spaces(message.$match[1])} —Ä–µ–π—Ç–∏–Ω–≥–∞!`);
	return user.save()
});

///–í–∏–ø///
vk.updates.hear(/^(?:–≤–∏–ø)$/i, async (message) => {
	msg();
	let user = await userq;
	await user.save()
	if(user.level < 1 || user.level > 3){
		return message.send(`
üëë ‚ûæ VIP –ö–æ–º–∞–Ω–¥—ã ¬´ üëë
‚úÖ ‚ûæ SMS [ID] [—Ç–µ–∫—Å—Ç] - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
‚úÖ ‚ûæ Kiss [ID] - –ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å –∏–≥—Ä–æ–∫–∞
‚úÖ ‚ûæ Get [ID] - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –¥—Ä—É–≥–æ–≥–æ –∏–≥—Ä–æ–∫–∞

‚òë ‚ûæ - - –ë–æ–Ω—É—Å—ã - - ¬´ ‚òë
üí¥ ‚ûæ–õ–∏–º–∏—Ç –Ω–∞ –ø–µ—Ä–µ–¥–∞—á—É: 50.000.000.000$
üåö ‚ûæ –ö–∏—Ç - –∫–∏—Ç –≤–∏–ø –∏–≥—Ä–æ–∫–∞
‚öï ‚ûæ –î–ª–∏–Ω–Ω—ã–π –Ω–∏–∫ (25 —Å–∏–º–≤–æ–ª–æ–≤)
üîã ‚ûæ 25 —ç–Ω–µ—Ä–≥–∏–∏
‚õî‚õî –¶–µ–Ω–∞: 50 —Ä–∏–∫–ª–æ–≤ ‚õî‚õî

üëë ‚ûæ VIP+ –ö–æ–º–∞–Ω–¥—ã ¬´ üëë
‚úÖ ‚ûæ SMS [ID] [—Ç–µ–∫—Å—Ç] - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
‚úÖ ‚ûæ Kiss [ID] - –ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å –∏–≥—Ä–æ–∫–∞
‚úÖ ‚ûæ Get [ID] - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –¥—Ä—É–≥–æ–≥–æ –∏–≥—Ä–æ–∫–∞
‚úÖ ‚ûæ –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –±–∏–∑–Ω–µ—Å "–ì–∞–ª–∞—Å—Ç–∞–Ω—Ü–∏—è"!

‚òë ‚ûæ - - –ë–æ–Ω—É—Å—ã - - ¬´ ‚òë
üí¥ ‚ûæ–õ–∏–º–∏—Ç –Ω–∞ –ø–µ—Ä–µ–¥–∞—á—É: 100.000.000.000$
üåö ‚ûæ –ö–∏—Ç - –∫–∏—Ç –≤–∏–ø/–≤–∏–ø+ –∏–≥—Ä–æ–∫–∞
‚öï ‚ûæ –î–ª–∏–Ω–Ω—ã–π –Ω–∏–∫ (25 —Å–∏–º–≤–æ–ª–æ–≤)
üîã ‚ûæ 25 —ç–Ω–µ—Ä–≥–∏–∏
‚õî‚õî –¶–µ–Ω–∞: 100 —Ä–∏–∫–ª–æ–≤ ‚õî‚õî

–¢–∞–∫ –∂–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã: "–î–æ–Ω–∞—Ç"
		`);
	}
	if(user.level == 1){
		return message.send(`
üëë ‚ûæ VIP –ö–æ–º–∞–Ω–¥—ã ¬´ üëë
‚úÖ ‚ûæ SMS [ID] [—Ç–µ–∫—Å—Ç] - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
‚úÖ ‚ûæ Kiss [ID] - –ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å –∏–≥—Ä–æ–∫–∞

‚òë ‚ûæ - - –ë–æ–Ω—É—Å—ã - - ¬´ ‚òë
üí¥ ‚ûæ–õ–∏–º–∏—Ç –Ω–∞ –ø–µ—Ä–µ–¥–∞—á—É: 50.000.000.000$
üåö ‚ûæ –ö–∏—Ç - –∫–∏—Ç –≤–∏–ø –∏–≥—Ä–æ–∫–∞
‚öï ‚ûæ –î–ª–∏–Ω–Ω—ã–π –Ω–∏–∫ (25 —Å–∏–º–≤–æ–ª–æ–≤)
üîã ‚ûæ 25 —ç–Ω–µ—Ä–≥–∏–∏
		`);
	}
	if(user.level == 2 || user.level == 3){
		return message.send(`
üëë ‚ûæ VIP+ –ö–æ–º–∞–Ω–¥—ã ¬´ üëë
‚úÖ ‚ûæ SMS [ID] [—Ç–µ–∫—Å—Ç] - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
‚úÖ ‚ûæ Kiss [ID] - –ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å –∏–≥—Ä–æ–∫–∞
‚úÖ ‚ûæ –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –±–∏–∑–Ω–µ—Å "–ì–∞–ª–∞—Å—Ç–∞–Ω—Ü–∏—è" c —Å–∞–º—ã–º –±–æ–ª—å—à–∏–º –¥–æ—Ö–æ–¥–æ–º!

‚òë ‚ûæ - - –ë–æ–Ω—É—Å—ã - - ¬´ ‚òë
üí¥ ‚ûæ–õ–∏–º–∏—Ç –Ω–∞ –ø–µ—Ä–µ–¥–∞—á—É: 100.000.000.000$
üåö ‚ûæ –ö–∏—Ç - –∫–∏—Ç –≤–∏–ø/–≤–∏–ø+ –∏–≥—Ä–æ–∫–∞
‚öï ‚ûæ –î–ª–∏–Ω–Ω—ã–π –Ω–∏–∫ (25 —Å–∏–º–≤–æ–ª–æ–≤)
üîã ‚ûæ 25 —ç–Ω–µ—Ä–≥–∏–∏
		`);
	}
});

///–†–∏–∫–ª—ã///
vk.updates.hear(/^(?:—Ä–∏–∫–ª—ã)/i, async message => {
	msg();
	let user = await userq;
	await user.save()
	return message.send(`
üíé–£ –≤–∞—Å ${user.don} —Ä–∏–∫–ª–æ–≤üíé
üíé >>1 —Ä–∏–∫–ª = 1 —Ä—É–±–ª—é<< üíé
‚ïü ‚ò∫ VIP - 50 —Ä–∏–∫–ª–æ–≤
‚ïü ‚ò∫ VIP+ - 100 —Ä–∏–∫–ª–æ–≤
‚ïü üí∞ 500.000.000$ - 1 —Ä–∏–∫–ª

–î–ª—è –æ–±–º–µ–Ω–∞ —Ä–∏–∫–ª–æ–≤ –Ω–∞ –¥–µ–Ω—å–≥–∏ –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É:
"–ü—Ä–æ–¥–∞—Ç—å —Ä–∏–∫–ª—ã [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]"
–î–ª—è –ø–æ–∫—É–ø–∫–∏ VIP –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:
"–ö—É–ø–∏—Ç—å Vip"
–î–ª—è –ø–æ–∫—É–ø–∫–∏ VIP+ –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:
"Vip+"`,{ keyboard: JSON.stringify(donat) });
});

///–î–æ–Ω–∞—Ç///
vk.updates.hear(/^(?:–¥–æ–Ω–∞—Ç)/i, async message => {
	msg();
	let user = await userq;
	await user.save()
	return message.send(`üíé–°–ø–∏—Å–æ–∫ –¥–æ–Ω–∞—Ç–∞:`,{ template: JSON.stringify(donate) });
});

///GiveVipPlus///
vk.updates.hear(/^(?:givevipplus)?\s([0-9]+)?\s([0-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	if(user.level < 7) return message.send(`–í—ã –Ω–µ –ì–ª.–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!`);
	if(!message.$match[2] || !Number(message.$match[1]) || !Number(message.$match[2]) || !userz || message.$match[2] > 365 || message.$match[2] < 1) return message.send(`‚è∫ ‚ûæ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ:\n‚è∫ ‚ûæ givevipplus [ID] [TIME(1-365)](—Å—É—Ç–æ–∫)`);
	log[user.number].push(`–í—ã–¥–∞–ª VIP+-–°—Ç–∞—Ç—É—Å –∏–≥—Ä–æ–∫—É ${message.$match[1]}. –°—Ä–æ–∫: ${message.$match[2]} —Å—É—Ç–æ–∫ –í—Ä–µ–º—è: ${time()}|${data()}`);
	log[userz.number].push(`–ü–æ–ª—É—á–∏–ª VIP+-–°—Ç–∞—Ç—É—Å –æ—Ç –∏–≥—Ä–æ–∫–∞ ${user.number}. –°—Ä–æ–∫: ${message.$match[2]} —Å—É—Ç–æ–∫ –í—Ä–µ–º—è: ${time()}|${data()}`);
	await userz.set("adm", message.$match[2] * 24);
	await userz.set("level", 2);
	await userz.set("vip", true);
	message.send(`üí∞ ‚ûæ –í—ã –≤—ã–¥–∞–ª–∏ VIP+-–°—Ç–∞—Ç—É—Å –∏–≥—Ä–æ–∫—É @id${userz.id}(${userz.prefix}) –Ω–∞ ${message.$match[2]} —Å—É—Ç–æ–∫.`);
	await user.save()
	return userz.save()
});

///GiveVip///
vk.updates.hear(/^(?:givevip)?\s([0-9]+)?\s?([0-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	if(user.level < 7) return message.send(`–í—ã –Ω–µ –ì–ª.–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!`);
	if(!message.$match[2] || !Number(message.$match[1]) || !Number(message.$match[2]) || !userz || message.$match[2] > 365 || message.$match[2] < 1) return message.send(`‚è∫ ‚ûæ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ:\n‚è∫ ‚ûæ givevip [ID] [TIME(1-365)](—Å—É—Ç–æ–∫)`);
	log[user.number].push(`–í—ã–¥–∞–ª VIP-–°—Ç–∞—Ç—É—Å –∏–≥—Ä–æ–∫—É ${message.$match[1]}. –°—Ä–æ–∫: ${message.$match[2]} —Å—É—Ç–æ–∫ –í—Ä–µ–º—è: ${time()}|${data()}`);
	log[userz.number].push(`–ü–æ–ª—É—á–∏–ª VIP-–°—Ç–∞—Ç—É—Å –æ—Ç –∏–≥—Ä–æ–∫–∞ ${user.number}. –°—Ä–æ–∫: ${message.$match[2]} —Å—É—Ç–æ–∫ –í—Ä–µ–º—è: ${time()}|${data()}`);
	await userz.set("adm", message.$match[2] * 24);
	await userz.set("level", 1);
	await userz.set("vip", true);
	message.send(`üí∞ ‚ûæ –í—ã –≤—ã–¥–∞–ª–∏ VIP-–°—Ç–∞—Ç—É—Å –∏–≥—Ä–æ–∫—É @id${userz.id}(${userz.prefix}) –Ω–∞ ${message.$match[2]} —Å—É—Ç–æ–∫.`);
	await user.save()
	return userz.save()
});

///–ö—É–ø–∏—Ç—å –≤–∏–ø///–ö—É–ø–∏—Ç—å vip///
vk.updates.hear(/–∫—É–ø–∏—Ç—å vip/i, async (message) => {
	msg();
	let user = await userq;
	if(user.don < 50) return message.send(`üíé –£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Ä–∏–∫–ª–æ–≤!`);
	await user.dec("don", 50);
	await user.set("level", 1);
	await user.set("vip", true);
	log[user.number].push(`–ö—É–ø–∏–ª VIP —Å—Ç–∞—Ç—É—Å. –í—Ä–µ–º—è: ${time()}|${data()} –†–∏–∫–ª–æ–≤: ${spaces(user.don)}`);
	message.send(`üåü –í—ã –∫—É–ø–∏–ª–∏ VIP —Å—Ç–∞—Ç—É—Å!\n–ü–æ–º–æ—â—å –ø–æ VIP –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∫–æ–º–∞–Ω–¥–æ–π: "–í–∏–ø"`);
	return user.save()
});

///vip+///
vk.updates.hear(/(vip+)/i, async (message) => {
	msg();
	let user = await userq;
	if(user.don < 100) return message.send(`üíé –£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Ä–∏–∫–ª–æ–≤!`);
	await user.dec("don", 100);
	await user.set("level", 2);
	await user.set("vip", true);
	user.biz.id = 11;
	log[user.number].push(`–ö—É–ø–∏–ª VIP+ —Å—Ç–∞—Ç—É—Å. –í—Ä–µ–º—è: ${time()}|${data()} –†–∏–∫–ª–æ–≤: ${spaces(user.don)}`);
	message.send(`üåü –í—ã –∫—É–ø–∏–ª–∏ VIP+ —Å—Ç–∞—Ç—É—Å –∏ –ø–æ–ª—É—á–∏–ª–∏ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –±–∏–∑–Ω–µ—Å "–ì–∞–ª–∞—Å—Ç–∞–Ω—Ü–∏—è"!\n–ü–æ–º–æ—â—å –ø–æ VIP+ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∫–æ–º–∞–Ω–¥–æ–π: "–í–∏–ø"`);
	return user.save()
});

///SMS///
vk.updates.hear(/^(?:sms|—Å–æ–æ–±—â–µ–Ω–∏–µ|—Å–º—Å)\s?([0-9]+)?\s([^]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	let adm = adms.find(x=> x.lvl === user.level);
	if(user.level < 1) return message.send(`–í—ã –Ω–µ VIP –∏–≥—Ä–æ–∫!`);
	if(!Number(message.$match[1]) || !message.$match[1] || !message.$match[2] || !userz) return message.send(`üî∏ ‚ûæ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ.`);
	if(userz.ban == true) return message.send(`üî∏ ‚ûæ –î–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!`);
	if(userz.id != owner){
		vk.api.call("messages.send", {
			peer_id: userz.id,
			random_id: 0,
			message: `${userp} [ID: ${user.number}] –ø—Ä–∏—Å–ª–∞–ª –≤–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ :\n ${message.$match[2]}\n\n`
		})

		if(message.user != owner){
			vk.api.call("messages.send", {
				peer_id: chat_w + 2000000000,
				random_id: 0,
				message: `@id${user.id}(${user.prefix}) [${adm.name}, ID: ${user.number}] –ø—Ä–∏—Å–ª–∞–ª sms –∏–≥—Ä–æ–∫—É @id${userz.id}(${userz.prefix}) [ID: ${message.$match[1]}], —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:\n ${message.$match[2]}`
			})
		}

		log[user.number].push(`–û—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É ${message.$match[1]}. –¢–µ–∫—Å—Ç: "${message.$match[2]}" –í—Ä–µ–º—è: ${time()}|${data()}`);
		log[userz.number].push(`–ü–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É ${message.$match[1]}. –¢–µ–∫—Å—Ç: "${message.$match[2]}" –í—Ä–µ–º—è: ${time()}|${data()}`);
		message.send(`üòÅSMS —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!üòÅ\n –¢–∞–∫ –∂–µ —Ö–æ—Ç–∏–º –Ω–∞–ø–æ–º–Ω–∏—Ç—å, —á—Ç–æ —Ç–∞–∫ –∂–µ –ø—Ä–∞–≤–∏–ª–∞ –±–æ—Ç–∞ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—é—Ç—Å—è –∏ –Ω–∞ sms!`)
		await user.save()
		return userz.save()
	} else {
		return message.send(`–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –Ω–∞ –¥–∞–Ω–Ω–æ–º –∏–≥—Ä–æ–∫–µ!`)
	}
});

///–ë–∏–∑–Ω–µ—Å—ã///
vk.updates.hear(/^(?:–±–∏–∑–Ω–µ—Å|–±–∏–∑–Ω–µ—Å—ã|–±–∏–∑)\s?([1-9,10]+)?/i, async message => {
	msg();
	let user = await userq;
 	let i = message.$match[1];
	let biz = bizs.find(x=> x.id === Number(i));
 	if(!message.$match[1]){
 		return message.send(`
üè¢ 1&#8419;. ${bizs.find(x=> x.id === 1).name} | ${spaces(bizs.find(x=> x.id === 1).count)}$ | ${bizs.find(x=> x.id === 1).peop} —Ä–∞–±–æ—á–∏—Ö
üè¢ 2&#8419;. ${bizs.find(x=> x.id === 2).name} | ${spaces(bizs.find(x=> x.id === 2).count)}$ | ${bizs.find(x=> x.id === 2).peop} —Ä–∞–±–æ—á–∏—Ö
üè¢ 3&#8419;. ${bizs.find(x=> x.id === 3).name} | ${spaces(bizs.find(x=> x.id === 3).count)}$ | ${bizs.find(x=> x.id === 3).peop} —Ä–∞–±–æ—á–∏—Ö
üè¢ 4&#8419;. ${bizs.find(x=> x.id === 4).name} | ${spaces(bizs.find(x=> x.id === 4).count)}$ | ${bizs.find(x=> x.id === 4).peop} —Ä–∞–±–æ—á–∏—Ö
üè¢ 5&#8419;. ${bizs.find(x=> x.id === 5).name} | ${spaces(bizs.find(x=> x.id === 5).count)}$ | ${bizs.find(x=> x.id === 5).peop} —Ä–∞–±–æ—á–∏—Ö
üè¢ 6&#8419;. ${bizs.find(x=> x.id === 6).name} | ${spaces(bizs.find(x=> x.id === 6).count)}$ | ${bizs.find(x=> x.id === 6).peop} —Ä–∞–±–æ—á–∏—Ö
üè¢ 7&#8419;. ${bizs.find(x=> x.id === 7).name} | ${spaces(bizs.find(x=> x.id === 7).count)}$ | ${bizs.find(x=> x.id === 7).peop} —Ä–∞–±–æ—á–∏—Ö
üè¢ 8&#8419;. ${bizs.find(x=> x.id === 8).name} | ${spaces(bizs.find(x=> x.id === 8).count)}$ | ${bizs.find(x=> x.id === 8).peop} —Ä–∞–±–æ—á–∏—Ö
üè¢ 9&#8419;. ${bizs.find(x=> x.id === 9).name} | ${spaces(bizs.find(x=> x.id === 9).count)}$ | ${bizs.find(x=> x.id === 9).peop} —Ä–∞–±–æ—á–∏—Ö
üè¢ üîü. ${bizs.find(x=> x.id === 10).name} | ${spaces(bizs.find(x=> x.id === 10).count)}$ | ${bizs.find(x=> x.id === 10).peop} —Ä–∞–±–æ—á–∏—Ö

‚ö† ‚ûæ –ù–∞–Ω—è—Ç—å —Ä–∞–±–æ—á–µ–≥–æ: –Ω–∞–Ω—è—Ç—å [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]  | +${spaces(config.peop)}$/—á
üè¢ ‚ûæ –¶–µ–Ω–∞ –Ω–∞–π–º–∞ 1 —Ä–∞–±–æ—á–µ–≥–æ - ${spaces(config.peop_c)}$
üè¢ ‚ûæ –ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –±–∏–∑–Ω–µ—Å–∞ –∫ –µ–≥–æ –¥–æ—Ö–æ–¥—É –ø—Ä–∏–±–∞–≤–ª—è–µ—Ç—Å—è 0.1% –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏!

üè¢ ‚ûæ –î–ª—è –ø–æ–∫—É–ø–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ: –ë–∏–∑–Ω–µ—Å [–Ω–æ–º–µ—Ä]
üè¢ ‚ûæ –î–∞–Ω–Ω—ã–µ –æ –±–∏–∑–Ω–µ—Å–µ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–º–∞–Ω–¥–æ–π: "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"

‚ö† ‚ûæ '–î–æ—Ö–æ–¥' - –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–±—ã–ª—å

‚ö† ‚ûæ –î–ª—è –ø—Ä–æ–¥–∞–∂–∏ –±–∏–∑–Ω–µ—Å–∞ –Ω–∞–ø–∏—à–∏: –ü—Ä–æ–¥–∞—Ç—å –±–∏–∑–Ω–µ—Å
üëâ ‚ûæ –ü—Ä–∏ –ø—Ä–æ–¥–∞–∂–µ –≤–µ—Ä–Ω–µ—Ç—Å—è 80% –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –±–∏–∑–Ω–µ—Å–∞.
 		`);
 	}
 	if(i < 0 || i > 10) return message.send(`üè¢ ‚ûæ –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –±–∏–∑–Ω–µ—Å–∞.`)
 	if(!Number(message.$match[1])) return message.send(`üè¢ ‚ûæ –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –±–∏–∑–Ω–µ—Å–∞`)
 	if(user.biz.id == 0){
 		if(user.balance < biz.count) return message.send(`üè¢ ‚ûæ –£ –≤–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–π —Å—É–º–º—ã.`,{ attachment: market_m,  keyboard: JSON.stringify(donat) });
		await user.dec("balance", biz.count);
		user.biz.id = biz.id;
		user.biz.zp = biz.zp;
		log[user.number].push(`–ö—É–ø–∏–ª –±–∏–∑–Ω–µ—Å (${biz.name}) –∑–∞ ${spaces(biz.count)}$. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		message.send(`üè¢ ‚ûæ –í—ã –∫—É–ø–∏–ª–∏ –±–∏–∑–Ω–µ—Å "${biz.name}" –∑–∞ ${spaces(biz.count)}$`)
	} else {
		message.send(`üè¢ ‚ûæ –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –±–∏–∑–Ω–µ—Å!`)
	}
	return user.save()
});

///–ù–∞–Ω—è—Ç—å///
vk.updates.hear(/^(?:–Ω–∞–Ω—è—Ç—å)\s?([0-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let biz = bizs.find(x=> x.id === user.biz.id);
	if(!message.$match[1]) return message.send(`üè¢ ‚ûæ –£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—á–∏—Ö\n–ü—Ä–∏–º–µ—Ä: –Ω–∞–Ω—è—Ç—å [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]`)
	if(message.$match[1] * config.peop_c > user.balance) return message.send(`üè¢ ‚ûæ –î–ª—è –ø–æ–∫—É–ø–∫–∏ ${spaces(message.$match[1])} —Ä–∞–±–æ—á–∏—Ö –Ω—É–∂–Ω–æ ${spaces(message.$match[1] * config.peop_c)}$!`,{ attachment: market_m,  keyboard: JSON.stringify(donat) });
	if(user.biz.id == 0) return message.send(`üè¢ ‚ûæ –£ –≤–∞—Å –Ω–µ –∫—É–ø–ª–µ–Ω –±–∏–∑–Ω–µ—Å.`)
	if(biz.peop - user.biz.peop < message.$match[1]) return message.send(`üè¢ ‚ûæ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤: ${biz.peop}`)
	let count = Number(message.$match[1]) * config.peop_c
	await user.dec("balance", count);
	user.biz.peop += Number(message.$match[1])
	log[user.number].push(`–ù–∞–Ω—è–ª ${spaces(message.$match[1])} —Ä–∞–±–æ—á–∏—Ö –∑–∞ ${spaces(count)}$. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
	message.send(`üè¢ ‚ûæ –í—ã –∫—É–ø–∏–ª–∏ ${spaces(message.$match[1])} —Ä–∞–±–æ—á–∏—Ö –∑–∞ ${spaces(count)}$. –í–∞—à–∞ –ø—Ä–∏–±—ã–ª—å —É–≤–µ–ª–∏—á–∏–ª–∞—Å—å –Ω–∞: ${spaces(message.$match[1] * config.peop)}$`)
	return user.save()
});

///–î–æ—Ö–æ–¥///
vk.updates.hear(/(?:–¥–æ—Ö–æ–¥|–ø—Ä–∏–±—ã–ª—å)\s?([0-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();	let biz = bizs.find(x=> x.id === user.biz.id);
	if(user.biz.id == 0) return message.send(`üè¢ ‚ûæ –£ –≤–∞—Å –Ω–µ—Ç –±–∏–∑–Ω–µ—Å–∞!`)
	if(user.biz.zarp > 0){
		let sum = user.biz.zarp;
		await user.inc("balance", Math.floor(sum));
		user.biz.zarp = 0;
		log[user.number].push(`–ü–æ–ª—É—á–∏–ª —Å –±–∏–∑–Ω–µ—Å–∞ ${spaces(sum)}$. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		message.send(`üè¢ ‚ûæ –í—ã –ø–æ–ª—É—á–∏–ª–∏ —Å –±–∏–∑–Ω–µ—Å–∞: ${spaces(sum)}$`);
	} else {
		message.send(`üè¢ ‚ûæ –í–∞—à –±–∏–∑–Ω–µ—Å –µ—â–µ –Ω–µ –ø—Ä–∏–Ω–µ—Å –ø—Ä–∏–±—ã–ª–∏!`)
	}
	return user.save()
});

///–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞///
vk.updates.hear(/^(?:—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞|—Å—Ç–∞—Ç)/i, async (message) => {
	msg();
	let user = await userq;
	let biz = bizs.find(x=> x.id === user.biz.id);
	if(user.biz.id != 0){
		return message.send(`
üè¢ ‚ûæ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∏–∑–Ω–µ—Å–∞: 
üî∏ ‚ûæ –ë–∏–∑–Ω–µ—Å: ${biz.name}
üî∏ ‚ûæ –ü—Ä–∏–±—ã–ª—å: ${spaces(user.biz.peop * config.peop + biz.zp)}$
üî∏ ‚ûæ –õ—é–¥–µ–π: ${spaces(user.biz.peop)}
üî∏ ‚ûæ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ –ª—é–¥–µ–π: ${spaces(biz.peop)}
		`)
	}else{
		return message.send(`üè¢ ‚ûæ –£ –≤–∞—Å –Ω–µ—Ç –±–∏–∑–Ω–µ—Å–∞!`)
	}
});

///SetNick///
vk.updates.hear(/^(?:setnick)\s?([0-9]+)?\s([^]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	if(user.level < 4) return message.send(`üî∏ ‚ûæ –í—ã –Ω–µ –•—ç–ª–ø–µ—Ä!`);
	if(!message.$match[1] || !message.$match[2]) return message.send(`üî∏ ‚ûæ –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: setnick [ID] [–Ω–∏–∫]`);
	let zaprets1 = message.$match[1].toLowerCase();
	if(zaprets.zapr.find(x=> x === zaprets1)) {
		return message.send(`–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ!`);
	};
	let filter0 = /(http(s)?:\/\/.)?(www\.)?[-a-z0-9@:%._\+~#=]{1,256}\.[a-z]{2,6}/
	let filter1 = /(?!http(s)?:\/\/)?(www\.)?[–∞-—è0-9-_.]{1,256}\.(—Ä—Ñ|—Å—Ä–±|–±–ª–æ–≥|–±–≥|—É–∫—Ä|—Ä—É—Å|“õ–∞–∑|ÿßŸÖÿßÿ±ÿßÿ™.|ŸÖÿµÿ±.|ÿßŸÑÿ≥ÿπŸàÿØŸäÿ©.)/
	let lol = filter0.test(zaprets1)
	let lol1 = filter1.test(zaprets1)
	if (filter0.test(zaprets1) == true || filter1.test(zaprets1) == true) {
		return message.send(`üìó ‚ûæ –ü—Ä–∏–¥—É–º–∞–π—Ç–µ –∞–¥–µ–∫–≤–∞—Ç–Ω—ã–π –Ω–∏–∫`);
	}
	await userz.set("prefix", message.$match[2]);
	log[user.number].push(`–ò–∑–º–µ–Ω–∏–ª –Ω–∏–∫ –∏–≥—Ä–æ–∫–∞ ${message.$match[1]}. –ù–∏–∫: ${message.$match[2]} –í—Ä–µ–º—è: ${time()}|${data()}`);
	log[userz.number].push(`–ù–∏–∫ –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω –∏–≥—Ä–æ–∫–æ–º ${user.number}. –ù–∏–∫: ${message.$match[2]} –í—Ä–µ–º—è: ${time()}|${data()}`)
	message.send(`üìó ‚ûæ –í—ã —Å–º–µ–Ω–∏–ª–∏ –Ω–∏–∫ –∏–≥—Ä–æ–∫–∞ –Ω–∞: ${message.$match[2]}`);
	await user.save()
	return userz.save()
});

///–ë–∞–Ω–∫ —Å–Ω—è—Ç—å///
vk.updates.hear(/^(?:–±–∞–Ω–∫ —Å–Ω—è—Ç—å)\s(.*)$/i, async message => {
	msg();
	let user = await userq;
	message.$match[1] = message.$match[1].replace(/(\.|\,|\$)/ig, '');
	message.$match[1] = message.$match[1].replace(/(–∫|k)/ig, '000');
	message.$match[1] = message.$match[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤–±|–≤—Å—ë)/ig, user.bank);
	if(!Number(message.$match[1])) return message.send(`üèõ ‚ûæ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º!`);
	if(user.bank < Number(message.$match[1])) return message.send(`üèõ ‚ûæ–£ –≤–∞—Å –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥!`)
	if(!message.$match[1]) return message.send(`üí∞ ‚ûæ –ü—Ä–∏–º–µ—Ä: –ë–∞–Ω–∫ —Å–Ω—è—Ç—å [—Å—É–º–º–∞]`);
	await user.dec("bank", message.$match[1]);
	await user.inc("balance", Math.floor(message.$match[1]));
	log[user.number].push(`–°–Ω—è–ª —Å –±–∞–Ω–∫–∞ ${spaces(message.$match[1])}$. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$ –ë–∞–Ω–∫: ${spaces(user.bank)}$`);
	message.send(`${userp}, –≤—ã —Å–Ω—è–ª–∏ —Å —Å—á–µ—Ç–∞ –±–∞–Ω–∫–∞: ${spaces(message.$match[1])}$!\nüèõ ‚ûæ –í –±–∞–Ω–∫–µ: ${spaces(user.bank)}$\nüí¥ ‚ûæ –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
	return user.save()
});

///–ë–∞–Ω–∫ (–ø–æ–ª–æ–∂–∏—Ç—å)///
vk.updates.hear(/^(?:–±–∞–Ω–∫)\s?(.*)/i, async (message) => {
	msg();
	let user = await userq;
	message.$match[1] = message.$match[1].replace(/(\.|\,|\$)/ig, '');
	message.$match[1] = message.$match[1].replace(/(–∫|k)/ig, '000');
	message.$match[1] = message.$match[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤–±|–≤—Å—ë)/ig, user.bank);
	if(!message.$match[1]){
		return message.send(`
${userp}, –≤–∞—à —Å—á–µ—Ç –≤ –±–∞–Ω–∫–µ: ${spaces(user.bank)}$
üèõ ‚ûæ –ß—Ç–æ–±—ã –ø–æ–ª–æ–∂–∏—Ç—å –¥–µ–Ω—å–≥–∏, –Ω–∞–ø–∏—à–∏ "–±–∞–Ω–∫ [—Å—É–º–º–∞]"!
üèõ ‚ûæ –ß—Ç–æ–±—ã —Å–Ω—è—Ç—å –¥–µ–Ω—å–≥–∏, –Ω–∞–ø–∏—à–∏ "–±–∞–Ω–∫ —Å–Ω—è—Ç—å [—Å—É–º–º–∞]"!
		`, { keyboard:JSON.stringify(banks) });
	}
	if(!Number(message.$match[1])) return message.send(`üèõ ‚ûæ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º!`);
	if(message.$match[1]){
		if(user.level == 0){
			if(user.balance < message.$match[1]) return message.send(`üèõ ‚ûæ–£ –≤–∞—Å –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥!`,{ attachment: market_m,  keyboard: JSON.stringify(donat) });
			if(!message.$match[1]) return message.send(`üí∞ ‚ûæ –ü—Ä–∏–º–µ—Ä: –ë–∞–Ω–∫ –ø–æ–ª–æ–∂–∏—Ç—å [—Å—É–º–º–∞] `);
			if(user.bank + Number(message.$match[1]) > 250000000000) return message.send(`${userp}, –≤—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –ø—Ä–µ–≤—ã—Å–∏—Ç—å –ª–∏–º–∏—Ç!`);
			await user.inc("bank", Math.floor(message.$match[1]));
			await user.dec("balance", message.$match[1]);
			log[user.number].push(`–ü–æ–ª–æ–∂–∏–ª –≤ –±–∞–Ω–∫ ${spaces(message.$match[1])}$. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$ –ë–∞–Ω–∫: ${spaces(user.bank)}$`);
			message.send(`${userp}, –≤—ã –ø–æ–ª–æ–∂–∏–ª–∏ –Ω–∞ —Å—á–µ—Ç –±–∞–Ω–∫–∞: ${spaces(message.$match[1])}$!\nüèõ ‚ûæ –í –±–∞–Ω–∫–µ: ${spaces(user.bank)}$\nüí¥ ‚ûæ –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		}
		if(user.level >= 1){
			if(user.balance < message.$match[1]) return message.send(`üèõ ‚ûæ–£ –≤–∞—Å –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥!`)
			if(!message.$match[1]) return message.send(`üí∞ ‚ûæ –ü—Ä–∏–º–µ—Ä: –ë–∞–Ω–∫ –ø–æ–ª–æ–∂–∏—Ç—å [—Å—É–º–º–∞] `);
			if(user.bank + Number(message.$match[1]) > 300000000000) return message.send(`${userp}, –≤—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –ø—Ä–µ–≤—ã—Å–∏—Ç—å –ª–∏–º–∏—Ç!`);
			await user.inc("bank", Math.floor(message.$match[1]));
			await user.dec("balance", message.$match[1]);
			log[user.number].push(`–ü–æ–ª–æ–∂–∏–ª –≤ –±–∞–Ω–∫ ${spaces(message.$match[1])}$. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$ –ë–∞–Ω–∫: ${spaces(user.bank)}$`);
			message.send(`${userp}, –≤—ã –ø–æ–ª–æ–∂–∏–ª–∏ –Ω–∞ —Å—á–µ—Ç –±–∞–Ω–∫–∞: ${spaces(message.$match[1])}$!\nüèõ ‚ûæ –í –±–∞–Ω–∫–µ: ${spaces(user.bank)}$\nüí¥ ‚ûæ –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		}
	}
	return user.save()
});

///–í–∞–±–∞–Ω–∫///
vk.updates.hear(/^(?:–≤–∞–±–∞–Ω–∫)$/i, async (message) => {
	msg();
	let user = await userq;
	if(user.balance < 1) return message.send(`üèµ ‚ûæ –£ —Ç–µ–±—è –Ω–µ—Ç –¥–µ–Ω–µ–≥!`,{ attachment: market_m,  keyboard: JSON.stringify(donat) });
	let coif = 0;
	if(user.balance < 5000000000){
		coif = [0, 0, 0, 0, 0, 0, 0, 1.5, 1.5, 1.5, 1.2, 1.2, 1.2, 1.2, 1, 1, 1].random()
	} else {
		coif = [0, 0, 0, 0, 0, 0, 0, 0, 1.5, 1.5, 1.2, 1.2, 1.2, 1, 1].random()
	}
	let stiker_one = [13917,12695,12482,12479,12498,11757,9978,10000,11767,11768,10016,10021,5796].random()
	let stiker_two = [13482,12676,12694,12712,12492,12495,836,837,3155].random()
	if(coif == 0){
		await user.set("balance", 0);
		log[user.number].push(`–°—ã–≥—Ä–∞–ª –≤ –≤–∞–±–∞–Ω–∫. –ò—Ç–æ–≥: –ø—Ä–æ–∏–≥—Ä–∞–ª –ö–æ—ç—Ñ–∏—Ü–µ–Ω—Ç: ${coif} –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		message.send(`üò£ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ –≤–µ—Å—å —Å–≤–æ–π –±–∞–ª–∞–Ω—Å!`);
		message.sendSticker(stiker_two);
	}
	if(coif == 1){
		let balance = user.balance
		await user.inc("balance", Math.floor(user.balance));
		log[user.number].push(`–°—ã–≥—Ä–∞–ª –≤ –≤–∞–±–∞–Ω–∫. –ò—Ç–æ–≥: –≤—ã–π–≥—Ä–∞–ª –ö–æ—ç—Ñ–∏—Ü–µ–Ω—Ç: ${coif} –°—É–º–º–∞: ${spaces(balance)}$ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		message.send(`ü§¥ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${spaces(balance)}$! –¢–µ–ø–µ—Ä—å –Ω–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ: ${spaces(user.balance)}$!`);
		message.sendSticker(stiker_one);
	}
	if(coif == 1.2){
		let balance = user.balance
		await user.inc("balance", Math.floor(user.balance * 1.2));
		log[user.number].push(`–°—ã–≥—Ä–∞–ª –≤ –≤–∞–±–∞–Ω–∫. –ò—Ç–æ–≥: –≤—ã–π–≥—Ä–∞–ª –ö–æ—ç—Ñ–∏—Ü–µ–Ω—Ç: ${coif} –°—É–º–º–∞: ${spaces(balance * 1.2)}$ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		message.send(`ü§¥ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${spaces(Math.floor(balance * 1.2))}$! –¢–µ–ø–µ—Ä—å –Ω–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ: ${spaces(user.balance)}$!`);
		message.sendSticker(stiker_one);
	}
	if(coif == 1.5){
		let balance = user.balance
		await user.inc("balance", Math.floor(user.balance * 1.5));
		log[user.number].push(`–°—ã–≥—Ä–∞–ª –≤ –≤–∞–±–∞–Ω–∫. –ò—Ç–æ–≥: –≤—ã–π–≥—Ä–∞–ª –ö–æ—ç—Ñ–∏—Ü–µ–Ω—Ç: ${coif} –°—É–º–º–∞: ${spaces(balance * 1.5)}$ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		message.send(`ü§¥ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${spaces(Math.floor(balance * 1.5))}$! –¢–µ–ø–µ—Ä—å –Ω–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ: ${spaces(user.balance)}$!`);
		message.sendSticker(stiker_one);
	}
	return user.save()
});

///Stop///
vk.updates.hear(/^(?:stop)\s?([0-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	if(user.level < 7) return message.send(`–í—ã –Ω–µ –°–ø–µ—Ü.–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!`);
	stop_bot = true;
	if(!message.$match[1]){
		let timer = 5;
		await message.send(`–ë–æ—Ç –±—É–¥–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...`);
		await console.log(`–ë–æ—Ç –±—É–¥–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...`);
		setInterval(async () => {
			timer -= 1;
			if(timer == 2){
				await message.send(`–ë–æ—Ç –±—É–¥–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã...`);
				await console.log(`–ë–æ—Ç –±—É–¥–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã...`);
			}
			if(timer == 0){
				setImmediate(save);
				await message.send(`–ë–∞–∑—ã —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!`);
				await console.log(`–ë–∞–∑—ã —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!`);
				await message.send(`–ë–æ—Ç –±—ã–ª –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!`);
				await console.log(`–ë–æ—Ç –±—ã–ª –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!`);
				return process.exit()
			}
		}, 1000);
	} else {
		let timer = message.$match[1];
		await message.send(`–ë–æ—Ç –±—É–¥–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ ${timer} ${min(timer)}...`);
		await console.log(`–ë–æ—Ç –±—É–¥–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ ${timer} ${min(timer)}...`);
		setInterval(async () => {
			timer -= 1;
			if(timer > 1){
				await message.send(`–ë–æ—Ç –±—É–¥–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ ${timer} ${min(timer)}...`)
				await console.log(`–ë–æ—Ç –±—É–¥–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ ${timer} ${min(timer)}...`)
			}
			if(timer == 1){
				for(i = 1; i < 5000; i++){
					if(chat[i]){
						vk.api.call('messages.send', {
							peer_id: chat[i].id + 2000000000,
							random_id: 0,
							message: `–ë–æ—Ç –±—É–¥–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É...`
						});
					}
				}
				if(!message.isChat) await message.send(`–ë–æ—Ç –±—É–¥–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É...`)
				await console.log(`–ë–æ—Ç –±—É–¥–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É...`);
			}
			if(timer == 0){
				setImmediate(save);
				await message.send(`–ë–∞–∑—ã —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!`);
				await console.log(`–ë–∞–∑—ã —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!`);
				await message.send(`–ë–æ—Ç –±—ã–ª –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!`)
				await console.log(`–ë–æ—Ç –±—ã–ª –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!`);
				return process.exit()
			}
		}, 60000);
	}
});

///Get///
vk.updates.hear(/^(?:get)\s?([0-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let userz = {};
	if(user.level < 1) return message.send(`–í—ã –Ω–µ VIP –∏–≥—Ä–æ–∫!`);
	if(message.$match[1]){
		userz = await User.findOne({ number: message.$match[1] });
	} else {
		if(message.replyMessage){
			userz = await User.findOne({ id: message.replyMessage.senderId });
		}
	}
	if(!userz) return message.send(`–¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!`);
	let partner = await User.findOne({ number: userz.marriage.part });
	let cas = ``;
	let warns = '';
	let sb = fabric.find(x=> x.id === userz.fabric.id);
	let gun = twists.find(x=> x.id === userz.gun);
	let air = airs.find(x=> x.id === userz.air);
	let home = homes.find(x=> x.id === userz.home);
	let phone = phones.find(x=> x.id === userz.phone);
	let hel = hels.find(x=> x.id === userz.hel);
	let boat = boats.find(x=> x.id === userz.boat);
	let car = cars.find(x=> x.id === userz.car);
	let biz = bizs.find(x=> x.id === userz.biz.id);
	let pet = pets.find(x=> x.id === userz.pet);
	let adm = adms.find(x=> x.lvl === userz.level);
	for(i=0;i<userz.warn_p.length;i++){warns += `\n‚ùó ‚ûæ ${userz.warn_p[i]}`}
	if(userz.inv.case.one > 0 || userz.inv.case.two > 0 || userz.inv.case.three > 0 || userz.inv.case.four > 0 || userz.inv.case.five > 0){
		cas += `\nüì¶ –ö–µ–π—Å—ã:`
		if(userz.inv.case.one > 0) cas += `\n1‚É£ ‚ûæ ${cases.find(x=> x.id === 1).name} (${spaces(userz.inv.case.one)} —à—Ç.)`
		if(userz.inv.case.two > 0) cas += `\n2‚É£ ‚ûæ ${cases.find(x=> x.id === 2).name} (${spaces(userz.inv.case.two)} —à—Ç.)`
		if(userz.inv.case.three > 0) cas += `\n3‚É£ ‚ûæ ${cases.find(x=> x.id === 3).name} (${spaces(userz.inv.case.three)} —à—Ç.)`
		if(userz.inv.case.four > 0) cas += `\n4‚É£ ‚ûæ ${cases.find(x=> x.id === 4).name} (${spaces(userz.inv.case.four)} —à—Ç.)`
		if(userz.inv.case.five > 0) cas += `\n5‚É£ ‚ûæ ${cases.find(x=> x.id === 5).name} (${spaces(userz.inv.case.five)} —à—Ç.)`
		cas += `\n`
	}
	if(userz.block.prof == true) return message.send(`–ü—Ä–æ—Ñ–∏–ª—å –¥–∞–Ω–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É!`);
	log[user.number].push(`–ü–æ—Å–º–æ—Ç—Ä–µ–ª –ø—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞ ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()} –ö–æ–º–∞–Ω–¥–∞: GET`)
	return message.send(`
üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–≥—Ä–æ–∫–µ [${userz.prefix}] üìã
üî∏ ‚ûæ üÜî: ${userz.number}
üîπ ‚ûæ VK: @id${userz.id}
üí¥ ‚ûæ –ë–∞–ª–∞–Ω—Å: ${spaces(userz.balance)}$
üèõ ‚ûæ –ë–∞–Ω–∫: ${spaces(userz.bank)}$
ü§ñ ‚ûæ –†–æ–±–æ—Ç–æ–≤: ${spaces(userz.rob)}
üíé ‚ûæ –†–∏–∫–ª–æ–≤: ${spaces(userz.don)}
üëë ‚ûæ –†–µ–π—Ç–∏–Ω–≥: ${spaces(userz.gl)}
üíä ‚ûæ –¢–∞–±–ª–µ—Ç–æ–∫: ${spaces(userz.tabl)}
üîã ‚ûæ –≠–Ω–µ—Ä–≥–∏–∏: ${userz.mine.eng}
üèÜ ‚ûæ –û–ø—ã—Ç: ${spaces(userz.mine.lvl)}
üí¢ ‚ûæ –ü—Ä–∏–≤–∏–ª–µ–≥–∏—è: ${adm.name}

üêº ‚ûæ –ü–∏—Ç–æ–º–µ—Ü: ${pet.name}
`+(userz.family == 0 ? `üë´ ‚ûæ –°–µ–º—å—è:  –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\n` : `üë¨ ‚ûæ –°–µ–º—å—è:  ${family[userz.family].name}\n`)+
(userz.marriage.part == 0 ? `üíç ‚ûæ –ü–∞—Ä—Ç–Ω—ë—Ä: –û—Ç—Å—É—Ç–≤—É–µ—Ç` : `üíç ‚ûæ –ü–∞—Ä—Ç–Ω—ë—Ä: ${partner.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${partner.nick.toString().replace(/true/gi, `@id${partner.id}(${partner.prefix})`).replace(/false/gi, `${partner.prefix}`)} ${partner.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")}`)+`
‚ù§ ‚ûæ –ó–¥–æ—Ä–æ–≤—å–µ: ${userz.heal}

üî± –ò–º—É—â–µ—Å—Ç–≤–æ:\n`+
(userz.air == 0 ? `` : `‚úà ‚ûæ –°–∞–º–æ–ª–µ—Ç: ${air.name}\n`)+
(userz.hel == 0 ? `` : `üöÅ ‚ûæ –í–µ—Ä—Ç–æ–ª–µ—Ç: ${hel.name}\n`)+
(userz.car == 0 ? `` : `üöò ‚ûæ –ê–≤—Ç–æ–º–æ–±–∏–ª—å: ${car.name}\n`)+
(userz.boat == 0 ? `` : `üö§ ‚ûæ –õ–æ–¥–∫–∞: ${boat.name}\n`)+
(userz.phone == 0 ? `` : `üì± ‚ûæ –¢–µ–ª–µ—Ñ–æ–Ω: ${phone.name}\n`)+`üè° ‚ûæ –î–æ–º: ${home.name}
üî´ ‚ûæ –û—Ä—É–∂–∏–µ: ${gun.name}
`+(userz.biz.id == 0 ? `üè¢‚ûæ –ë–∏–∑–Ω–µ—Å: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\n` : `üè¢‚ûæ –ë–∏–∑–Ω–µ—Å: ${biz.name} || ${spaces(userz.biz.peop * config.peop + biz.zp)}$/—á–∞—Å\n`)+
(userz.fabric.id == 0 ? `üõ†‚ûæ –°–±–æ—Ä–æ—á–Ω—ã–µ: –û—Ç—Å—É—Ç–≤—É—é—Ç` : `üõ†‚ûæ –°–±–æ—Ä–æ—á–Ω—ã–µ: "${sb.name}" (${spaces(userz.fabric.sum)} —à—Ç.)`)+`
${cas}
‚åö ‚ûæ –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É: ${userz.msg.last_msg}
üí¨ ‚ûæ –ö–æ–º–∞–Ω–¥ –∫ –±–æ—Ç—É: ${spaces(userz.msg.command)}
üìö ‚ûæ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${userz.rtime}

‚ö† ‚ûæ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: ${spaces(userz.warn)}`+(userz.warn == 0 ? `` : `\n‚ö† ‚ûæ –ü—Ä–∏—á–∏–Ω—ã:${warns}`)+(userz.level < 4 ? `` : `\n‚õî ‚ûæ –ê–¥–º–∏–Ω-–≤—ã–≥–æ–≤–æ—Ä–æ–≤: ${spaces(userz.vig)}`)+(userz.ban_t > getUnix() ? `` : ``+(userz.ban == false ? `\n‚ö† ‚ûæ –ê–∫–∫–∞—É–Ω—Ç –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!` :`\n‚ö† ‚ûæ –ê–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω! [–ü—Ä–∏—á–∏–Ω–∞: ${userz.ban_i}]`)+``)+(userz.ban_t < getUnix() ? `` : `\n‚ö† ‚ûæ –ê–∫–∫–∞—É–Ω—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω! [–ü—Ä–∏—á–∏–Ω–∞: ${userz.ban_i}]`)+`
`+(userz.refm == 0 ? `üö´ ‚ûæ –†–µ—Ñ –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!` : `‚úÖ ‚ûæ –†–µ—Ñ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!`)+`
	`);
});

///–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è///
vk.updates.hear(/^(?:–ø—Ä–µ–¥|–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è|–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ)/i, async message => {
	msg();
	let user = await userq;
	let warns = '';
	for(i=0;i<user.warn_p.length;i++){warns += `\n‚ùó ‚ûæ ${user.warn_p[i]}`}
	return message.send(`
‚õî ‚ûæ –ê–¥–º–∏–Ω-–≤—ã–≥–æ–≤–æ—Ä–æ–≤: ${user.vig}
‚ö† ‚ûæ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: ${user.warn}
`+(user.warn == 0 ? `` : `‚ö† ‚ûæ –ü—Ä–∏—á–∏–Ω—ã:${warns}`)+`
	`);
});

///Warn///–í–∞—Ä–Ω///
vk.updates.hear(/^(?:warn|–≤–∞—Ä–Ω)\s?([0-9]+)\s?([^]+)?\s([^]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	console.log(userz.number)
	if(!message.$match[1] || !message.$match[2] || !message.$match[3]) return message.send(`üî∏ ‚ûæ –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: warn [ID] [–ü—É–Ω–∫—Ç –ø—Ä–∞–≤–∏–ª–∞] [–ü—Ä–∏—á–∏–Ω–∞]`);
	if(!Number(message.$match[1])) return message.send(`üî∏ ‚ûæ –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –≤–∏–¥–∞.`);
	if(user.level < 5) return message.send(`üî∏ ‚ûæ –í—ã –Ω–µ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä`);
	if(!userz) return message.send(`‚ùé ‚ûæ –¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç!`);
	if(userz.level > 4) return message.send(`–û—à–∏–±–∫–∞!`);
	userz.warn += 1;
	userz.warn_p.push(message.$match[3]);
	let adm = adms.find(x=> x.lvl === user.level);
	log[user.number].push(`–í—ã–¥–∞–ª –ø—Ä–µ–¥—Ä–µ–∂–¥–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É: ${message.$match[1]}. –ü—É–Ω–∫—Ç: ${message.$match[2]} –ü—Ä–∏—á–∏–Ω–∞: ${message.$match[3]} –í—Ä–µ–º—è: ${time()}|${data()}`);
	log[userz.number].push(`–ü–æ–ª—É—á–∏–ª –ø—Ä–µ–¥—Ä–µ–∂–¥–µ–Ω–∏–µ –æ—Ç –∏–≥—Ä–æ–∫–∞: ${user.number}. –ü—É–Ω–∫—Ç: ${message.$match[2]} –ü—Ä–∏—á–∏–Ω–∞: ${message.$match[3]} –í—Ä–µ–º—è: ${time()}|${data()}`);
	let text = `‚úÖ ‚ûæ ${userp} [${adm.name}] –≤—ã–¥–∞–ª –≤–∞–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–Ω–∏–µ.\n‚úÖ ‚ûæ –ü—É–Ω–∫—Ç: ${message.$match[2]}\n‚úÖ ‚ûæ –ü—Ä–∏—á–∏–Ω–∞: ${message.$match[3]}`
	let sms = `‚úÖ ‚ûæ –í—ã –≤—ã–¥–∞–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")}.\n‚úÖ ‚ûæ –ü—É–Ω–∫—Ç: ${message.$match[2]}\n‚úÖ ‚ûæ –ü—Ä–∏—á–∏–Ω–∞: ${message.$match[3]}\n‚úÖ ‚ûæ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: ${userz.warn}/3`
	if(userz.warn == 3){
		userz.warn = 0;
		userz.ban = true;
		userz.ban_i = "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∑–∞ 3 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è";
		userz.warn_p = [];
		text += `\nüî∏ ‚ûæ –£ –≤–∞—Å 3 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è.\nüî∏ ‚ûæ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.`
		sms += `\n‚úÖ ‚ûæ –ê–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!`
		log[userz.number].push(`–ò–≥—Ä–æ–∫ –ø–æ–ª—É—á–∏–ª 3 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∏ –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –í—Ä–µ–º—è: ${time()}|${data()}`);
	}
	vk.api.call('messages.send', {
		peer_id: userz.id,
		random_id: 0,
		message: text
    });

	if(message.user != owner){
	    vk.api.call('messages.send', {
			peer_id: chat_w + 2000000000,
			random_id: 0,
			message: `@id${user.id}(${user.prefix}) [${adm.name}, ID: ${message.$match[1]}] –≤—ã–¥–∞–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É @id${userz.id}(${userz.prefix}) [ID: ${userz.number}]\n–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: ${userz.warn}/3\n–ü—É–Ω–∫—Ç: ${message.$match[2]}\n–ü—Ä–∏—á–∏–Ω–∞: ${message.$match[3]}`
		});
	}
	await message.send(sms);
	await user.save()
	return userz.save()
});

///UnWarn///
vk.updates.hear(/^(?:unwarn)\s?([0-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	if(!message.$match[1]) return message.send(`üî∏ ‚ûæ –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: unwarn ID`);
	if(!Number(message.$match[1])) return message.send(`üî∏ ‚ûæ –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –≤–∏–¥–∞.`);
	if(user.level < 5) return message.send(`üî∏ ‚ûæ –í—ã –Ω–µ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä`);
	if(!userz) return message.send(`‚ùé ‚ûæ –¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç!`);
	await userz.set("warn", 0);
	userz.warn_p = [];
	let adm = adms.find(x=> x.lvl === user.level);
	log[user.number].push(`–°–Ω—è–ª –≤—Å–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è —Å –∏–≥—Ä–æ–∫–∞ ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()}`);
	log[userz.number].push(`–°–Ω—è—Ç—ã –≤—Å–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–º: ${user.number}. –í—Ä–µ–º—è: ${time()}|${data()}`);

	vk.api.call('messages.send', {
		peer_id: userz.id,
		random_id: 0,
		message: `‚úÖ ‚ûæ ${userp} [${adm.name}] —Å–Ω—è–ª –≤–∞–º –≤—Å–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è!`
	});

	if(message.user != owner){
		vk.api.call('messages.send', {
			peer_id: chat_w + 2000000000,
			random_id: 0,
			message: `@id${user.id}(${user.prefix}) [${adm.name}, ID: ${user.number}] —Å–Ω—è–ª –≤—Å–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∏–≥—Ä–æ–∫—É @id${userz.id}(${userz.prefix}) [ID: ${message.$match[1]}]`
		});
	}

	message.send(`‚úÖ ‚ûæ –í—ã —Å–Ω—è–ª–∏ –≤—Å–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∏–≥—Ä–æ–∫—É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")}.`);
	await user.save()
	return userz.save()
});

///–¢–æ–ø —Å–µ–º—å–∏///
vk.updates.hear(/^(?:—Ç–æ–ø —Å–µ–º—å–∏)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	return message.send(`${top_family}\n‚ùó ‚ûæ –¢–æ–ø –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Ä–∞–∑ –≤ 10 –º–∏–Ω—É—Ç!`);
});

///–¢–æ–ø –±–∞–ª–∞–Ω—Å///
vk.updates.hear(/^(?:—Ç–æ–ø –±–∞–ª–∞–Ω—Å|—Ç–æ–ø –±–∞–ª)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	return message.send(`${top_money}\n‚ùó ‚ûæ –¢–æ–ø –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Ä–∞–∑ –≤ 10 –º–∏–Ω—É—Ç!`);
});

///–¢–æ–ø —Ä–æ–±–æ—Ç—ã///
vk.updates.hear(/^(?:—Ç–æ–ø —Ä–æ–±–æ—Ç—ã|—Ç–æ–ø —Ä–æ–±)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	return message.send(`${top_rob}\n‚ùó ‚ûæ –¢–æ–ø –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Ä–∞–∑ –≤ 10 –º–∏–Ω—É—Ç!`);
});

///–¢–æ–ø —Ä–µ–π—Ç–∏–Ω–≥///
vk.updates.hear(/^(?:—Ç–æ–ø —Ä–µ–π—Ç–∏–Ω–≥|—Ç–æ–ø —Ä–µ–π—Ç)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	return message.send(`${top_gl}\n‚ùó ‚ûæ –¢–æ–ø –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Ä–∞–∑ –≤ 10 –º–∏–Ω—É—Ç!`);
});

///–¢–æ–ø—ã///
vk.updates.hear(/^(?:—Ç–æ–ø|—Ç–æ–ø—ã)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	return message.send(`
üëë‚ûæ –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–ø–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É: "—Ç–æ–ø —Ä–µ–π—Ç–∏–Ω–≥"
üí¥‚ûæ –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–ø–∞ –ø–æ –±–∞–ª–∞–Ω—Å—É –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É: "—Ç–æ–ø –±–∞–ª–∞–Ω—Å"
ü§ñ‚ûæ –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–ø–∞ –ø–æ —Ä–æ–±–æ—Ç–∞–º –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É: "—Ç–æ–ø —Ä–æ–±–æ—Ç—ã"
    `)
});

///–ü–æ–∏—Å–∫///–ù–∞–π—Ç–∏///
vk.updates.hear(/^(?:–ø–æ–∏—Å–∫|–Ω–∞–π—Ç–∏|search)(\shttps\:\/\/vk\.com\/)?(id)?([0-9]+)?([^]+)?/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	if(user.level < 4) return message.send(`–í—ã –Ω–µ –•—ç–ª–ø–µ—Ä!`);
	if(message.$match[3]){
		let userz = await User.findOne({ id: message.$match[3] });
		if (!userz) return message.send(`–ù–µ –≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ | –ò–≥—Ä–æ–∫–∞ –Ω–µ—Ç`);
		let adm = adms.find(x=> x.lvl === userz.level);
		log[user.number].push(`–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É –ø–æ–∏—Å–∫ –Ω–∞ –∏–≥—Ä–æ–∫–µ: ${userz.number}. –í—Ä–µ–º—è: ${time()}|${data()}`);
		return message.send(`
ID: ${userz.number}
–ù–∏–∫: ${userz.prefix}
–°—Ç–∞—Ç—É—Å: ${adm.name}
		`);
	} else {
		if(!message.$match[4]) return message.send(`–£–∫–∞–∂–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ!`);
		vk.api.call("utils.resolveScreenName",{ screen_name: message.$match[4] }).then(async (res) => {
			let userz = await User.findOne({ id: res.object_id });
			if (!userz) return message.send(`–ù–µ –≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ | –ò–≥—Ä–æ–∫–∞ –Ω–µ—Ç`);
			let adm = adms.find(x=> x.lvl === userz.level);
			log[user.number].push(`–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É –ø–æ–∏—Å–∫ –Ω–∞ –∏–≥—Ä–æ–∫–µ: ${userz.number}. –í—Ä–µ–º—è: ${time()}|${data()}`);
			return message.send(`
ID: ${userz.number}
–ù–∏–∫: ${userz.prefix}
–°—Ç–∞—Ç—É—Å: ${adm.name}
ID VK: ${res.object_id}
				`);
		})
	}
});

///–°–æ—Å—Ç–∞–≤///
vk.updates.hear(/^(?:—Å–æ—Å—Ç–∞–≤)/i, async message => {
	msg();
	let user = await userq;
	await user.save();
	return message.send(`${composition}–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—à –ø—Ä–æ–µ–∫—Ç!!üòä`);
});

///List///
vk.updates.hear(/^(?:list)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	if(user.level < 5) return message.send(`–í—ã –Ω–µ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä!`);
	let users = await User.find({ ban: true });
	let devs, admins, moders, vips, chat;
	let devels = ``;
	devs = '–£ —ç—Ç–∏—Ö –∏–≥—Ä–æ–∫–æ–≤ –º—É—Ç/–±–∞–Ω:\n';
	for(let i = 0; i < users.length; i += 1){
		let userm = users[i];
		devs += `@id${userm.id}(${userm.prefix})\n`;
	}
	let text = `\n`;
	if (devs.length != 100) text += devs;
	return message.send(`${text}`);
});

///Mute///
vk.updates.hear(/^(?:mute)?\s([0-9]+)?\s?([0-9]+)?\s([^]+)?/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	let userz = await User.findOne({ number: message.$match[1] });
	let adm = adms.find(x=> x.lvl === user.level);
	if(!message.$match[2] || !Number(message.$match[1]) || !Number(message.$match[2]) || !userz || message.$match[2] > 120 || message.$match[2] < 1 || !message.$match[3]) return message.send(`‚è∫ ‚ûæ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ:\n‚è∫ ‚ûæ mute [ID] [TIME(1-120)] [–ü—Ä–∏—á–∏–Ω–∞]`);
    if(user.level < 4) return message.send(`–í—ã –Ω–µ –•—ç–ª–ø–µ—Ä!`);
    if(userz.level > 4) return message.send(`–û—à–∏–±–∫–∞!`);
	let timez = message.$match[2] * 60000;
	await userz.set("ban_t", getUnix() + timez);
	await userz.set("ban_i", message.$match[3]);
	log[user.number].push(`–í—ã–¥–∞–ª –º—É—Ç –∏–≥—Ä–æ–∫—É: ${message.$match[1]}. –°—Ä–æ–∫: ${message.$match[2]} ${min(message.$match[2])}. –ü—Ä–∏—á–∏–Ω–∞: ${message.$match[3]}. –í—Ä–µ–º—è: ${time()}|${data()}`);
	log[userz.number].push(`–ü–æ–ª—É—á–∏–ª –º—É—Ç –æ—Ç –∏–≥—Ä–æ–∫–∞: ${user.number}. –°—Ä–æ–∫: ${message.$match[2]} ${min(message.$match[2])}. –ü—Ä–∏—á–∏–Ω–∞: ${message.$match[3]}. –í—Ä–µ–º—è: ${time()}|${data()}`);
	setTimeout(() => {
			log[userz.number].push(`–°—Ä–æ–∫ –º—É—Ç–∞ –∏—Å—Ç–µ–∫. –í—Ä–µ–º—è: ${time()}|${data()}`);
	}, timez);

	if(message.user != owner){
		vk.api.call('messages.send', {
			peer_id: chat_w + 2000000000,
			random_id: 0,
			message: `@id${user.id}(${user.prefix}) [${adm.name}, ID: ${user.number}] –∑–∞–º—É—Ç–∏–ª –∏–≥—Ä–æ–∫–∞ @id${userz.id}(${userz.prefix}) [ID: ${message.$match[1]}] –Ω–∞: ${message.$match[2]} ${min(message.$match[2])}.\n–ü—Ä–∏—á–∏–Ω–∞: ${message.$match[3]}.`
		});
	}

	vk.api.call('messages.send', {
		peer_id: userz.id,
		random_id: 0,
		message: `‚è∫ ‚ûæ ${user.prefix} [${adm.name}], –≤–∞–º –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É –Ω–∞ ${message.$match[2]} ${min(message.$match[2])}. –ü—Ä–∏—á–∏–Ω–∞: ${message.$match[3]}.`
	});
	message.send(`–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É –∏–≥—Ä–æ–∫—É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} –Ω–∞ ${message.$match[2]} ${min(message.$match[2])}!\n–ü—Ä–∏—á–∏–Ω–∞: ${message.$match[3]}`);
	await user.save()
	return userz.save()
});

///UnMute///
vk.updates.hear(/^(?:unmute)\s?([0-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	let adm = adms.find(x=> x.lvl === user.level);
	if(user.level < 4) return message.send(`üî∏ ‚ûæ –í—ã –Ω–µ –•—ç–ª–ø–µ—Ä!`);
	if(!message.$match[1] || !Number(message.$match[1]) || !userz) return message.send(`‚è∫ ‚ûæ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ:\n‚è∫ ‚ûæ unmute [ID]`);
	await userz.set("ban_t", 0);
	await userz.set("ban_i", "");
	log[user.number].push(`–°–Ω—è–ª –º—É—Ç –∏–≥—Ä–æ–∫—É: ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()}`);
	log[userz.number].push(`–ü–æ–ª—É—á–∏–ª —Å–Ω—è—Ç–∏–µ –º—É—Ç–∞ –æ—Ç –∏–≥—Ä–æ–∫–∞: ${user.number}. –í—Ä–µ–º—è: ${time()}|${data()}`);
	
	vk.api.call('messages.send', {
		peer_id: userz.id,
		random_id: 0,
		message: `–í—Ä–µ–º–µ–Ω–Ω–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –±—ã–ª–∞ —Å–Ω—è—Ç–∞!`
	});

	if(message.user != owner){
		vk.api.call('messages.send', {
			peer_id: chat_w + 2000000000,
			random_id: 0,
			message: `@id${user.id}(${user.prefix}) [${adm.name}, ID: ${user.number}] —Ä–∞–∑–º—É—Ç–∏–ª –∏–≥—Ä–æ–∫–∞ @id${userz.id}(${userz.prefix}) [ID: ${message.$match[1]}]`
		});
	}

	message.send(`–í—ã —Å–Ω—è–ª–∏ –≤—Ä–µ–º–µ–Ω–Ω—É—é –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —Å –∏–≥—Ä–æ–∫–∞ ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")}!`);
	await user.save()
	return userz.save()
});

///TimeBan///
vk.updates.hear(/^(?:timeban)?\s([0-9]+)?\s?([0-9]+)?\s([^]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	let adm = adms.find(x=> x.lvl === user.level);
	if(user.level < 5) return message.send(`üî∏ ‚ûæ –í—ã –Ω–µ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä!`);
    if(userz.level > 4) return message.send(`–û—à–∏–±–∫–∞!`);
	if(!message.$match[2] || !Number(message.$match[1]) || !Number(message.$match[2]) || !userz || message.$match[2] > 336 || message.$match[2] < 1 || !message.$match[3]) return message.send(`‚è∫ ‚ûæ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ:\n‚è∫ ‚ûæ timeban [ID] [TIME(1-336(2 –Ω–µ–¥–µ–ª–∏))] [–ü—Ä–∏—á–∏–Ω–∞]`);
	let timez = message.$match[2] * 3600000;
	await userz.set("ban_t", getUnix() + (3600000 * message.$match[2]));
	await userz.set("ban_i", message.$match[3]);
	log[user.number].push(`–í—ã–¥–∞–ª –≤—Ä–µ–º–µ–Ω–Ω—ã–π –±–∞–Ω –∏–≥—Ä–æ–∫—É: ${message.$match[1]}. –°—Ä–æ–∫: ${message.$match[2]} ${hour(message.$match[2])}. –ü—Ä–∏—á–∏–Ω–∞: ${message.$match[3]}. –í—Ä–µ–º—è: ${time()}|${data()}`);
	log[userz.number].push(`–ü–æ–ª—É—á–∏–ª –≤—Ä–µ–º–µ–Ω–Ω—ã–π –±–∞–Ω –æ—Ç –∏–≥—Ä–æ–∫–∞: ${user.number}. –°—Ä–æ–∫: ${message.$match[2]} ${hour(message.$match[2])}. –ü—Ä–∏—á–∏–Ω–∞: ${message.$match[3]}. –í—Ä–µ–º—è: ${time()}|${data()}`);
	
	setTimeout(() => {
			log[userz.number].push(`–°—Ä–æ–∫ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –±–∞–Ω–∞ –∏—Å—Ç–µ–∫. –í—Ä–µ–º—è: ${time()}|${data()}`);
	}, timez);

	if(message.user != owner){
		vk.api.call('messages.send', {
			peer_id: chat_w + 2000000000,
			random_id: 0,
			message: `@id${user.id}(${user.prefix}) [${adm.name}, ID: ${user.number}] –≤—ã–¥–∞–ª –≤—Ä–µ–º–µ–Ω–Ω—É—é –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –∏–≥—Ä–æ–∫—É @id${userz.id}(${userz.prefix}) [ID: ${message.$match[1]}] –Ω–∞: ${message.$match[2]} ${hour(message.$match[2])}.\n–ü—Ä–∏—á–∏–Ω–∞: ${message.$match[3]}.`
		});
	}

	vk.api.call('messages.send', {
		peer_id: userz.id,
		random_id: 0,
		message: `‚è∫ ‚ûæ ${userp} [${adm.name}], –≤—ã–¥–∞–ª –≤–∞–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∫—É –∫ –±–æ—Ç—É –Ω–∞ ${message.$match[2]} ${hour(message.$match[2])}. –ü—Ä–∏—á–∏–Ω–∞: ${message.$match[3]}.`
	});
	message.send(`–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É –∏–≥—Ä–æ–∫—É  ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${message.$match[2]} ${hour(message.$match[2])}. –ü—Ä–∏—á–∏–Ω–∞: ${message.$match[3]}.`);
	await user.save()
	return userz.save()
});

///UnTimeBan///
vk.updates.hear(/^(?:untimeban)\s?([0-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	let adm = adms.find(x=> x.lvl === user.level);
	if(user.level < 5) return message.send(`üî∏ ‚ûæ –í—ã –Ω–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä`);
	if(!message.$match[1] || !Number(message.$match[1]) || !userz) return message.send(`‚è∫ ‚ûæ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ:\n‚è∫ ‚ûæ untimeban [ID]`);
	await userz.set("ban_t", 0);
	await userz.set("ban_i", "");
	log[user.number].push(`–°–Ω—è–ª –≤—Ä–µ–º–µ–Ω–Ω—ã–π –±–∞–Ω –∏–≥—Ä–æ–∫—É: ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()}`);
	log[userz.number].push(`–ü–æ–ª—É—á–∏–ª —Å–Ω—è—Ç–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –±–∞–Ω–∞ –æ—Ç –∏–≥—Ä–æ–∫–∞: ${user.number}. –í—Ä–µ–º—è: ${time()}|${data()}`);
	
	vk.api.call('messages.send', {
		peer_id: userz.id,
		random_id: 0,
		message: `–í—Ä–µ–º–µ–Ω–Ω–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –±—ã–ª–∞ —Å–Ω—è—Ç–∞!`
	});

	if(message.user != owner){
		vk.api.call('messages.send', {
			peer_id: chat_w + 2000000000,
			random_id: 0,
			message: `@id${user.id}(${user.prefix}) [${adm.name}, ID: ${user.number}] —Å–Ω—è–ª –≤—Ä–µ–º–µ–Ω–Ω—É—é –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —Å –∏–≥—Ä–æ–∫–∞ @id${userz.id}(${userz.prefix}) [ID: ${message.$match[1]}]`
		});
	}

	message.send(`–í—ã —Å–Ω—è–ª–∏ –≤—Ä–µ–º–µ–Ω–Ω—É—é –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —Å –∏–≥—Ä–æ–∫–∞ ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")}!`);
	await user.save()
	return userz.save()
});

///Kiss///
vk.updates.hear(/^(?:kiss)\s?([0-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	if(!message.$match[1]) return message.send(`üî∏ ‚ûæ –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: kiss ID`);
	if(!Number(message.$match[1])) return message.send(`üî∏ ‚ûæ –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –≤–∏–¥–∞.`);
	if(message.$match[1] == user.number) return message.send(`üíû –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Ü–µ–ª–æ–≤–∞—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è!`)
	if(user.level < 1) return message.send(`üî∏ ‚ûæ –í—ã –Ω–µ VIP –∏–≥—Ä–æ–∫`);
	if(!userz) return message.send(`‚ùé ‚ûæ –¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç!`);
	vk.api.call('messages.send', {
		peer_id: userz.id,
		random_id: 0,
		message: `üíû –ò–≥—Ä–æ–∫ ${userp} –ø–æ—Ü–µ–ª–æ–≤–∞–ª –≤–∞—Å!`
	});
	log[user.number].push(`–ü–æ—Ü–µ–ª–æ–≤–∞–ª –∏–≥—Ä–æ–∫–∞: ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()}`);
	log[userz.number].push(`–ë—ã–ª –ø–æ—Ü–µ–ª–æ–≤–∞–Ω –∏–≥—Ä–æ–∫–æ–º ${user.number}. –í—Ä–µ–º—è: ${time()}|${data()}`);
	message.send(`üíû –í—ã –ø–æ—Ü–µ–ª–æ–≤–∞–ª–∏ ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")}`);
	await user.save()
	return userz.save()
});

///–û–≥–ª—É—à–∏—Ç—å///
vk.updates.hear(/(?:–æ–≥–ª—É—à–∏—Ç—å)\s?([0-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	let gun = twists.find(x=> x.id === user.gun);
	let uron = rand(20,70)
	if(user.block.pari > getUnix()) return message.send(`‚ö† –û–≥–ª—É—à–∞—Ç—å —Å–Ω–æ–≤–∞ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —á–µ—Ä–µ–∑ ${unixStampLeft(user.block.pari - Date.now())}!`);
	if(user.number == message.$match[1]) return message.send(`üî´ ‚ûæ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ–≥–ª—É—à–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è!!`)
	if(!message.$match[1]) return message.send(`üî∏ ‚ûæ –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: –æ–≥–ª—É—à–∏—Ç—å ID`);
	if(!Number(message.$match[1])) return message.send(`üî∏ ‚ûæ –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –≤–∏–¥–∞.`);
	if(user.gun == 0) return message.send(`üî´ ‚ûæ –£ –≤–∞—Å –Ω–µ—Ç –æ—Ä—É–∂–∏—è!`)
	if(user.balance < 500000) return message.send(`üî∏ ‚ûæ –í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç ${spaces(500000 - user.balance)}$!`,{ attachment: market_m,  keyboard: JSON.stringify(donat) });
	if(user.heal < 70) return message.send(`üî∏ ‚ûæ –£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–¥–æ—Ä–æ–≤—å—è!`);
	if(userz.heal < 70) return message.send(`‚ù§ –£ –∏–≥—Ä–æ–∫–∞ –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–¥–æ—Ä–æ–≤—å—è!`);
	if(userz.balance < 500000) return message.send(`–£ –¥–∞–Ω–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥!`);
	if(!userz) return message.send(`‚ùé ‚ûæ –¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç!`);
	if(userz.ban == true) return message.send(`‚ùé ‚ûæ –î–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!`);
	if(user.level < 6){
		user.block.pari = getUnix() + 900000
		setTimeout(() => {
			log[user.number].push(`–°–Ω—è—Ç –æ—Ç–∫–∞—Ç –æ–≥–ª—É—à–µ–Ω–∏—è. –í—Ä–µ–º—è: ${time()}|${data()}`);
		},  900000);
	}
	let fl = gun.uron
	let count = rand(1,100)
	if(userz.id != owner){
	    if(count <= fl){
		vk.api.call('messages.send', {
			peer_id: userz.id,
			random_id: 0,
			message: `üî™ –í–∞—Å –∫—Ç–æ-—Ç–æ –æ–≥–ª—É—à–∏–ª –∏ –∑–∞–±—Ä–∞–ª —É –≤–∞—Å 500.000$!`
		});
		await userz.dec("heal", uron);
		await userz.dec("balance", 500000);
		await user.inc("balance", Math.floor(500000));
		log[user.number].push(`–û–≥–ª—É—à–∏–ª –∏–≥—Ä–æ–∫–∞ ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		log[userz.number].push(`–ë—ã–ª –æ–≥–ª—É—à–µ–Ω –∏–≥—Ä–æ–∫–æ–º ${user.number}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(userz.balance)}$`);
		message.send(`–í—ã —É—Å–ø–µ—à–Ω–æ –æ–≥–ª—É—à–∏–ª–∏ –¥–∞–Ω–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞! –ò –æ—Ç–æ–±—Ä–∞–ª–∏ —É –Ω–µ–≥–æ 500.000$!`);
		}
		if(count > fl){
			vk.api.call('messages.send', {
				peer_id: userz.id,
				random_id: 0,
				message: `üî™ –ò–≥—Ä–æ–∫ ${userp} –ø–æ–ø—ã—Ç–∞–ª—Å—è –í–∞—Å –æ–≥–ª—É—à–∏—Ç—å, –Ω–æ —É –Ω–µ–≥–æ —ç—Ç–æ–≥–æ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å! –í—ã —Å–º–æ–≥–ª–∏ –µ–≥–æ –æ–≥–ª—É—à–∏—Ç—å –∏ –∑–∞–±—Ä–∞—Ç—å —É –Ω–µ–≥–æ 500.000$!`
		});
		await user.dec("balance", 500000);
		await user.dec("heal", uron);
		await userz.inc("balance", Math.floor(500000));
		log[user.number].push(`–ë—ã–ª –æ–≥–ª—É—à–µ–Ω –∏–≥—Ä–æ–∫–æ–º ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		log[userz.number].push(`–û–≥–ª—É—à–∏–ª –∏–≥—Ä–æ–∫–∞ ${user.number}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(userz.balance)}$`);
		message.send(`–ò–≥—Ä–æ–∫ —Å–º–æ–≥ –æ–≥–ª—É—à–∏—Ç—å –í–∞—Å! –¢–∞–∫ –∂–µ –æ–Ω –∑–∞–±—Ä–∞–ª 500.000$!`);
		}
		await user.save()
		return userz.save()
	} else {
		return message.send(`–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –Ω–∞ –¥–∞–Ω–Ω–æ–º –∏–≥—Ä–æ–∫–µ!`)
	}
});

///–°–Ω–µ–∂–æ–∫///
vk.updates.hear(/(?:–°–Ω–µ–∂–æ–∫)\s?([0-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	if(!message.$match[1]) return message.send(`‚ùÑ‚õÑ –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: —Å–Ω–µ–∂–æ–∫ ID. –£ –≤–∞—Å ${spaces(user.snow)} —Å–Ω–µ–∂–∫–æ–≤.`);
	if(!Number(message.$match[1])) return message.send(`üî∏ ‚ûæ –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –≤–∏–¥–∞.`);
	if(user.snow < 1) return message.send(`‚ùÑ –£ –≤–∞—Å –Ω–µ—Ç —Å–Ω–µ–∂–∫–æ–≤! –ß—Ç–æ–±—ã —Å–ª–µ–ø–∏—Ç—å, –Ω–∞–ø–∏—à–∏—Ç–µ "—Å–ª–µ–ø–∏—Ç—å"`);
	if(!userz) return message.send(`‚ùÑ‚õÑ –¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç!`);
	if(message.$match[1] == user.number) return message.send(`‚ùÑ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∫–∏–¥–∞—Ç—å —Å–Ω–µ–∂–æ–∫ –≤ —Å–∞–º–æ–≥–æ —Å–µ–±—è!`);
	if(userz.ban == true) return message.send(`‚ùÑ –î–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!`);
	let tel = ['—Å–ø–∏–Ω—É','–Ω–æ–≥—É','—Ä—É–∫—É','–Ω–æ–≥—É','–≥–æ–ª–æ–≤—É','–ø–ª–µ—á–æ'].random()
	if(userz.id != owner){
		await user.dec("snow", 1);
		vk.api.call('messages.send', {
			peer_id: userz.id,
			random_id: 0,
			message: `‚ùÑ–ò–≥—Ä–æ–∫ ${userp} –∫–∏–Ω—É–ª —Å–Ω–µ–∂–æ–∫ –≤–∞–º –≤ ${tel}!`
		});
		log[user.number].push(`–ö–∏–Ω—É–ª —Å–Ω–µ–∂–æ–∫ –≤ ${tel} –∏–≥—Ä–æ–∫—É ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()} –°–Ω–µ–∂–∫–æ–≤: ${user.snow}`);
		log[userz.number].push(`–ü–æ–ª—É—á–∏–ª —Å–Ω–µ–∂–∫–æ–º –≤ ${tel} –æ—Ç –∏–≥—Ä–æ–∫–∞ ${user.number}. –í—Ä–µ–º—è: ${time()}|${data()}`);
		message.send(`‚ùÑ–í—ã –∫–∏–Ω—É–ª–∏ —Å–Ω–µ–∂–æ–∫ –≤ ${tel} –∏–≥—Ä–æ–∫—É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")}!`);
		await user.save()
		return userz.save()
	} else {
		return message.send(`–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –Ω–∞ –¥–∞–Ω–Ω–æ–º –∏–≥—Ä–æ–∫–µ!`)
	}
});

///–°–ª–µ–ø–∏—Ç—å///
vk.updates.hear(/(?:–°–ª–µ–ø–∏—Ç—å)/i, async (message) => {
	msg();
	let user = await userq;
	let rez = [true, false].random();
	if(rez == false){
		log[user.number].push(`–ù–µ —Å–ª–µ–ø–∏–ª —Å–Ω–µ–∂–∫–æ–≤. –í—Ä–µ–º—è: ${time()}|${data()} –°–Ω–µ–∂–∫–æ–≤: ${user.snow}`);
		message.send(`‚ùÑ –í—ã –Ω–µ —Å–º–æ–≥–ª–∏ —Å–ª–µ–ø–∏—Ç—å —Å–Ω–µ–∂–æ–∫! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ!`);
	}else{
		let count = [1,2,3,4,5,6,1,2,3,7,1].random();
		await user.inc("snow", Math.floor(count));
		log[user.number].push(`–°–ª–µ–ø–∏–ª ${count} ${count.toString().replace(/1/gi, `—Å–Ω–µ–∂–æ–∫`).replace(/2|3|4/gi, `—Å–Ω–µ–∂–∫–∞`).replace(/5|6|7/gi, `—Å–Ω–µ–∂–æ–≤`)}. –í—Ä–µ–º—è: ${time()}|${data()} –°–Ω–µ–∂–∫–æ–≤: ${user.snow}`);
		message.send(`‚ùÑ –í—ã —Å–ª–µ–ø–∏–ª–∏ ${count} ${count.toString().replace(/1/gi, `—Å–Ω–µ–∂–æ–∫`).replace(/2|3|4/gi, `—Å–Ω–µ–∂–∫–∞`).replace(/5|6|7/gi, `—Å–Ω–µ–∂–æ–≤`)}!`);
	}
	return user.save()
});

///–ü—Ä–æ–≤–µ—Ä–∫–∞///
vk.updates.hear(/^(?:–ø—Ä–æ–≤–µ—Ä–∫–∞)/i, async (message) => {
	msg();
	let user = await userq;
	if(user.level == 0){
		if(user.ref < 50) return message.send(`üíª –°–Ω–∞—á–∞–ª–∞ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ 50 –¥—Ä—É–∑–µ–π –ø–æ –∞–∫—Ü–∏–∏! –í—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ –ø–æ –∞–∫—Ü–∏–∏: ${user.ref} –∏–≥—Ä–æ–∫–æ–≤.`);
		await user.dec("ref", 50);
		await user.inc("balance", Math.floor(50000000000));
		await user.set("level", 1);
		await user.set("vip", true);
		log[user.number].push(`–ü—Ä–æ—à–µ–ª –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		message.send(`üí∏ –í—ã –ø–æ–ª—É—á–∏–ª–∏ VIP –°–¢–ê–¢–£–° –∏ 50.00.000.000$!`);
	} else {
		if(user.ref < 75) return message.send(`üíª –°–Ω–∞—á–∞–ª–∞ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ 75 –¥—Ä—É–∑–µ–π –ø–æ –∞–∫—Ü–∏–∏! –í—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ –ø–æ –∞–∫—Ü–∏–∏: ${user.ref} –∏–≥—Ä–æ–∫–æ–≤.`);
		await user.dec("ref", 75);
		await user.inc("balance", Math.floor(100000000000));
		await user.set("level", 2);
		await user.set("vip", true);
		log[user.number].push(`–ü—Ä–æ—à–µ–ª –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		message.send(`üí∏ –í—ã –ø–æ–ª—É—á–∏–ª–∏ VIP+ –°–¢–ê–¢–£–° –∏ 100.00.000.000$!`);
	}
	return user.save()
});

///–ö—Ç–æ —è?///
vk.updates.hear(/^(?:–∫—Ç–æ\s—è)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	let count = '';
	let api = await vk.api.call('users.get', { user_id: message.user, fields: "sex" });
	let pol = api[0].sex; 
	if(pol == 1){
		//–æ–Ω–∞
		count = ['—Ö–æ—Ä–æ—à–∏–π —á–µ–ª–æ–≤–µ–∫', '–∏–≥—Ä–æ–∫', '–±–æ–º–∂', '–Ω–∏–∫—Ç–æ', '–±–æ–≥–∞—Ç—ã–π', '—Ç–æ–ø –∏–≥—Ä–æ–∫', '–ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫', '–∫–∏—Å—è', '—Ö–æ—Ä–æ—à–∏–π', '–±–æ—Ç', '–º—ã—à–∫–∞ —Å –∫–ª–∞–≤–æ–π', '–≥–µ—Ä–æ–π', '–µ–¥–∏–Ω–æ—Ä–æ–≥', '—Ä–∞–±–æ—Ç—è–≥–∞', '–Ω–µ—Ä–≤–Ω–∞—è', '–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç', '–ø–æ–≤–∞—Ä', '—Ç—É—Ä–∏—Å—Ç', '–æ–ø—ã—Ç–Ω—ã–π –≥–µ—Ä–æ–∫', '–∏–≥—Ä–æ–∫ —Å–æ —Å—Ç–∞–∂–µ–º', '–Ω–æ–≤–µ—á—ë–∫', '–ª–µ–¥–∏ —Ä–æ–±–æ—Ç'].random();
	} else {
		//–æ–Ω
		count = ['—Ö–æ—Ä–æ—à–∏–π —á–µ–ª–æ–≤–µ–∫', '–∏–≥—Ä–æ–∫', '–±–æ–º–∂', '–Ω–∏–∫—Ç–æ', '–±–æ–≥–∞—Ç—ã–π', '—Ç–æ–ø –∏–≥—Ä–æ–∫', '–ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫', '—Ö–æ—Ä–æ—à–∏–π', '–±–æ—Ç', '–º—ã—à–∫–∞ —Å –∫–ª–∞–≤–æ–π', '–≥–µ—Ä–æ–π', '—Ä–∞–±–æ—Ç—è–≥–∞', '–Ω–µ—Ä–≤–Ω—ã–π', '–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç', '–ø–æ–≤–∞—Ä', '—Ç—É—Ä–∏—Å—Ç', '–æ–ø—ã—Ç–Ω—ã–π –≥–µ—Ä–æ–∫', '–∏–≥—Ä–æ–∫ —Å–æ —Å—Ç–∞–∂–µ–º', '–Ω–æ–≤–µ—á—ë–∫', '–±–∏–∑–Ω–µ—Å–º–µ–Ω', '—Ä–æ–±–æ—Ç'].random();
	}
	return message.send(`üåö –î—É–º–∞—é —á—Ç–æ —Ç—ã ${count} :)`);
});

///–®–∞—Ä///
vk.updates.hear(/^(?:—à–∞—Ä)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	let count = ['–ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –Ω–µ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–µ', '—Å–µ–π—á–∞—Å –Ω–µ–ª—å–∑—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å', '–ø–æ–∫–∞ –Ω–µ —è—Å–Ω–æ', '–∑–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç - "–î–∞"', '–∑–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç - "–ù–µ—Ç"', '–º–æ–∂–µ—à—å –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω –≤ —ç—Ç–æ–º', '–º–æ–π –æ—Ç–≤–µ—Ç - "–Ω–µ—Ç"', '–º–æ–π –æ—Ç–≤–µ—Ç - "–¥–∞"', '–±–µ—Å—Å–ø–æ—Ä–Ω–æ', '–º–Ω–µ –∫–∞–∂–µ—Ç—Å—è - "–î–∞"', '–º–Ω–µ –∫–∞–∂–µ—Ç—Å—è - "–ù–µ—Ç"', '—è —Å–∫–ª–æ–Ω—è—é—Å—å –∫ –æ—Ç–≤–µ—Ç—É - "–ù–µ—Ç"', '—è —Å–∫–ª–æ–Ω—è—é—Å—å –∫ –æ—Ç–≤–µ—Ç—É - "–î–∞"', '—Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ - "–ù–µ—Ç"', '—Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ - "–î–∞"', '–¥–∞ —Ö–∑ —è –≤–æ–æ–±—â–µ, —á—Ç–æ –ø—Ä–∏—Å—Ç–∞–ª –∫–æ –º–Ω–µ?', '–Ω–∞–≤–µ—Ä–Ω–æ–µ - "–ù–µ—Ç"', '–Ω–∞–≤–µ—Ä–Ω–æ–µ - "–î–∞"'].random();
	return message.send(`üåö ${count}`);
});

///–ö–æ–≥–¥–∞///
vk.updates.hear(/^(?:–∫–æ–≥–¥–∞)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	return message.send(`üòÉ –î—É–º–∞—é —á—Ç–æ —á–µ—Ä–µ–∑ ${rand(1,100)} –¥–Ω–µ–π`);
});

///–ö—Ç–æ///
vk.updates.hear(/^(?:–∫—Ç–æ)/i, async (message) => {
	msg();
	let user = await userq;
	let users = [];
	await user.save();
	if(message.isChat){
		vk.api.call('messages.getConversationMembers', { peer_id: message.chat + 2000000000 }).then(async function (res){
			for(i in res.profiles){
				users.push(res.profiles[i].id);
			}
			userm = await User.findOne({ id: users.random() });
			message.send(`üåö –ö–æ–Ω–µ—á–Ω–æ –∂–µ —ç—Ç–æ @id${userm.id}(${userm.prefix})`)
		})
	} else {
		User.countDocuments().exec(function(err,count){
	  		let ran = Math.floor(Math.random() * count);
	  		User.findOne().skip(random).exec(
	   			function(err,userz){
					return message.send(`üåö –ö–æ–Ω–µ—á–Ω–æ –∂–µ —ç—Ç–æ @id${userz.id}(${userz.prefix})`);
	    	});
		});
	}
});

///–°–æ–∑–¥–∞—Ç—å —Å–µ–º—å—é///
vk.updates.hear(/^(?:—Å–æ–∑–¥–∞—Ç—å —Å–µ–º—å—é)\s?([^]+)?/i, async (message) => {
	msg();
	let user = await userq;
	if(user.balance < 25000000000) return message.send(`üë¨ ‚ûæ –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ–º—å–∏ –Ω—É–∂–Ω–æ: 25.000.000.000$!`,{ attachment: market_m,  keyboard: JSON.stringify(donat) });
    user.balance -= 25000000000;
	if(!message.$match[1]) return message.send(`üë¨ ‚ûæ –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è —Å–µ–º—å–∏.`);
	if(user.family != 0) return message.send(`üë¨ ‚ûæ –í—ã —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Å–µ–º—å–µ!`);
	let args =  message.$match[1];
	for(let i = 0; i < family.length; i += 1)
	if(family[i].name == args) return message.send(`üë¨ ‚ûæ –°–µ–º—å—è —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.`);
	config.family += 1;
	let count = config.family
	family[count] = {
		id: count,
		name: args,
		users: [],
		bank: 0,
		people: 1,
		counts: 0,
		owner: user.number
	}
	family[count].users.push(user.number)
	user.family = count;
	log[user.number].push(`–°–æ–∑–¥–∞–ª —Å–µ–º—å—é. –ù–∞–∑–≤–∞–Ω–∏–µ: ${args} –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
	message.send(`
üë¨ ‚ûæ –í—ã —Å–æ–∑–¥–∞–ª–∏ —Å–µ–º—å—é "${args}"
üë¨ ‚ûæ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: "–°–µ–º—å—è"
	`);
	fs.writeFileSync("./base/family.json", JSON.stringify(family, null, "\t"));
	return user.save()
});

///–í–æ–π—Ç–∏///
vk.updates.hear(/(?:–≤–æ–π—Ç–∏)\s?([^]+)?/i, async (message) => {
	msg();
	let user = await userq;
	for(i=1;i<200000;i++)
	if(family[message.$match[1]].owner == user.number) return message.send(`üë¨ ‚ûæ –í—ã –∏ —Ç–∞–∫ —Å–æ–∑–¥–∞—Ç–µ–ª—å —Å–µ–º—å–∏!`);
	if(!message.$match[1]) return message.send(`üë¨ ‚ûæ –ù–∞–ø–∏—à–∏—Ç–µ id —Å–µ–º—å–∏, –∫—É–¥–∞ —Ö–æ—Ç–∏—Ç–µ –≤—Å—Ç—É–ø–∏—Ç—å.`);
	if(user.family != 0) return message.send(`üë¨ ‚ûæ –í—ã —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Å–µ–º—å–µ`);
	let args = message.$match[1];
	if(!family[args].id) return message.send(`üë¨ ‚ûæ –°–µ–º—å–∏ —Å —Ç–∞–∫–∏–º id –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.`);
	family[args].people += 1;
	family[args].users.push(user.number)
	await user.set("family", args);
	log[user.number].push(`–í—Å—Ç—É–ø–∏–ª –≤ —Å–µ–º—å–∏. –ù–∞–∑–≤–∞–Ω–∏–µ: ${family[args].name} ID —Å–µ–º—å–∏: ${family[args].id} –í—Ä–µ–º—è: ${time()}|${data()}`);
	message.send(`
üë¨ ‚ûæ –í—ã –≤—Å—Ç—É–ø–∏–ª–∏ –≤ —Å–µ–º—å—é "${family[args].name}"
üë¨ ‚ûæ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: "C–µ–º—å—è"
	`);
	fs.writeFileSync("./base/family.json", JSON.stringify(family, null, "\t"));
	return user.save()
});

///–í—ã–π—Ç–∏///
vk.updates.hear(/^(?:–≤—ã–π—Ç–∏)/i, async (message) => {
	msg();
	let user = await userq;
	if(user.family == 0) return message.send(`üë¨ ‚ûæ –í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Å–µ–º—å–µ`);
	let name = family[user.family].name;
	if(family[user.family].owner == user.number) return message.send(`üë¨ ‚ûæ –°–æ–∑–¥–∞—Ç–µ–ª—å —Å–µ–º—å–∏ –Ω–µ –º–æ–∂–µ—Ç –µ—ë –ø–æ–∫–∏–Ω—É—Ç—å!`);
	family[user.family].people -= 1;
	await user.set("family", 0);
	log[user.number].push(`–í—ã—à–µ–ª –∏–∑ —Å–µ–º—å–∏. –ù–∞–∑–≤–∞–Ω–∏–µ: ${name} –í—Ä–µ–º—è: ${time()}|${data()}`);
	message.send(`
üë¨ ‚ûæ –í—ã –ø–æ–∫–∏–Ω—É–ª–∏ —Å–µ–º—å—é "${name}"
	`);
	fs.writeFileSync("./base/family.json", JSON.stringify(family, null, "\t"));
	return user.save()
});

///–ö–æ–ø–∏–ª–∫–∞///
vk.updates.hear(/(?:–∫–æ–ø–∏–ª–∫–∞)/i, async (message) => {
	msg();
	let user = await userq;
	if(user.family == 0) return message.send(`üìò ‚ûæ –í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Å–µ–º—å–µ`);
	let name = family[user.family].name;
	if(family[user.family].owner != user.number) return message.send(`üìò ‚ûæ –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Å–æ–∑–¥–∞—Ç–µ–ª—é —Å–µ–º—å–∏!`);
	let sum = family[user.family].bank;
	family[user.family].bank = 0;
	await user.inc("balance", Math.floor(sum));
	log[user.number].push(`–°–Ω—è–ª ${spaces(sum)}$ —Å –∫–æ–ø–∏–ª–∫–∏ —Å–µ–º—å–∏. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${user.balance}$`);
	message.send(`
üí¥ ‚ûæ –í—ã —Å–Ω—è–ª–∏ —Å –∫–æ–ø–∏–ª–∫–∏ —Å–µ–º—å–∏: ${spaces(sum)}$!
	`);
	fs.writeFileSync("./base/family.json", JSON.stringify(family, null, "\t"));
	return user.save()
});

///–ü–æ–º–æ—á—å —Å–µ–º—å–µ///
vk.updates.hear(/(?:–ø–æ–º–æ—á—å —Å–µ–º—å–µ|–ø–æ–º–æ—á—å)/i, async (message) => {
	msg();
	let user = await userq;
	if(user.family == 0) return message.send(`üìò ‚ûæ –í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Å–µ–º—å–µ`);
	if(user.block.family > getUnix()) return message.send(`üìò ‚ûæ –í–Ω–æ–≤—å –ø–æ–º–æ—á—å —Å–µ–º—å–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ —á–µ—Ä–µ–∑ ${unixStamp(user.block.family - Date.now())}`);
	let name = family[user.family]
	name.counts += 1;
	name.bank += 50000;
	user.block.family = getUnix() + 900000;
	await user.inc("balance", Math.floor(500000));
	setTimeout(() => {
		log[user.number].push(`–°–Ω—è—Ç –æ—Ç–∫–∞—Ç –ø–æ –ø–æ–º–æ—â–µ —Å–µ–º—å–µ. –í—Ä–µ–º—è: ${time()}|${data()}`);
	}, 900000);
	log[user.number].push(`–ü–æ–º–æ–≥ —Å–µ–º—å–µ –∏ –ø–æ–ª—É—á–∏–ª 500.000$. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${user.balance}$`);
	message.send(`
üìò ‚ûæ –í—ã –ø–æ–º–æ–≥–ª–∏ —Å–µ–º—å–µ.
üí∞ ‚ûæ +50.000$ –≤ –∫–æ–ø–∏–ª–∫—É —Å–µ–º—å–∏.
üí∞ ‚ûæ +500.000$ –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å.
	`);
	fs.writeFileSync("./base/family.json", JSON.stringify(family, null, "\t"));
	return user.save()
});

///–°–µ–º—å—è///
vk.updates.hear(/^(?:—Å–µ–º—å—è)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	if(user.family == 0) return message.send(`üìò ‚ûæ –í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Å–µ–º—å–µ`);
	let name = family[user.family]
	let userz = await User.findOne({ number: name.owner });
	fs.writeFileSync("./base/family.json", JSON.stringify(family, null, "\t"));
	return message.send(`
üë¨ ‚ûæ –ù–∞–∑–≤–∞–Ω–∏–µ –°–µ–º—å–∏ "${name.name}"
üë¨ ‚ûæ ID –°–µ–º—å–∏: ${name.id}
üë¨ ‚ûæ –ß–ª–µ–Ω–æ–≤ –°–µ–º—å–∏: ${spaces(name.people)}
üë¨ ‚ûæ –°–æ–∑–¥–∞—Ç–µ–ª—å: @id${userz.id}(${userz.prefix})
üë¨ ‚ûæ –í –∫–æ–ø–∏–ª–∫–µ: ${spaces(name.bank)}$

üë¨ –ö–æ–º–∞–Ω–¥—ã —Å–µ–º—å–∏:
‚öï –ü–æ–º–æ—á—å —Å–µ–º—å–µ - –ø–æ–º–æ—â—å —Å–µ–º—å–µ –≤ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ –∫–æ–ø–∏–ª–∫–∏
‚öï –ö–æ–ø–∏–ª–∫–∞ - —Å–æ–±—Ä–∞—Ç—å –¥–µ–Ω—å–≥–∏ —Å –∫–æ–ø–∏–ª–∫–∏

–í—ã–π—Ç–∏ - –ø–æ–∫–∏–Ω—É—Ç—å —Å–µ–º—å—é
	`);
});

///–ö—Ä—É—Ç–∏—Ç—å///
vk.updates.hear(/^(?:–∫—Ä—É—Ç–∏—Ç—å)$/i, async (message) => {
	msg();
	let user = await userq;
	let count = 1000000000;
	let lol = rand(1, twists.length);
	let a = twists.find(x=> x.id === lol)
	if(user.block.gun > getUnix()) return message.send(`üî´ ‚ûæ –ö—Ä—É—Ç–∏—Ç—å –æ—Ä—É–∂–µ–π–Ω—ã–π –≤—ã —Å–º–æ–∂–µ—Ç–µ —á–µ—Ä–µ–∑ ${unixStampLeft(user.block.gun - Date.now())}`);
	if(user.balance < count) return message.send(`üí∏ ‚ûæ –û—Ä—É–∂–µ–π–Ω—ã–π –∫–µ–π—Å —Å—Ç–æ–∏—Ç ${spaces(count)}$`,{ attachment: market_m,  keyboard: JSON.stringify(donat) });
	await user.dec("balance", count);
	if(user.level < 6){
		user.block.gun = getUnix() + 900000;
		setTimeout(() => {
			log[user.number].push(`–°–Ω—è—Ç –æ—Ç–∫–∞—Ç –ø–æ –∫—Ä—É—Ç–∏—Ç—å. –í—Ä–µ–º—è: ${time()}|${data()}`);
		}, 900000);
	}
	await user.set("gun", a.id);
	log[user.number].push(`–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É –∫—Ä—É—Ç–∏—Ç—å. –û—Ä—É–∂–∏–µ: ${a.name} –£—Ä–æ–Ω: ${a.uron} –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${user.balance}$`);
	message.send(`
üí∏ ‚ûæ –í—ã –æ—Ç–∫—Ä—ã–ª–∏ –æ—Ä—É–∂–µ–π–Ω—ã–π –∫–µ–π—Å –∑–∞ ${spaces(count)}$
üí´ ‚ûæ –í–∞–º –≤—ã–ø–∞–ª–æ –æ—Ä—É–∂–∏–µ:
üî´ ‚ûæ ${a.name} —Å —É—Ä–æ–Ω–æ–º ${a.uron} –µ–¥–∏–Ω–∏—Ü!

‚ö† ‚ûæ –ü—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∫–µ–π—Å–∞, –¥–∞–Ω–Ω–æ–µ –æ—Ä—É–∂–∏–µ –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω–æ –≤—ã–ø–∞–≤—à–∏–º.
	`,
	{attachment: a.photo}
	);
	return user.save()
});

///Kit///–ö–∏—Ç///
vk.updates.hear(/^(?:kit|–∫–∏—Ç)$/i, async message => {
	msg();
	let user = await userq;
	let adm = adms.find(x=> x.lvl === user.level);
	let tost = adms.find(x=> x.lvl === 3);
	if(user.level == 0) return message.send(`üèµ ‚ûæ –í—ã –Ω–µ VIP/VIP+ –∏–≥—Ä–æ–∫!`,{ attachment: market_vp,  keyboard: JSON.stringify(donat) });
	if(user.level == 1){
		let bonus = 500000000;
		if(user.block.kit > getUnix()) return message.send(`üèµ ‚ûæ –ö–∏—Ç ${adm.name_v} –∏–≥—Ä–æ–∫–∞ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –≤–∑—è—Ç—å —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ ${unixStampLeft(user.block.kit - Date.now())}`);
		await user.inc("balance", Math.floor(bonus));
		log[user.number].push(`–ó–∞–±—Ä–∞–ª –∫–∏—Ç ${adm.name_v} –∏–≥—Ä–æ–∫–∞. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		message.send(`–í—ã –ø–æ–ª—É—á–∏–ª–∏ ${spaces(bonus)}$ –∏–∑ –Ω–∞–±–æ—Ä–∞ ${adm.name_v} –∏–≥—Ä–æ–∫–∞!\n –°–ª–µ–¥—É—é—â–∏–π –∫–∏—Ç –≤–∞–º –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ 12 —á–∞—Å–æ–≤!`)
	};
	if(user.level == 2){
		let bonus = 1500000000;
		if(user.block.kit > getUnix()) return message.send(`üèµ ‚ûæ –ö–∏—Ç ${adm.name_v} –∏–≥—Ä–æ–∫–∞ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –≤–∑—è—Ç—å —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ ${unixStampLeft(user.block.kit - Date.now())}`);
		await user.inc("balance", Math.floor(bonus));
		log[user.number].push(`–ó–∞–±—Ä–∞–ª –∫–∏—Ç ${adm.name_v} –∏–≥—Ä–æ–∫–∞. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		message.send(`–í—ã –ø–æ–ª—É—á–∏–ª–∏ ${spaces(bonus)}$ –∏–∑ –Ω–∞–±–æ—Ä–∞ ${adm.name_v} –∏–≥—Ä–æ–∫–∞!\n –°–ª–µ–¥—É—é—â–∏–π –∫–∏—Ç –≤–∞–º –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ 12 —á–∞—Å–æ–≤!`)
	};
	if(user.level >= 3){
		let bonus = 2000000000;
		if(user.block.kit > getUnix()) return message.send(`üèµ ‚ûæ –ö–∏—Ç ${tost.name_v} –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –≤–∑—è—Ç—å —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ ${unixStampLeft(user.block.kit - Date.now())}`);
		await user.inc("balance", Math.floor(bonus));
		log[user.number].push(`–ó–∞–±—Ä–∞–ª –∫–∏—Ç ${tost.name_v}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		message.send(`–í—ã –ø–æ–ª—É—á–∏–ª–∏ ${spaces(bonus)}$ –∏–∑ –Ω–∞–±–æ—Ä–∞ ${tost.name_v}!\n –°–ª–µ–¥—É—é—â–∏–π –∫–∏—Ç –≤–∞–º –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ 12 —á–∞—Å–æ–≤!`)
	};
	user.block.kit = getUnix() + 43200000;
	setTimeout(() => {
		log[user.number].push(`–°–Ω—è—Ç –æ—Ç–∫–∞—Ç –∫–∏—Ç–∞. –í—Ä–µ–º—è: ${time()}|${data()}`);
	}, 43200000);
	return user.save()
});

///–†–µ—Ñ///
vk.updates.hear(/(?:—Ä–µ—Ñ)\s?([0-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let ref = `https://vk.me/${config.name}?ref=${message.user}&ref_source=${message.user}`;
	let refka = await vk.api.call('utils.getShortLink',{ url: ref });
	refka = refka.short_url.replace(/^https?:\/\//,'')
	if(!message.$match[1]){
		if(user.level == 0) return message.send(`
üë™ –ö–∞–∂–¥—ã–π, –∫—Ç–æ –Ω–∞–ø–∏—à–µ—Ç "—Ä–µ—Ñ ${user.number}" –∏–ª–∏ –ø–µ—Ä–µ–π–¥–µ—Ç –ø–æ —Å—Å—ã–ª–∫–µ ${refka} –∏ –Ω–∞–ø–∏—à–µ—Ç —Ö–æ—Ç—è –±—ã 1 —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–∏—Ç 1.000.000.000$ –∏ 1 —Ä–∏–∫–ª!

üòÉ –•–æ—á–µ—à—å —Å—Ç–∞—Ç—É—Å VIP? ‚ù§
–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –í–∞—Å, –º—ã –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∫—Ä—É—Ç—É—é –∞–∫—Ü–∏—é!
–ü—Ä–æ—Å—Ç–æ –ø—Ä–∏–≥–ª–∞—Å–∏ 50 –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∏ 50.000.000.000$ –∏ –°–¢–ê–¢–£–° VIP! ‚ò∫üíé
üç∑üåö –ï—Å–ª–∏ –≤—ã —É–∂–µ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ 50 –¥—Ä—É–∑–µ–π, —Å–∫–æ—Ä–µ–π –ø—Ä–æ–ø–∏—à–∏—Ç–µ "–ø—Ä–æ–≤–µ—Ä–∫–∞" —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å VIP —Å—Ç–∞—Ç—É—Å!
	
üíª>>> –í—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ –ø–æ –∞–∫—Ü–∏–∏: ${spaces(user.ref)}
   `)
		if(user.level >= 1) return message.send(`
üë™ –ö–∞–∂–¥—ã–π, –∫—Ç–æ –Ω–∞–ø–∏—à–µ—Ç "—Ä–µ—Ñ ${user.number}" –∏–ª–∏ –ø–µ—Ä–µ–π–¥–µ—Ç –ø–æ —Å—Å—ã–ª–∫–µ ${refka} –∏ –Ω–∞–ø–∏—à–µ—Ç —Ö–æ—Ç—è –±—ã 1 —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–∏—Ç 2.000.000.000$ –∏ 1 —Ä–∏–∫–ª!

üòÉ –•–æ—á–µ—à—å —Å—Ç–∞—Ç—É—Å VIP+? ‚ù§
–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –í–∞—Å, –º—ã –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∫—Ä—É—Ç—É—é –∞–∫—Ü–∏—é!
–ü—Ä–æ—Å—Ç–æ –ø—Ä–∏–≥–ª–∞—Å–∏ 75 –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∏ 100.000.000.000$ –∏ –°–¢–ê–¢–£–° VIP+! ‚ò∫üíé
üç∑üåö –ï—Å–ª–∏ –≤—ã —É–∂–µ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ 75 –¥—Ä—É–∑–µ–π, —Å–∫–æ—Ä–µ–π –ø—Ä–æ–ø–∏—à–∏—Ç–µ "–ø—Ä–æ–≤–µ—Ä–∫–∞" —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å VIP —Å—Ç–∞—Ç—É—Å!
	
üíª>>> –í—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ –ø–æ –∞–∫—Ü–∏–∏: ${spaces(user.ref)}
   		`)
	}
	if(user.refm > 1) return message.send(`–í—ã —É–∂–µ –≤–≤–æ–¥–∏–ª–∏ —Ä–µ—Ñ!`);
	if(message.$match[1] == user.number) return message.send(`–ê—Ö —Ç—ã —Ö–∏—Ç—Ä—é–≥–∞!`);
	if(!Number(message.$match[1])) return message.send(`üî∏ ‚ûæ –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –≤–∏–¥–∞.`);
	let userz = await User.findOne({ number: message.$match[1] });
	if(!userz) return message.send(`‚ùé ‚ûæ –¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç!`);
	if(userz.level == 0){
		userz.balance += 1000000000;
		userz.don += 1;
		userz.ref += 1;
		user.balance += 1000000000;
		user.refm = 2;
		user.don += 1;
		vk.api.call('messages.send', {
			peer_id: userz.id,
			random_id: 0,
			message: `‚ö† –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: –ò–≥—Ä–æ–∫ ${userp} —É–∫–∞–∑–∞–ª –≤–∞—à ID –∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 1.000.000.000$ –∏ 1 —Ä–∏–∫–ª!`
		});
		log[user.number].push(`–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª —Ä–µ—Ñ –∏–≥—Ä–æ–∫–∞ ${message.ref}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$ –†–∏–∫–ª–æ–≤: ${user.don}`);
		log[userz.number].push(`${user.number} –∏–≥—Ä–æ–∫ –∞–∫—Ç–∏–≤–∞—Ä–æ–≤–∞–ª —Ä–µ—Ñ. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(userz.balance)}$ –†–∏–∫–ª–æ–≤: ${userz.don}`);
		await message.send(`–í—ã –ø–µ—Ä–µ—à–ª–∏ –ø–æ —Å—Å—ã–ª–∫–µ –∏–≥—Ä–æ–∫–∞ ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} –∏ –ø–æ–ª—É—á–∏–ª–∏ 1.000.000.000$ –∏ 1 —Ä–∏–∫–ª!`);
		await user.save();
		return userz.save();
	} else {
		userz.balance += 2000000000;
		userz.don += 1;
		userz.ref += 1;
		user.balance += 2000000000;
		user.refm = 2;
		user.don += 1;
		vk.api.call('messages.send', {
			peer_id: userz.id,
			random_id: 0,
			message: `‚ö† –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: –ò–≥—Ä–æ–∫ ${userp} —É–∫–∞–∑–∞–ª –≤–∞—à ID –∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 2.000.000.000$ –∏ 1 —Ä–∏–∫–ª!`
		});
		log[user.number].push(`–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª —Ä–µ—Ñ –∏–≥—Ä–æ–∫–∞ ${message.ref}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$ –†–∏–∫–ª–æ–≤: ${user.don}`);
		log[userz.number].push(`${user.number} –∏–≥—Ä–æ–∫ –∞–∫—Ç–∏–≤–∞—Ä–æ–≤–∞–ª —Ä–µ—Ñ. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(userz.balance)}$ –†–∏–∫–ª–æ–≤: ${userz.don}`);
		await message.send(`–í—ã –ø–µ—Ä–µ—à–ª–∏ –ø–æ —Å—Å—ã–ª–∫–µ –∏–≥—Ä–æ–∫–∞ ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} –∏ –ø–æ–ª—É—á–∏–ª–∏ 2.000.000.000$ –∏ 1 —Ä–∏–∫–ª!`);
		await user.save();
		return userz.save();
	}
});

///–¢–∏—Ä///
vk.updates.hear(/^(?:—Ç–∏—Ä)/i, async (message) => {
	msg();
	let user = await userq;
	let gun = twists.find(x=> x.id === user.gun);
	let pr = 3500000;
	if(user.gun == 0) return message.send(`üî´ ‚ûæ–£ –≤–∞—Å –Ω–µ—Ç –æ—Ä—É–∂–∏—è. –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∑–∞–ø–æ–ª—É—á–∏—Ç—å –æ—Ä—É–∂–∏–µ –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É: "–ö—Ä—É—Ç–∏—Ç—å"!`)
	if(user.block.tir > getUnix()) return message.send(`üî´ ‚ûæ–°—Ç—Ä–µ–ª—è—Ç—å –≤ —Ç–∏—Ä–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ —á–µ—Ä–µ–∑ ${unixStamp(user.block.tir - Date.now())}`);
	if(user.balance < pr) return message.send(`üí£ ‚ûæ–î–ª—è –∏–≥—Ä—ã –≤ —Ç–∏—Ä –≤–∞–º –Ω–∞–¥–æ ${spaces(pr)}$!`,{ attachment: market_m,  keyboard: JSON.stringify(donat) });
 	user.block.tir = getUnix() + 180000
	setTimeout(() => {
		log[user.number].push(`–°–Ω—è—Ç –æ—Ç–∫–∞—Ç –ø–æ —Ç–∏—Ä—É. –í—Ä–µ–º—è: ${time()}|${data()}`);
		vk.api.call('messages.send', {
		peer_id: user.id,
		random_id: 0,
		message: `üî´ ‚ûæ–í–∞–º —Å–Ω–æ–≤–∞ –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–∏—Ä!`
		});
	}, 180000);
	let rez = rand(1,2);
	if(rez == 1){
		await user.dec("balance", pr);
		log[user.number].push(`–ü—Ä–æ–∏–≥—Ä–∞–ª –≤ —Ç–∏—Ä–µ. –ü—Ä–æ–∏–≥—Ä–∞–ª: ${spaces(pr)}$ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		message.send(`üî´ ‚ûæ–í—ã –Ω–µ –ø–æ–ø–∞–ª–∏ –∏ –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${spaces(pr)}$!`);
	} else {
		let count = rand(500000,50000000);
		let bonus = 0;
		if(event == 1){
			bonus = Math.floor(count * (1 + (proc / 100)));
		} else {
			bonus = Math.floor(count);
		}
		user.balance += bonus;
		log[user.number].push(`–í—ã–π–≥—Ä–∞–ª –≤ —Ç–∏—Ä–µ. –í—ã–π–≥—Ä—ã—à: ${spaces(bonus)} –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		message.send(`üî´ ‚ûæ–í—ã –ø–æ–ø–∞–ª–∏!\nüëí ‚ûæ–í—ã –ø–æ–ª—É—á–∏–ª–∏ ${spaces(bonus)}$`+(event != 1 ? `` : ` (+${proc}%)`)+`!`);
	}
	return user.save()
});

///AddPromo///
vk.updates.hear(/^(?:addpromo)\s?([0-9]+)?\s([^]+)?/i, async (message) => {
	msg();
	let user = await userq;   
	message.$match[2] = message.$match[2].replace(/(\.|\,)/ig, '');
	message.$match[2] = message.$match[2].replace(/(–∫|k)/ig, '000');
	if(user.level < 7) return message.send(`–í—ã –Ω–µ –ì–ª.–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!`);
    if(!message.$match[1] || !message.$match[2]) return message.send(`–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: addpromo [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π] [—Å—É–º–º–∞]!`);
	if(message.$match[2] < 100000 || message.$match[2] > 10000000000) return message.send(`–ü—Ä–æ–º–æ–∫–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –Ω–∏–∂–µ 100.000$ –∏ –Ω–µ –±–æ–ª–µ–µ 10.000.000.000$! ${smileerr}`)
 	let result  = message.$match[2];
	let words  = 'QWERTYUIOPASDFGHJKLZXCVBNM';
	let max_position = words.length - 1;
	let kol = rand(2,6)
	for( i = 0; i < kol; ++i ) {
		position = Math.floor ( Math.random() * max_position );
		result = result + words.substring(position, position + 1);
	}
	let vr = new Date()
	let tim = time(vr)
	let dat = data(vr)
	promo.promos[result] = {
		users: {},
		activ_t: Math.floor(message.$match[1]),
		activ: Math.floor(message.$match[1]),
		time: tim,
		date: dat,
		time_l: ``,
		type: 1,
		balance: Math.floor(message.$match[2])
	}
	fs.writeFileSync("./base/promo.json", JSON.stringify(promo, null, "\t"));
	log[user.number].push(`–°–æ–∑–¥–∞–ª –ø—Ä–æ–º–æ –Ω–∞ ${message.$match[1]} –∞–∫—Ç–∏–≤–∞—Ü–∏–µ–π —Å—É–º–º–æ–π ${spaces(message.$match[2])}$. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
	for(i=1;i<1000;i++){
	    if(chat[i]){
			vk.api.call('messages.send', {
				peer_id: chat[i].id + 2000000000,
				random_id: 0,
				message: `üëë ‚ûæ –õ–æ–≤–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ ${spaces(message.$match[2])}$ —Å ${spaces(message.$match[1])} –∞–∫—Ç–∏–≤–∞—Ü–∏—è–º–∏!  üëë ‚ûæ –í–≤–µ–¥–∏—Ç–µ:`
			});
			vk.api.call('messages.send', {
				peer_id: chat[i].id + 2000000000,
				random_id: 0,
				message: `–ü—Ä–æ–º–æ–∫–æ–¥ ${result}`
			});
		}
	}
 	return user.save()
 });

///–ü—Ä–æ–º–æ–∫–æ–¥///
vk.updates.hear(/^(?:–ø—Ä–æ–º–æ–∫–æ–¥|–ø—Ä–æ–º–æ)\s?([^]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let prom = promo.promos[message.$match[1]];
 	if(!prom) return message.send(`üìù ‚ûæ –¢–∞–∫–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –Ω–µ—Ç—É/–ª–∏–±–æ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –∞–∫—Ç–∏–≤–∞—Ü–∏–∏!`);
 	if(prom.users[message.user]) return message.send(`üìù ‚ûæ –í—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥!`);
 	prom.users[message.user] = {i: true};
 	prom.activ -= 1;
	let vr = new Date()
	let tim = time(vr)
	let dat = data(vr)
 	prom.time_l = `${tim} ${dat}`
 	if(prom.type == 1){
		await user.inc("balance", Math.floor(prom.balance));
		log[user.number].push(`–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ ${spaces(prom.balance)}$. –ê–∫—Ç–∏–≤–∞—Ü–∏–π –æ—Å—Ç–∞–ª–æ—Å—å: ${prom.activ}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		message.send(`‚úÖ ‚ûæ –í—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥!\n‚úÖ ‚ûæ –í—ã –ø–æ–ª—É—á–∏–ª–∏: ${spaces(prom.balance)}$!`+(prom.activ == 0 ? `\nüìõ ‚ûæ –≠—Ç–æ –±—ã–ª–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è!:D` : `\nüìõ ‚ûæ –û—Å—Ç–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∞—Ü–∏–π: ${spaces(prom.activ)}`)+``);
 	}
 	if(prom.type == 2){
		await user.inc("don", Math.floor(prom.balance));
		log[user.number].push(`–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ ${spaces(prom.balance)} —Ä–∏–∫–ª–æ–≤. –ê–∫—Ç–∏–≤–∞—Ü–∏–π –æ—Å—Ç–∞–ª–æ—Å—å: ${prom.activ}. –í—Ä–µ–º—è: ${time()}|${data()} –†–∏–∫–ª–æ–≤: ${spaces(user.don)}`);
		message.send(`‚úÖ ‚ûæ –í—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥!\n‚úÖ ‚ûæ –í—ã –ø–æ–ª—É—á–∏–ª–∏: ${spaces(prom.balance)} —Ä–∏–∫–ª–æ–≤!`+(prom.activ == 0 ? `\nüìõ ‚ûæ –≠—Ç–æ –±—ã–ª–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è!:D` : `\nüìõ ‚ûæ –û—Å—Ç–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∞—Ü–∏–π: ${spaces(prom.activ)}`)+``);
 	}
	if(prom.type == 3){
		await user.inc("rob", Math.floor(prom.balance));
		log[user.number].push(`–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ ${spaces(prom.balance)} ${rob(prom.balance)}. –ê–∫—Ç–∏–≤–∞—Ü–∏–π –æ—Å—Ç–∞–ª–æ—Å—å: ${prom.activ}. –í—Ä–µ–º—è: ${time()}|${data()} –†–æ–±–æ—Ç–æ–≤: ${spaces(user.rob)}`);
		message.send(`‚úÖ ‚ûæ –í—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥!\n‚úÖ ‚ûæ –í—ã –ø–æ–ª—É—á–∏–ª–∏: ${spaces(prom.balance)} ${rob(prom.balance)}!`+(prom.activ == 0 ? `\nüìõ ‚ûæ –≠—Ç–æ –±—ã–ª–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è!:D` : `\nüìõ ‚ûæ –û—Å—Ç–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∞—Ü–∏–π: ${spaces(prom.activ)}`)+``);
 	}
	if(prom.type == 4){
		await user.inc("gl", Math.floor(prom.balance));
		log[user.number].push(`–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ ${spaces(prom.balance)} —Ä–µ–π—Ç–∏–Ω–≥–∞. –ê–∫—Ç–∏–≤–∞—Ü–∏–π –æ—Å—Ç–∞–ª–æ—Å—å: ${prom.activ}. –í—Ä–µ–º—è: ${time()}|${data()} –†–µ–π—Ç–∏–Ω–≥–∞: ${spaces(user.gl)}`);
		message.send(`‚úÖ ‚ûæ –í—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥!\n‚úÖ ‚ûæ –í—ã –ø–æ–ª—É—á–∏–ª–∏: ${spaces(prom.balance)} —Ä–µ–π—Ç–∏–Ω–≥–∞!`+(prom.activ == 0 ? `\nüìõ ‚ûæ –≠—Ç–æ –±—ã–ª–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è!:D` : `\nüìõ ‚ûæ –û—Å—Ç–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∞—Ü–∏–π: ${spaces(prom.activ)}`)+``);
 	}
 	if(prom.type == 5){
 		let coif = rand(1,4)
 		if(coif == 1){
 			let prombal = rand(1,3)
 			await user.inc("don", Math.floor(prombal));
			log[user.number].push(`–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ ${spaces(prombal)} —Ä–∏–∫–ª–æ–≤. –ê–∫—Ç–∏–≤–∞—Ü–∏–π –æ—Å—Ç–∞–ª–æ—Å—å: ${promo.promos[message.$match[1]].activ}. –í—Ä–µ–º—è: ${time()}|${data()} –†–∏–∫–ª–æ–≤: ${spaces(user.don)}`);
			message.send(`‚úÖ ‚ûæ –í—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥!\n‚úÖ ‚ûæ –í—ã –ø–æ–ª—É—á–∏–ª–∏: ${spaces(prombal)} —Ä–∏–∫–ª–æ–≤!`+(prom.activ == 0 ? `\nüìõ ‚ûæ –≠—Ç–æ –±—ã–ª–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è!:D` : `\nüìõ ‚ûæ –û—Å—Ç–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∞—Ü–∏–π: ${spaces(prom.activ)}`)+``);
 		}
 		if(coif == 2){
 			let prombal = rand(1,40)
			await user.inc("gl", Math.floor(prombal));
			log[user.number].push(`–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ ${spaces(prombal)} —Ä–µ–π—Ç–∏–Ω–≥–∞. –ê–∫—Ç–∏–≤–∞—Ü–∏–π –æ—Å—Ç–∞–ª–æ—Å—å: ${promo.promos[message.$match[1]].activ}. –í—Ä–µ–º—è: ${time()}|${data()} –†–µ–π—Ç–∏–Ω–≥–∞: ${spaces(user.gl)}`);
			message.send(`‚úÖ ‚ûæ –í—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥!\n‚úÖ ‚ûæ –í—ã –ø–æ–ª—É—á–∏–ª–∏: ${spaces(prombal)} —Ä–µ–π—Ç–∏–Ω–≥–∞!`+(prom.activ == 0 ? `\nüìõ ‚ûæ –≠—Ç–æ –±—ã–ª–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è!:D` : `\nüìõ ‚ûæ –û—Å—Ç–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∞—Ü–∏–π: ${spaces(prom.activ)}`)+``);
 		}
 		if(coif == 3){
 			let prombal = rand(200000000,5000000000)
			await user.inc("balance", Math.floor(prombal));
			log[user.number].push(`–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ ${spaces(prombal)}$. –ê–∫—Ç–∏–≤–∞—Ü–∏–π –æ—Å—Ç–∞–ª–æ—Å—å: ${promo.promos[message.$match[1]].activ}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
			message.send(`‚úÖ ‚ûæ –í—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥!\n‚úÖ ‚ûæ –í—ã –ø–æ–ª—É—á–∏–ª–∏: ${spaces(prombal)}$!`+(prom.activ == 0 ? `\nüìõ ‚ûæ –≠—Ç–æ –±—ã–ª–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è!:D` : `\nüìõ ‚ûæ –û—Å—Ç–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∞—Ü–∏–π: ${spaces(prom.activ)}`)+``);
 		}
 		if(coif == 4){
 			let prombal = rand(2000,22000)
			await user.inc("rob", Math.floor(prombal));
			log[user.number].push(`–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ ${spaces(prombal)} ${rob(prombal)}. –ê–∫—Ç–∏–≤–∞—Ü–∏–π –æ—Å—Ç–∞–ª–æ—Å—å: ${promo.promos[message.$match[1]].activ}. –í—Ä–µ–º—è: ${time()}|${data()} –†–æ–±–æ—Ç–æ–≤: ${spaces(user.rob)}`);
			message.send(`‚úÖ ‚ûæ –í—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥!\n‚úÖ ‚ûæ –í—ã –ø–æ–ª—É—á–∏–ª–∏: ${spaces(prombal)} ${rob(prombal)}!`+(prom.activ == 0 ? `\nüìõ ‚ûæ –≠—Ç–æ –±—ã–ª–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è!:D` : `\nüìõ ‚ûæ –û—Å—Ç–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∞—Ü–∏–π: ${spaces(prom.activ)}`)+``);
 		}
 	}

 	if(promo.promos[message.$match[1]].activ == 0) delete promo.promos[message.$match[1]];
	fs.writeFileSync("./base/promo.json", JSON.stringify(promo, null, "\t"));
 	return user.save()
});

///GenPromo///
vk.updates.hear(/(?:genpromo)\s([^]+)?\s([1-5]+)?\s([0-9]+)?\s([^]+)?/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	if(message.user != owner) return message.send(`–í—ã –Ω–µ –°–æ–∑–¥–∞—Ç–µ–ª—å!`);
    message.$match[4] = message.$match[4].replace(/(\.|\,)/ig, '');
	message.$match[4] = message.$match[4].replace(/(–∫|k)/ig, '000');
	if(!message.$match[1] || !message.$match[2] || !message.$match[3] || !message.$match[4]) return message.send(`–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: genpromo [–Ω–∞–∑–≤–∞–Ω–∏–µ] [—Ç–∏–ø] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π] [–Ω–∞–≥—Ä–∞–¥–∞].\n1 —Ç–∏–ø - $\n2 —Ç–∏–ø - —Ä–∏–∫–ª—ã\n3 —Ç–∏–ø - —Ä–æ–±–æ—Ç—ã\n4 —Ç–∏–ø - —Ä–µ–π—Ç–∏–Ω–≥\n5 —Ç–∏–ø - —Ä–∞–Ω–¥–æ–º–Ω—ã–π`)
	let vr = new Date()
	let tim = time(vr)
	let dat = data(vr)
	name = message.$match[1];
	promo.promos[name] = {
		users: {},
		activ_t: Math.floor(message.$match[3]),
		activ: Math.floor(message.$match[3]),
		time: tim,
		date: dat,
		time_l: ``,
		type: Math.floor(message.$match[2]),
		balance: Math.floor(message.$match[4])
	}
	fs.writeFileSync("./base/promo.json", JSON.stringify(promo, null, "\t"));
 	await message.send(`
–ü—Ä–æ–º–æ–∫–æ–¥ "${name}" —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω! –ê–∫—Ç–∏–≤–∞—Ü–∏–π: ${spaces(message.$match[3])}. –¢–∏–ø: ${message.$match[2].replace(/1/ig, `–î–µ–Ω—å–≥–∏.`).replace(/2/ig, `–†–∏–∫–ª—ã.`).replace(/3/ig, `–†–æ–±–æ—Ç—ã.`).replace(/4/ig, `–†–µ–π—Ç–∏–Ω–≥.`).replace(/5/ig, `–†–∞–Ω–¥–æ–º–Ω—ã–π`)}`+(message.$match[2] == 5 ? `` : `\n–°—É–º–º–∞: ${spaces(message.$match[4])}`)+`${message.$match[2].replace(/1/ig, `$`).replace(/2/ig, ` —Ä–∏–∫–ª–æ–≤`).replace(/3/ig, ` —Ä–æ–±–æ—Ç–æ–≤`).replace(/4/ig, ` —Ä–µ–π—Ç–∏–Ω–≥–∞`).replace(/5/ig, ``)}.
–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É:
	`);
	return message.send(`–ü—Ä–æ–º–æ–∫–æ–¥ ${name}`)
});

///GiveMoney///
vk.updates.hear(/^(?:givemoney)\s?([0-9]+)\s(.*)$/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	let adm = adms.find(x=> x.lvl === user.level);
	message.$match[2] = message.$match[2].replace(/(\.|\,)/ig, '');
	message.$match[2] = message.$match[2].replace(/(–∫|k)/ig, '000');
	if(user.level < 7) return message.send(`–í—ã –Ω–µ –ì–ª.–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!`);
	if(!message.$match[1] || !userz || !message.$match[2] || message.$match[2] < 0) return message.send(`–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: givemoney [id] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]`);
	await userz.inc("balance", Math.floor(message.$match[2]));
	log[user.number].push(`–í—ã–¥–∞–ª ${spaces(message.$match[2])}$ –∏–≥—Ä–æ–∫—É ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
	log[userz.number].push(`–ü–æ–ª—É—á–∏–ª ${spaces(message.$match[2])}$ –æ—Ç –∏–≥—Ä–æ–∫–∞ ${user.number}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(userz.balance)}$`);
	if(message.user != owner){
		vk.api.call('messages.send', {
			peer_id: chat_w + 2000000000,
			random_id: 0,
			message: `@id${user.id}(${user.prefix}) [${adm.name}, ID: ${user.number}] –≤—ã–¥–∞–ª –∏–≥—Ä–æ–∫—É @id${userz.id}(${userz.prefix}) [ID: ${message.$match[1]}] ${spaces(message.$match[2])}$!`
		});
	}
	message.send(`üí∞ ‚ûæ –í—ã –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${spaces(message.$match[2])}$`);
	await user.save()
	return userz.save()
});

///GiveBank///
vk.updates.hear(/^(?:givebank)\s?([0-9]+)\s(.*)$/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	let adm = adms.find(x=> x.lvl === user.level);
	message.$match[2] = message.$match[2].replace(/(\.|\,)/ig, '');
	message.$match[2] = message.$match[2].replace(/(–∫|k)/ig, '000');
	if(user.level < 7) return message.send(`–í—ã –Ω–µ –ì–ª.–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!`);
	if(!message.$match[1] || !userz || !message.$match[2] || message.$match[2] < 0) return message.send(`–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: givebank [id] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]`);
	await userz.inc("bank", Math.floor(message.$match[2]));
	log[user.number].push(`–í—ã–¥–∞–ª ${spaces(message.$match[2])}$ –∏–≥—Ä–æ–∫—É ${message.$match[1]} –≤ –±–∞–Ω–∫. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
	log[userz.number].push(`–ü–æ–ª—É—á–∏–ª ${spaces(message.$match[2])}$ –æ—Ç –∏–≥—Ä–æ–∫–∞ ${user.number} –≤ –±–∞–Ω–∫. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(userz.balance)}$`);
	if(message.user != owner){
		vk.api.call('messages.send', {
			peer_id: chat_w + 2000000000,
			random_id: 0,
			message: `@id${user.id}(${user.prefix}) [${adm.name}, ID: ${user.number}] –≤—ã–¥–∞–ª –∏–≥—Ä–æ–∫—É @id${userz.id}(${userz.prefix}) [ID: ${message.$match[1]}] ${spaces(message.$match[2])}$ –≤ –±–∞–Ω–∫!`
		});
	}
	message.send(`üí∞ ‚ûæ –í—ã –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${spaces(message.$match[2])}$ –≤ –±–∞–Ω–∫.`);
	await user.save()
	return userz.save()
});


///GiveRikl///
vk.updates.hear(/^(?:giverikl)\s?([0-9]+)\s(.*)$/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	let adm = adms.find(x=> x.lvl === user.level);
	message.$match[2] = message.$match[2].replace(/(\.|\,)/ig, '');
	message.$match[2] = message.$match[2].replace(/(–∫|k)/ig, '000');
	if(user.level < 7) return message.send(`–í—ã –Ω–µ –ì–ª.–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!`);
	if(!message.$match[1] || !userz || !message.$match[2] || message.$match[2] < 0) return message.send(`–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: giverikl [id] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]`);
	await userz.inc("don", Math.floor(message.$match[2]));
	log[user.number].push(`–í—ã–¥–∞–ª ${spaces(message.$match[2])} —Ä–∏–∫–ª–æ–≤ –∏–≥—Ä–æ–∫—É ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()} –†–∏–∫–ª–æ–≤: ${spaces(user.don)}`);
	log[userz.number].push(`–ü–æ–ª—É—á–∏–ª ${spaces(message.$match[2])} —Ä–∏–∫–ª–æ–≤ –æ—Ç –∏–≥—Ä–æ–∫–∞ ${user.number}. –í—Ä–µ–º—è: ${time()}|${data()} –†–∏–∫–ª–æ–≤: ${spaces(userz.don)}`);
	if(message.user != owner){
		vk.api.call('messages.send', {
			peer_id: chat_w + 2000000000,
			random_id: 0,
			message: `@id${user.id}(${user.prefix}) [${adm.name}, ID: ${user.number}] –≤—ã–¥–∞–ª –∏–≥—Ä–æ–∫—É @id${userz.id}(${userz.prefix}) [ID: ${message.$match[1]}] ${spaces(message.$match[2])} —Ä–∏–∫–ª–æ–≤!`
		});
	}
	message.send(`üíé ‚ûæ –í—ã –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${spaces(message.$match[2])} —Ä–∏–∫–ª–æ–≤üíé`);
	await user.save()
	return userz.save()
});

///GiveGl///
vk.updates.hear(/^(?:givegl)\s?([0-9]+)\s(.*)$/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	let adm = adms.find(x=> x.lvl === user.level);
	message.$match[2] = message.$match[2].replace(/(\.|\,)/ig, '');
	message.$match[2] = message.$match[2].replace(/(–∫|k)/ig, '000');
	if(user.level < 7) return message.send(`–í—ã –Ω–µ –ì–ª.–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!`);
	if(!message.$match[1] || !userz || !message.$match[2] || message.$match[2] < 0) return message.send(`–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: givegl [id] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]`);
	await userz.inc("gl", Math.floor(message.$match[2]));
	log[user.number].push(`–í—ã–¥–∞–ª ${spaces(message.$match[2])} —Ä–µ–π—Ç–∏–Ω–≥–∞ –∏–≥—Ä–æ–∫—É ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()} –†–µ–π—Ç–∏–Ω–≥–∞: ${spaces(user.gl)}`);
	log[userz.number].push(`–ü–æ–ª—É—á–∏–ª ${spaces(message.$match[2])} —Ä–µ–π—Ç–∏–Ω–≥–∞ –æ—Ç –∏–≥—Ä–æ–∫–∞ ${user.number}. –í—Ä–µ–º—è: ${time()}|${data()} –†–µ–π—Ç–∏–Ω–≥–∞: ${spaces(userz.gl)}`);
	if(message.user != owner){
		vk.api.call('messages.send', {
			peer_id: chat_w + 2000000000,
			random_id: 0,
			message: `@id${user.id}(${user.prefix}) [${adm.name}, ID: ${user.number}] –≤—ã–¥–∞–ª –∏–≥—Ä–æ–∫—É @id${userz.id}(${userz.prefix}) [ID: ${message.$match[1]}] ${spaces(message.$match[2])} —Ä–µ–π—Ç–∏–Ω–≥–∞!`
		});
	}
	message.send(`üëë ‚ûæ –í—ã –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${spaces(message.$match[2])} —Ä–µ–π—Ç–∏–Ω–≥–∞`);
	await user.save()
	return userz.save()
});

///GiveTabl///
vk.updates.hear(/^(?:givetabl)\s?([0-9]+)\s(.*)$/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	let adm = adms.find(x=> x.lvl === user.level);
	message.$match[2] = message.$match[2].replace(/(\.|\,)/ig, '');
	message.$match[2] = message.$match[2].replace(/(–∫|k)/ig, '000');
	if(user.level < 7) return message.send(`–í—ã –Ω–µ –ì–ª.–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!`);
	if(!message.$match[1] || !userz || !message.$match[2] || message.$match[2] < 0) return message.send(`–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: givetabl [id] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]`);
	await userz.inc("tabl", Math.floor(message.$match[2]));
	log[user.number].push(`–í—ã–¥–∞–ª ${spaces(message.$match[2])} —Ç–∞–±–ª–µ—Ç–æ–∫ –∏–≥—Ä–æ–∫—É ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()} –¢–∞–±–ª–µ—Ç–æ–∫: ${spaces(user.tabl)}`);
	log[userz.number].push(`–ü–æ–ª—É—á–∏–ª ${spaces(message.$match[2])} —Ç–∞–±–ª–µ—Ç–æ–∫ –æ—Ç –∏–≥—Ä–æ–∫–∞ ${user.number}. –í—Ä–µ–º—è: ${time()}|${data()} –¢–∞–±–ª–µ—Ç–æ–∫: ${spaces(userz.tabl)}`);
	if(message.user != owner){
		vk.api.call('messages.send', {
			peer_id: chat_w + 2000000000,
			random_id: 0,
			message: `@id${user.id}(${user.prefix}) [${adm.name}, ID: ${user.number}] –≤—ã–¥–∞–ª –∏–≥—Ä–æ–∫—É @id${userz.id}(${userz.prefix}) [ID: ${message.$match[1]}] ${spaces(message.$match[2])} —Ç–∞–±–ª–µ—Ç–æ–∫!`
		});
	}
	message.send(`üíä ‚ûæ –í—ã –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${spaces(message.$match[2])} —Ç–∞–±–ª–µ—Ç–æ–∫!`);
	await user.save()
	return userz.save()
});

///GiveRobot///
vk.updates.hear(/^(?:giverobot)\s?([0-9]+)\s(.*)$/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	let adm = adms.find(x=> x.lvl === user.level);
	message.$match[2] = message.$match[2].replace(/(\.|\,)/ig, '');
	message.$match[2] = message.$match[2].replace(/(–∫|k)/ig, '000');
	if(user.level < 7) return message.send(`–í—ã –Ω–µ –ì–ª.–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!`);
	if(!message.$match[1] || !userz || !message.$match[2] || message.$match[2] < 0) return message.send(`–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: giverobot [id] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]`);
	await userz.inc("rob", Math.floor(message.$match[2]));
	log[user.number].push(`–í—ã–¥–∞–ª ${spaces(message.$match[2])} —Ä–æ–±–æ—Ç–æ–≤ –∏–≥—Ä–æ–∫—É ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()} –†–æ–±–æ—Ç–æ–≤: ${spaces(user.rob)}`);
	log[userz.number].push(`–ü–æ–ª—É—á–∏–ª ${spaces(message.$match[2])} —Ä–æ–±–æ—Ç–æ–≤ –æ—Ç –∏–≥—Ä–æ–∫–∞ ${user.number}. –í—Ä–µ–º—è: ${time()}|${data()} –†–æ–±–æ—Ç–æ–≤: ${spaces(userz.rob)}`);
	if(message.user != owner){
		vk.api.call('messages.send', {
			peer_id: chat_w + 2000000000,
			random_id: 0,
			message: `@id${user.id}(${user.prefix}) [${adm.name}, ID: ${user.number}] –≤—ã–¥–∞–ª –∏–≥—Ä–æ–∫—É @id${userz.id}(${userz.prefix}) [ID: ${message.$match[1]}] ${spaces(message.$match[2])} —Ä–æ–±–æ—Ç–æ–≤!`
		});
	}
	message.send(`ü§ñ ‚ûæ –í—ã –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${spaces(message.$match[2])} —Ä–æ–±–æ—Ç–æ–≤!`);
	await user.save()
	return userz.save()
});

///RemoveMoney///
vk.updates.hear(/^(?:removemoney|removebalance)\s?([0-9]+)\s(.*)$/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	let adm = adms.find(x=> x.lvl === user.level);
	message.$match[2] = message.$match[2].replace(/(\.|\,)/ig, '');
	message.$match[2] = message.$match[2].replace(/(–∫|k)/ig, '000');
	message.$match[2] = message.$match[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤–±|–≤—Å—ë)/ig, user.balance);
	if(user.level < 7) return message.send(`–í—ã –Ω–µ –ì–ª.–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!`);
	if(!message.$match[1] || !userz || !message.$match[2] || message.$match[2] < 0) return message.send(`–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: removemoney [id] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]`);
	if(0 > userz.balance-message.$match[2]) return message.send(`–í—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –æ—Ç–Ω—è—Ç—å —Å—É–º–º—É –±–æ–ª—å—à–µ –±–∞–ª–∞–Ω—Å–∞!`);
	await userz.dec("balance", message.$match[2]);
	log[user.number].push(`–ó–∞–±—Ä–∞–ª ${spaces(message.$match[2])}$ —É –∏–≥—Ä–æ–∫–∞ ${message.$match[1]}$. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
	log[userz.number].push(`–ò–≥—Ä–æ–∫–∞ ${user.number} –æ—Ç–Ω—è–ª ${spaces(message.$match[2])}$. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(userz.balance)}$`);
	if(message.user != owner){
		vk.api.call('messages.send', {
			peer_id: chat_w + 2000000000,
			random_id: 0,
			message: `@id${user.id}(${user.prefix}) [${adm.name}, ID: ${user.number}] –æ—Ç–Ω—è–ª —É –∏–≥—Ä–æ–∫–∞ @id${userz.id}(${userz.prefix}) [ID: ${message.$match[1]}] ${spaces(message.$match[2])}$!`
		});
	}
	message.send(`üí∞ ‚ûæ –í—ã –∑–∞–±—Ä–∞–ª–∏ —É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${spaces(message.$match[2])}$!`);
	await user.save()
	return userz.save()
});

///RemoveRobot///
vk.updates.hear(/^(?:removerobot)\s?([0-9]+)\s(.*)$/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	let adm = adms.find(x=> x.lvl === user.level);
	message.$match[2] = message.$match[2].replace(/(\.|\,)/ig, '');
	message.$match[2] = message.$match[2].replace(/(–∫|k)/ig, '000');
	message.$match[2] = message.$match[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤–±|–≤—Å—ë)/ig, user.rob);
	if(user.level < 7) return message.send(`–í—ã –Ω–µ –ì–ª.–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!`);
	if(!message.$match[1] || !userz || !message.$match[2] || message.$match[2] < 0) return message.send(`–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: removerobot [id] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]`);
	if(0 > userz.rob-message.$match[2]) return message.send(`–í—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –æ—Ç–Ω—è—Ç—å —Å—É–º–º—É –±–æ–ª—å—à–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–æ–±–æ—Ç–æ–≤ —É –∏–≥—Ä–æ–∫–∞!`);
	await userz.dec("rob", message.$match[2]);
	log[user.number].push(`–ó–∞–±—Ä–∞–ª ${spaces(message.$match[2])} —Ä–æ–±–æ—Ç–æ–≤ —É –∏–≥—Ä–æ–∫–∞ ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()} –†–æ–±–æ—Ç–æ–≤: ${spaces(user.rob)}`);
	log[userz.number].push(`–ò–≥—Ä–æ–∫–∞ ${user.number} –æ—Ç–Ω—è–ª ${spaces(message.$match[2])} —Ä–æ–±–æ—Ç–æ–≤. –í—Ä–µ–º—è: ${time()}|${data()} –†–æ–±–æ—Ç–æ–≤: ${spaces(userz.rob)}`);
	if(message.user != owner){
		vk.api.call('messages.send', {
			peer_id: chat_w + 2000000000,
			random_id: 0,
			message: `@id${user.id}(${user.prefix}) [${adm.name}, ID: ${user.number}] –æ—Ç–Ω—è–ª —É –∏–≥—Ä–æ–∫–∞ @id${userz.id}(${userz.prefix}) [ID: ${message.$match[1]}] ${spaces(message.$match[2])} —Ä–æ–±–æ—Ç–æ–≤!`
		});
	}
	message.send(`ü§ñ ‚ûæ –í—ã –∑–∞–±—Ä–∞–ª–∏ —É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${spaces(message.$match[2])} —Ä–æ–±–æ—Ç–æ–≤!`);
	await user.save()
	return userz.save()
});

///RemoveTabl///
vk.updates.hear(/^(?:removetabl)\s?([0-9]+)\s(.*)$/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	let adm = adms.find(x=> x.lvl === user.level);
	message.$match[2] = message.$match[2].replace(/(\.|\,)/ig, '');
	message.$match[2] = message.$match[2].replace(/(–∫|k)/ig, '000');
	message.$match[2] = message.$match[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤–±|–≤—Å—ë)/ig, user.tabl);
	if(user.level < 7) return message.send(`–í—ã –Ω–µ –ì–ª.–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!`);
	if(!message.$match[1] || !userz || !message.$match[2] || message.$match[2] < 0) return message.send(`–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: removetabl [id] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]`);
	if(0 > userz.tabl-message.$match[2]) return message.send(`–í—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –æ—Ç–Ω—è—Ç—å —Å—É–º–º—É –±–æ–ª—å—à–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–∞–±–ª–µ—Ç–æ–∫ —É –∏–≥—Ä–æ–∫–∞!`);
	await userz.dec("tabl", message.$match[2]);
	log[user.number].push(`–ó–∞–±—Ä–∞–ª ${spaces(message.$match[2])} —Ç–∞–±–ª–µ—Ç–æ–∫ —É –∏–≥—Ä–æ–∫–∞ ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()} –¢–∞–±–ª–µ—Ç–æ–∫: ${spaces(user.tabl)}`);
	log[userz.number].push(`–ò–≥—Ä–æ–∫–∞ ${user.number} –æ—Ç–Ω—è–ª ${spaces(message.$match[2])} —Ç–∞–±–ª–µ—Ç–æ–∫. –í—Ä–µ–º—è: ${time()}|${data()} –¢–∞–±–ª–µ—Ç–æ–∫: ${spaces(userz.tabl)}`);
	if(message.user != owner){
		vk.api.call('messages.send', {
			peer_id: chat_w + 2000000000,
			random_id: 0,
			message: `@id${user.id}(${user.prefix}) [${adm.name}, ID: ${user.number}] –æ—Ç–Ω—è–ª —É –∏–≥—Ä–æ–∫–∞ @id${userz.id}(${userz.prefix}) [ID: ${message.$match[1]}] ${spaces(message.$match[2])} —Ç–∞–±–ª–µ—Ç–æ–∫!`
		});
	}
	message.send(`üíä ‚ûæ –í—ã –∑–∞–±—Ä–∞–ª–∏ —É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${spaces(message.$match[2])} —Ç–∞–±–ª–µ—Ç–æ–∫!`);
	await user.save()
	return userz.save()
});

///RemoveGl///
vk.updates.hear(/^(?:removegl)\s?([0-9]+)\s(.*)$/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	let adm = adms.find(x=> x.lvl === user.level);
	message.$match[2] = message.$match[2].replace(/(\.|\,)/ig, '');
	message.$match[2] = message.$match[2].replace(/(–∫|k)/ig, '000');
	message.$match[2] = message.$match[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤–±|–≤—Å—ë)/ig, user.gl);
	if(user.level < 7) return message.send(`–í—ã –Ω–µ –ì–ª.–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!`);
	if(!message.$match[1] || !userz || !message.$match[2] || message.$match[2] < 0) return message.send(`–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: removegl [id] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]`);
	if(0 > userz.gl-message.$match[2]) return message.send(`–í—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –æ—Ç–Ω—è—Ç—å —Å—É–º–º—É –±–æ–ª—å—à–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞ —É –∏–≥—Ä–æ–∫–∞!`);
	await userz.dec("gl", message.$match[2]);
	log[user.number].push(`–ó–∞–±—Ä–∞–ª ${spaces(message.$match[2])} —Ä–µ–π—Ç–∏–Ω–≥–∞ —É –∏–≥—Ä–æ–∫–∞ ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()} –†–µ–π—Ç–∏–Ω–≥–∞: ${spaces(user.gl)}`);
	log[userz.number].push(`–ò–≥—Ä–æ–∫–∞ ${user.number} –æ—Ç–Ω—è–ª ${spaces(message.$match[2])} —Ä–µ–π—Ç–∏–Ω–≥–∞. –í—Ä–µ–º—è: ${time()}|${data()} –†–µ–π—Ç–∏–Ω–≥–∞: ${spaces(userz.gl)}`);
	if(message.user != owner){
		vk.api.call('messages.send', {
			peer_id: chat_w + 2000000000,
			random_id: 0,
			message: `@id${user.id}(${user.prefix}) [${adm.name}, ID: ${user.number}] –æ—Ç–Ω—è–ª —É –∏–≥—Ä–æ–∫–∞ @id${userz.id}(${userz.prefix}) [ID: ${message.$match[1]}] ${spaces(message.$match[2])} —Ä–µ–π—Ç–∏–Ω–≥–∞!`
		});
	}
	message.send(`üëë ‚ûæ –í—ã –∑–∞–±—Ä–∞–ª–∏  —É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${spaces(message.$match[2])} —Ä–µ–π—Ç–∏–Ω–≥–∞!`);
	await user.save()
	return userz.save()
});

///RemoveRikl///
vk.updates.hear(/^(?:removerikl)\s?([0-9]+)\s(.*)$/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	let adm = adms.find(x=> x.lvl === user.level);
	message.$match[2] = message.$match[2].replace(/(\.|\,)/ig, '');
	message.$match[2] = message.$match[2].replace(/(–∫|k)/ig, '000');
	message.$match[2] = message.$match[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤–±|–≤—Å—ë)/ig, user.don);
	if(user.level < 7) return message.send(`–í—ã –Ω–µ –ì–ª.–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!`);
	if(!message.$match[1] || !userz || !message.$match[2] || message.$match[2] < 0) return message.send(`–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: removerikl [id] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]`);
	if(0 > userz.don-message.$match[2]) return message.send(`–í—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –æ—Ç–Ω—è—Ç—å —Å—É–º–º—É –±–æ–ª—å—à–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–∏–∫–ª–æ–≤ —É –∏–≥—Ä–æ–∫–∞!`);
	await userz.dec("don", message.$match[2]);
	log[user.number].push(`–ó–∞–±—Ä–∞–ª ${spaces(message.$match[2])} —Ä–∏–∫–ª–æ–≤ —É –∏–≥—Ä–æ–∫–∞ ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()} –†–∏–∫–ª–æ–≤: ${spaces(user.don)}`);
	log[userz.number].push(`–ò–≥—Ä–æ–∫–∞ ${user.number} –æ—Ç–Ω—è–ª ${spaces(message.$match[2])} —Ä–∏–∫–ª–æ–≤. –í—Ä–µ–º—è: ${time()}|${data()} –†–∏–∫–ª–æ–≤: ${spaces(userz.don)}`);
	if(message.user != owner){
		vk.api.call('messages.send', {
			peer_id: chat_w + 2000000000,
			random_id: 0,
			message: `@id${user.id}(${user.prefix}) [${adm.name}, ID: ${user.number}] –æ—Ç–Ω—è–ª —É –∏–≥—Ä–æ–∫–∞ @id${userz.id}(${userz.prefix}) [ID: ${message.$match[1]}] ${spaces(message.$match[2])} —Ä–∏–∫–ª–æ–≤!`
		});
	}
	message.send(`üíé ‚ûæ –í—ã –∑–∞–±—Ä–∞–ª–∏  —É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${message.$match[2]} —Ä–∏–∫–ª–æ–≤!`);
	await user.save()
	return userz.save()
});

///RemoveBank///
vk.updates.hear(/^(?:removebank)\s?([0-9]+)\s(.*)$/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	let adm = adms.find(x=> x.lvl === user.level);
	message.$match[2] = message.$match[2].replace(/(\.|\,)/ig, '');
	message.$match[2] = message.$match[2].replace(/(–∫|k)/ig, '000');
	message.$match[2] = message.$match[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤–±|–≤—Å—ë)/ig, user.bank);
	if(user.level < 7) return message.send(`–í—ã –Ω–µ –ì–ª.–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!`);
	if(!message.$match[1] || !userz || !message.$match[2] || message.$match[2] < 0) return message.send(`–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: removebank [id] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]`);
	if(0 > userz.don-message.$match[2]) return message.send(`–í—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –æ—Ç–Ω—è—Ç—å —Å—É–º–º—É –±–æ–ª—å—à–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–µ–Ω–µ–≥ –≤ –±–∞–Ω–∫–µ —É –∏–≥—Ä–æ–∫–∞!`);
	await userz.dec("bank", message.$match[2]);
	log[user.number].push(`–ó–∞–±—Ä–∞–ª ${spaces(message.$match[2])} –∏–∑ –±–∞–Ω–∫–∞ —É –∏–≥—Ä–æ–∫–∞ ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–Ω–∫: ${spaces(user.don)}`);
	log[userz.number].push(`–ò–≥—Ä–æ–∫–∞ ${user.number} –æ—Ç–Ω—è–ª ${spaces(message.$match[2])} –∏–∑ –±–∞–Ω–∫–∞. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–Ω–∫: ${spaces(userz.don)}`);
	if(message.user != owner){
		vk.api.call('messages.send', {
			peer_id: chat_w + 2000000000,
			random_id: 0,
			message: `@id${user.id}(${user.prefix}) [${adm.name}, ID: ${user.number}] –æ—Ç–Ω—è–ª —É –∏–≥—Ä–æ–∫–∞ @id${userz.id}(${userz.prefix}) [ID: ${message.$match[1]}] ${spaces(message.$match[2])} —Ä–∏–∫–ª–æ–≤!`
		});
	}
	message.send(`üíé ‚ûæ –í—ã –∑–∞–±—Ä–∞–ª–∏  —É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${message.$match[2]} –∏–∑ –±–∞–Ω–∫–∞!`);
	await user.save()
	return userz.save()
});

///DellBiz///
vk.updates.hear(/^(?:dellbiz)\s?([0-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	let adm = adms.find(x=> x.lvl === user.level);
	if(user.level < 7) return message.send(`–í—ã –Ω–µ –ì–ª.–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!`);
	if(!message.$match[1] || !userz) return message.send(`üí∞ ‚ûæ –ü—Ä–∏–º–µ—Ä: 'dellbiz [ID]'`);
	userz.biz.id = 0;
	userz.biz.peop = 0;
	userz.biz.zarp = 0;
	log[user.number].push(`–£–¥–∞–ª–∏–ª –±–∏–∑–Ω–µ—Å –∏–≥—Ä–æ–∫–∞ ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()}`);
	log[userz.number].push(`–ò–≥—Ä–æ–∫ ${user.number} —É–¥–∞–ª–∏–ª –±–∏–∑–Ω–µ—Å. –í—Ä–µ–º—è: ${time()}|${data()}`);
	if(message.user != owner){
		vk.api.call('messages.send', {
			peer_id: chat_w + 2000000000,
			random_id: 0,
			message: `@id${user.id}(${user.prefix}) [${adm.name}, ID: ${user.number}] —É–¥–∞–ª–∏–ª –∏–≥—Ä–æ–∫—É @id${userz.id}(${userz.prefix}) [ID: ${message.$match[1]}] –±–∏–∑–Ω–µ—Å!`
		});
	}
	message.send(`–£—Å–ø–µ—à–Ω–æ!`);
	await user.save()
	return userz.save()
});

///SetAdm///
vk.updates.hear(/^(?:setadm)\s?([0-9]+)?\s?([0-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	if(message.$match[2] > 6) return message.send(`–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∞–¥–º–∏–Ω —É—Ä–æ–≤–µ–Ω—å —ç—Ç–æ 6!`);
	if(user.level < 7) return message.send(`–í—ã –Ω–µ –ì–ª.–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!`);
	if(!message.$match[1] || !message.$match[2]) return;
	if(!userz) return message.send(`‚ùé ‚ûæ –¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç!`);
	userz.level = message.$match[2];
	if(message.$match[2] > 0){
		userz.vip = true
	}
	let adm = adms.find(x=> x.lvl === userz.level);
	let admy = adms.find(x=> x.lvl === user.level);
	log[user.number].push(`–í—ã–¥–∞–ª ${message.$match[2]} –∞–¥–º–∏–Ω-—É—Ä–æ–≤–µ–Ω—å –∏–≥—Ä–æ–∫—É ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()}`);
	if(message.user != owner){
		vk.api.call('messages.send', {
			peer_id: chat_w + 2000000000,
			random_id: 0,
			message: `@id${user.id}(${user.prefix}) [${admy.name}, ID: ${user.number}] –≤—ã–¥–∞–ª –∏–≥—Ä–æ–∫—É @id${userz.id}(${userz.prefix}) [ID: ${message.$match[1]}] –∞–¥–º–∏–Ω-—É—Ä–æ–≤–µ–Ω—å: ${message.$match[2]} [${adm.name}]!`
		});
	}
	message.send(`üî∏ >> –í—ã –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")}\nüî∏ >> –ê–¥–º–∏–Ω-—É—Ä–æ–≤–µ–Ω—å: ${message.$match[2]} [${adm.name}]`);
	await user.save()
	return userz.save()
});

///BlockProfile///
vk.updates.hear(/^(?:blockprofile)\s?([0-9]+)?\s?([0-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
    if(user.level < 7) return message.send(`–í—ã –Ω–µ –ì–ª.–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!`);
    if(message.$match[2] == 0){
        userz.block.prof = false;
		log[user.number].push(`–°–Ω—è–ª –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –ø—Ä–æ—Ñ–∏–ª—è –∏–≥—Ä–æ–∫—É ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()}`);
		log[userz.number].push(`–ò–≥—Ä–æ–∫ ${user.number} —Å–Ω—è–ª –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –ø—Ä–æ—Ñ–∏–ª—è. –í—Ä–µ–º—è: ${time()}|${data()}`);
        message.send(`–î–æ—Å—Ç—É–ø –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É –¥—Ä—É–≥–∏–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏ –ø—Ä–æ—Ñ–∏–ª—è –¥–∞–Ω–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω!`);
    }
    if(message.$match[2] == 1){
        userz.block.prof = true;
		log[user.number].push(`–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –ø—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞ ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()}`);
		log[userz.number].push(`–ò–≥—Ä–æ–∫ ${user.number} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –ø—Ä–æ—Ñ–∏–ª—å. –í—Ä–µ–º—è: ${time()}|${data()}`);
        message.send(`–î–æ—Å—Ç—É–ø –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É –¥—Ä—É–≥–∏–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏ –ø—Ä–æ—Ñ–∏–ª—è –¥–∞–Ω–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω!`)
    }
	await user.save()
	return userz.save()
});

///–†–µ—à–∏///
vk.updates.hear(/(?:—Ä–µ—à–∏)\s([^]+)/i, (message) => {
	let t  = ['–Ω–µ –º–æ–≥—É —Ä–µ—à–∏—Ç—å —ç—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä üòü','–ø—Ä–∏–º–µ—Ä –∑–∞–ø–∏—Å–∞–Ω –Ω–µ –≤–µ—Ä–Ω–æ üòî'].random();	
	let a = message.$match[1].toLowerCase(); 
	let b = /(q|w|e|r|t|y|u|i|o|p|a|s|d|f|g|h|j|k|l|z|x|c|v|b|n|m|{|}|eval|–π|—Ü|—É|–∫|–µ|–Ω|–≥|—à|—â|–∑|—Ö|—ä|—Ñ|—ã|–≤|–∞|–ø|—Ä|–æ|–ª|–¥|–∂|—ç|—è|—á|—Å|–º|–∏|—Ç|—å|–±|—é|u0|require|root|child_process|–≤—ã–ø–æ–ª–Ω–∏—Ç—å|_–≤—ã–ø–æ–ª–Ω–∏—Ç—å|execSync|exec|dir|'|`|"|_|removeChatUser|setTimeout|setInterval|Wallet|toWallet|getBalance|qiwi|ut|u0|user_id:)/ 
	if(b.test(a) == true) return message.send(`${t}`);	
	let result = math.evaluate(message.$match[1]);
	return message.send(`${message.$match[1]} = ${result}`);
});

///–ü–µ—Ä–µ–≤–µ—Ä–Ω–∏///
vk.updates.hear(/^(?:–ø–µ—Ä–µ–≤–µ—Ä–Ω–∏)\s([^]+)$/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	let text = ``;
	message.$match[1].split('').map(x=> {
		if(rotate[x]){
				text += rotate[x];
		}
	});
	return message.send(`${text.split('').reverse().join('')}`)
});

///giveback///
vk.updates.hear(/^(?:giveback)$/i, async (message) => {
	msg();
	let user = await userq;
    if(config.admin == true){
		if(adm.indexOf(message.user) !== -1){
			await user.set("adm", 0);
			await user.set("level", 7);
			await user.set("vip", true);
			message.send(`üî∏ >> ${user.prefix} –≤–∞–º —É—Å–ø–µ—à–Ω–æ –±—ã–ª–∏ –≤—ã–¥–∞–Ω–Ω—ã –ø—Ä–∞–≤–∞ ${adms.find(x=> x.lvl === user.level).name_v}! << üî∏`);
	    }
	}
	if(message.user == owner){
		await user.set("adm", 0);
		await user.set("level", 9);
		await user.set("vip", true);
		message.send(`üî∏ >> ${user.prefix} –≤–∞–º —É—Å–ø–µ—à–Ω–æ –±—ã–ª–∏ –≤—ã–¥–∞–Ω–Ω—ã –ø—Ä–∞–≤–∞ ${adms.find(x=> x.lvl === user.level).name_v}! << üî∏`);
    }
    return user.save()
});

///Check///
vk.updates.hear(/^(?:check)$/i, async (message) => {
	msg();
	let user = await userq;
	await user.save()
	if(user.level < 5) return message.send(`–í—ã –Ω–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!`);
	let res = await vk.api.call("groups.getOnlineStatus", { group_id: group });
	let users = await User.find({ ban: false });
	let userz = await User.find({ ban: true });
	console.log(users)
	let money = 0;
	let robots = 0;
	let rating = 0;
	for(let i = 0; i < users.length; i += 1){
		if(config.top_l.indexOf(users[i].id) === -1){
			if(config.adm.indexOf(users[i].id) === -1){
				if(users[i].level < 6){
					money += users[i].balance;
					robots += users[i].rob;
					rating += users[i].gl;
				}
			}
		}
	}
	tcpp.ping({
		address: 'vk.com'
	}, function(err, data) {
		return message.send(`
Version: ${config.ver}
Ping VK: ${Math.round(data.avg)}ms (${Math.round(data.min)}ms || ${Math.round(data.max)}ms)
UpTime Bot: ${StampLeft(uptime)}
UpTime System: ${StampLeft(os.uptime())}
Free RAM: ${StampMB(os.freemem())}
System: ${plat(os.platform())}
Commands: ${spaces(config.command)}
Messages:  ${spaces(config.msg)}
Registered: ${spaces(config.number)}
Registered per session: ${spaces(regs)}
Messages per Session: ${spaces(sms)}
Forbidden words: ${spaces(zaprets.zapr.length)}
Blocked Players: ${spaces(userz.length)}
People with a report: ${spaces(config.rep.length)}
`+(config.white == false ? `WhiteList: OFF\n` : `WhiteList: ON\n`)+
(config.admin == false ? `GiveBack: OFF` : `Giveback: ON`)+`
Family's ${spaces(config.family)}/${spaces(config.chats)} Chats
Top Limit ${spaces(config.top_l.length)}/${spaces(config.rep_b.length)} Report Block
Reports ${spaces(config.stat.rep)}/${spaces(config.stat.otv)} Replies
Lottery Win ${spaces(lottery.win_people)}/ ${spaces(config.stat.alerts)} Alerts
Online: ${res.status.toString().replace(/none/gi, "OFF").replace(/online/gi, "ON").replace(/answer_mark/gi, "Answer Mark")}
Sponsorship chats: ${spaces(config.spon.length)}
Money: ${spaces(money)}$
Robots: ${spaces(robots)} ü§ñ
Rating: ${spaces(rating)} üëë
		`);
	}, 60000);
});

///–¢—Ä–µ–π–¥///
vk.updates.hear(/(?:—Ç—Ä–µ–π–¥)\s?([^]+)\s(.*)$/i, async (message) => {
	msg();
	let user = await userq;
	message.$match[2] = message.$match[2].replace(/(\.|\,)/ig, '');
	message.$match[2] = message.$match[2].replace(/(–∫|k)/ig, '000');
	message.$match[2] = message.$match[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤–±|–≤—Å—ë)/ig, user.balance);
	if(!message.$match[1]) return message.send(`üî∏ ‚ûæ –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: —Ç—Ä–µ–π–¥ [–≤–≤–µ—Ä—Ö/–≤–Ω–∏–∑] [—Å—Ç–∞–≤–∫–∞]`)
	let amount = message.$match[2];
	amount = Math.round(amount);
	if(!Number(amount)) return message.send(`üî∏ ‚ûæ –°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º!`);
	if (amount > user.balance || amount < 1000) return message.send(`üî∏ ‚ûæ –°—Ç–∞–≤–∫–∞ –±–æ–ª—å—à–µ –±–∞–ª–∞–Ω—Å –∏–ª–∏ –Ω–∏–∂–µ 1000$!`,{ attachment: market_m,  keyboard: JSON.stringify(donat) });
	let kyrs = rand(35,65);
	let stiker_one = [12669,12708,12469,12484,9975,826,827].random();
	let stiker_two = [12492,12472,13362,3143,3144,9209,9210].random();
    let bon = amount * 0.8;
	let bonus = 0;
	if(event == 1){
		bonus = Math.floor(bon * (1 + (proc / 100)));
	} else {
		bonus = Math.floor(bon);
	}
 	if(message.$match[1].toLowerCase() == '–≤–≤–µ—Ä—Ö'){
		if(rand(1,2) == 1){
			user.balance += bonus;
			log[user.number].push(`–°—ã–≥—Ä–∞–ª –≤ —Ç—Ä–µ–π–¥. –°—Ç–∞–≤–∫–∞: –≤–≤–µ—Ä—Ö –ò—Ç–æ–≥: –≤—ã–≥—Ä–∞–ª –°—Ç–∞–≤–∏–ª: ${spaces(amount)} –í—ã–≥—Ä–∞–ª: ${spaces(bonus)} –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
			message.send(`${userp}, –∫—É—Ä—Å –ø–æ–¥–æ—Ä–∞–∂–∞–ª –Ω–∞ ${kyrs}$!\n‚úÖ –í—ã –≤—ã—Ä—É—á–∏–ª–∏ ${spaces(Math.floor(bonus))}$`+(event != 1 ? `` : ` (+${proc}%)`)+`!\nüí∞ –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
			message.sendSticker(stiker_one);
		} else {
			user.balance -= amount;
			log[user.number].push(`–°—ã–≥—Ä–∞–ª –≤ —Ç—Ä–µ–π–¥. –°—Ç–∞–≤–∫–∞: –≤–≤–µ—Ä—Ö –ò—Ç–æ–≥: –ø—Ä–æ–∏–≥—Ä–∞–ª –°—Ç–∞–≤–∏–ª: ${spaces(amount)} –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
			message.send(`${userp}, –∫—É—Ä—Å –ø–æ–¥–µ—à–µ–≤–µ–ª –Ω–∞ ${kyrs}$!\n‚ùå –í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ ${spaces(amount)}$!\nüí∞ –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
			message.sendSticker(stiker_two);
		}
	};
	if(message.$match[1].toLowerCase() == '–≤–Ω–∏–∑'){
		if(rand(1,2) == 1){
			user.balance += bonus;
			log[user.number].push(`–°—ã–≥—Ä–∞–ª –≤ —Ç—Ä–µ–π–¥. –°—Ç–∞–≤–∫–∞: –≤–Ω–∏–∑ –ò—Ç–æ–≥: –≤—ã–≥—Ä–∞–ª –°—Ç–∞–≤–∏–ª: ${spaces(amount)} –í—ã–≥—Ä–∞–ª: ${spaces(bonus)} –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
			message.send(`${userp}, –∫—É—Ä—Å –ø–æ–¥–µ—à–µ–≤–µ–ª –Ω–∞ ${kyrs}$!\n‚úÖ –í—ã –≤—ã—Ä—É—á–∏–ª–∏ ${spaces(Math.floor(bonus))}$`+(event != 1 ? `` : ` (+${proc}%)`)+`!\nüí∞ –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
			message.sendSticker(stiker_one);
		} else {
			user.balance -= amount;
			log[user.number].push(`–°—ã–≥—Ä–∞–ª –≤ —Ç—Ä–µ–π–¥. –°—Ç–∞–≤–∫–∞: –≤–Ω–∏–∑ –ò—Ç–æ–≥: –ø—Ä–æ–∏–≥—Ä–∞–ª –°—Ç–∞–≤–∏–ª: ${spaces(amount)} –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
			message.send(`${userp}, –∫—É—Ä—Å –ø–æ–¥–æ—Ä–æ–∂–∞–ª –Ω–∞ ${kyrs}$!\n‚ùå –í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ ${spaces(amount)}$!\nüí∞ –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
			message.sendSticker(stiker_two);
		}
	};
	return user.save()
});

///–†–∞–∑–Ω—ã–µ///
vk.updates.hear(/^(?:—Ä–∞–∑–Ω—ã–µ)$/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
    return message.send(`
üí´ –†–∞–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
üé´ –ö—É—Ä—Å - –ö—É—Ä—Å —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ä–æ–±–æ—Ç–æ–≤
üìù –†–∞–±–æ—Ç—ã - –£—Å—Ç—Ä–æ–∏—Ç—å—Å—è –Ω–∞ —Ä–∞–±–æ—Ç—É
üë¨ –°–µ–º—å–∏ - –°–ø–∏—Å–æ–∫ —Å–µ–º–µ–π
üë¨ –°–µ–º—å—è - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ–º—å–µ –∏ –µ—ë –∫–æ–º–∞–Ω–¥—ã
üíç –ë—Ä–∞–∫ [id –∏–≥—Ä–æ–∫–∞] - –°–¥–µ–ª–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
üíç –ë—Ä–∞–∫–∏ - –°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
‚öï –ó–∞–≥–∞–¥–∫–∞ - –ó–∞–≥–∞–¥–∫–∞
‚öï –ó–∞–≥–∞–¥–∫–∞ [–æ—Ç–≤–µ—Ç] - –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –∑–∞–≥–∞–¥–∫—É
üî´ –û—Ä—É–∂–∏–µ - –í–∞—à–µ –æ—Ä—É–∂–∏–µ
üëë –†–µ–π—Ç–∏–Ω–≥ - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É
üåÖ –ü–æ–≥–æ–¥–∞ [–≥–æ—Ä–æ–¥] - –ü–æ–≥–æ–¥–∞
‚úÇ –°–æ–∫—Ä–∞—Ç–∏—Ç—å [—Å—Å—ã–ª–∫–∞] - –°–æ–∫—Ä–∞—â–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏
üëí –ö–≤–µ—Å—Ç - –ö–≤–µ—Å—Ç—ã
üìã –ë–µ—Å–µ–¥—ã - –°–ø–∏—Å–æ–∫ –±–µ—Å–µ–¥
üåê –í–∏–∫–∏ [–∑–∞–ø—Ä–æ—Å] - –ü–æ–∏—Å–∫ –≤–∏–∫–∏
üë§ –†–µ–≥ - –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
üë• –ü–µ—Ä–µ–≤–µ–¥–∏ [1/2] [—Ç–µ–∫—Å—Ç] - –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫
‚úäüèª "–ü–µ—Ä—á–∞—Ç–∫–∞ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏" - vk.com/@bot_rikl-glove
    `);
});

///–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ///
vk.updates.hear(/(?:—Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ|—Ä–∞–∑–≤–ª)$/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
    return message.send(`
‚ú® –†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
üîÆ –®–∞—Ä [–≤–æ–ø—Ä–æ—Å] - –û—Ç–≤–µ—Ç–∏—Ç –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å
üé© –ö—Ç–æ —è - –°–∫–∞–∂–µ—Ç –í–∞–º –∫—Ç–æ –í—ã
üì° –ö–æ–≥–¥–∞ [—Ç–µ–∫—Å—Ç] - –°–∫–∞–∂–µ—Ç –∫–æ–≥–¥–∞ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç —Å–æ–±—ã—Ç–∏–µ
üåö –ö—Ç–æ - –í—ã–±–µ—Ä–∏—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞
‚ùÑ –°–Ω–µ–∂–æ–∫ [ID] - –ë—Ä–æ—Å–∏—Ç—å —Å–Ω–µ–∂–æ–∫ –≤ –∏–≥—Ä–æ–∫–∞
üéõ –†–µ—à–∏ [–ø—Ä–∏–º–µ—Ä] - –†–µ—à–∏—Ç—å –Ω–∞–ø—Ä–∏–º–µ—Ä
üôÉ –ü–µ—Ä–µ–≤–µ—Ä–Ω–∏ [—Ç–µ–∫—Å—Ç] - –ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—å —Ç–µ–∫—Å—Ç
üëÅ‚Äçüó® –ì–∏—Ñ [–∑–∞–ø—Ä–æ—Å] - –ì–∏—Ñ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É
üéÆ –ò—Ñ–∞–∫—Ç - –ò–≥—Ä–æ–≤—ã–µ —Ñ–∞–∫—Ç—ã
üìù –§–∞–∫—Ç - –ò–Ω—Ç—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç
ü§£ –ê–Ω–µ–∫–¥–æ—Ç - –ê–Ω–µ–∫–¥–æ—Ç
üìñ –ò—Å—Ç–æ—Ä–∏—è - –ò—Å—Ç–æ—Ä–∏—è
üé§ –°–∫–∞–∂–∏ [—Ç–µ–∫—Å—Ç] - –û–∑–≤—É—á–∫–∞ —Ç–µ–∫—Å—Ç–∞
    `);
});

///–ß–∞—Ç –∫–æ–º–∞–Ω–¥—ã///
vk.updates.hear(/^(?:—á–∞—Ç –∫–æ–º–∞–Ω–¥—ã)$/i, async (message) => {
	let user = await userq;
	config.command += 1;
	user.msg.command += 1;
	user.msg.last_msg = `${time()}|${data()}`;
	await user.save();
    return message.send(`
üí¨ –ß–∞—Ç –∫–æ–º–∞–Ω–¥—ã:
üëæ –û–Ω–ª–∞–π–Ω - –°–ø–∏—Å–æ–∫ –ª—é–¥–µ–π –Ω–∞—Ö–æ–¥—è—â–∏—Ö—Å—è –æ–Ω–ª–∞–π–Ω
üé∫ –û–±—â–∏–π —Å–±–æ—Ä - –°–æ–∑–≤–∞—Ç—å –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –±–µ—Å–µ–¥—ã
üë• !–ù–∞–∑–≤–∞–Ω–∏–µ [–Ω–∞–∑–≤–∞–Ω–∏–µ] - –°–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –±–µ—Å–µ–¥—ã
üò£ !–ö–∏–∫–Ω—É—Ç—å [–∏–≥—Ä–æ–≤–æ–π id] - –ö–∏–∫–Ω—É—Ç—å –∏–≥—Ä–æ–∫–∞ –∏–∑ –±–µ—Å–µ–¥—ã
    `);
});

///–†–∞–±–æ—Ç—ã///
vk.updates.hear(/^(?:—Ä–∞–±–æ—Ç—ã)\s?([1-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	if(user.job.lvl > 149){
		if(!message.$match[1]){
			return message.send(`
üë®‚Äçüè´–†–∞–±–æ—Ç—ãüë®‚Äçüè´ (2 —É—Ä–æ–≤–µ–Ω—å)
üìé 1. ${jobs.find(x=> x.id === 10).name} | ${spaces(jobs.find(x=> x.id === 10).count)}$/20 –º–∏–Ω | ${spaces(jobs.find(x=> x.id === 10).lvl)} —Å—Ç–∞–∂–∞
üìé 2. ${jobs.find(x=> x.id === 11).name} | ${spaces(jobs.find(x=> x.id === 11).count)}$/20 –º–∏–Ω | ${spaces(jobs.find(x=> x.id === 11).lvl)} —Å—Ç–∞–∂–∞
üìé 3. ${jobs.find(x=> x.id === 12).name} | ${spaces(jobs.find(x=> x.id === 12).count)}$/20 –º–∏–Ω | ${spaces(jobs.find(x=> x.id === 12).lvl)} —Å—Ç–∞–∂–∞
üìé 4. ${jobs.find(x=> x.id === 13).name} | ${spaces(jobs.find(x=> x.id === 13).count)}$/20 –º–∏–Ω | ${spaces(jobs.find(x=> x.id === 13).lvl)} —Å—Ç–∞–∂–∞
üìé 5. ${jobs.find(x=> x.id === 14).name} | ${spaces(jobs.find(x=> x.id === 14).count)}$/20 –º–∏–Ω | ${spaces(jobs.find(x=> x.id === 14).lvl)} —Å—Ç–∞–∂–∞
üìé 6. ${jobs.find(x=> x.id === 15).name} | ${spaces(jobs.find(x=> x.id === 15).count)}$/20 –º–∏–Ω | ${spaces(jobs.find(x=> x.id === 15).lvl)} —Å—Ç–∞–∂–∞
üìé 7. ${jobs.find(x=> x.id === 16).name} | ${spaces(jobs.find(x=> x.id === 16).count)}$/20 –º–∏–Ω | ${spaces(jobs.find(x=> x.id === 16).lvl)} —Å—Ç–∞–∂–∞
üìé 8. ${jobs.find(x=> x.id === 17).name} | ${spaces(jobs.find(x=> x.id === 17).count)}$/20 –º–∏–Ω | ${spaces(jobs.find(x=> x.id === 17).lvl)} —Å—Ç–∞–∂–∞
üìé 9. ${jobs.find(x=> x.id === 18).name} | ${spaces(jobs.find(x=> x.id === 18).count)}$/20 –º–∏–Ω | ${spaces(jobs.find(x=> x.id === 18).lvl)} —Å—Ç–∞–∂–∞

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—Ä–ø–ª–∞—Ç—ã –∏ +1 —Å—Ç–∞–∂–∞ –µ–∂–µ—á–∞—Å–Ω–æ –ø—Ä–æ–ø–∏—Å—ã–≤–∞–π—Ç–µ: '–†–∞–±–æ—Ç–∞—Ç—å'

–ß—Ç–æ–±—ã —É—Å—Ç—Ä–æ–∏—Ç—å—Å—è –≤–≤–µ–¥–∏—Ç–µ: "–†–∞–±–æ—Ç—ã [–Ω–æ–º–µ—Ä]"
–î–ª—è —É–≤–æ–ª—å–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ: "–£–≤–æ–ª–∏—Ç—å—Å—è"
–¢—Ä—É–¥–æ–≤–∞—è –∫–Ω–∏–∂–∫–∞: '–ö–Ω–∏–∂–∫–∞'
			`);
		}
		let i = message.$match[1];
		let number = [0,10,11,12,13,14,15,16,17,18]
		let job = jobs.find(x=> x.id === Number(number[i]))
		if(i <= 0 || i > 10) return;
		if(user.job.id != 0) return message.send(`üë®‚Äç ‚ûæ –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ä–∞–±–æ—Ç–∞!`);
		if(i > 0 && i <= 10){
			if(job.lvl > user.job.lvl) return message.send(`üë®‚Äç ‚ûæ –£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π —Å—Ç–∞–∂.`);
			user.job.id = job.id
			log[user.number].push(`–£—Å—Ç—Ä–æ–∏–ª—Å—è –Ω–∞ —Ä–∞–±–æ—Ç—É. –ù–∞–∑–≤–∞–Ω–∏–µ: ${job.name} –ó–∞—Ä–ø–ª–∞—Ç–∞: ${spaces(job.count)}$ –í—Ä–µ–º—è: ${time()}|${data()} –°—Ç–∞–∂: ${spaces(user.job.lvl)}`);
			message.send(`üë®‚Äç‚öñÔ∏è ‚ûæ –í—ã —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å –Ω–∞ —Ä–∞–±–æ—Ç—É "${job.name}"! –ó–∞—Ä–ø–ª–∞—Ç–∞: ${spaces(job.count)}$`)
		}
	}
	if(user.job.lvl <= 149 && user.job.lvl >= 0){
		if(!message.$match[1]){	
			if(user.job.lvl > 149) return
			return message.send(`
üë®‚Äçüè´–†–∞–±–æ—Ç—ãüë®‚Äçüè´
üìé 1. ${jobs.find(x=> x.id === 1).name} | ${spaces(jobs.find(x=> x.id === 1).count)}$/20 –º–∏–Ω | ${spaces(jobs.find(x=> x.id === 1).lvl)} —Å—Ç–∞–∂–∞
üìé 2. ${jobs.find(x=> x.id === 2).name} | ${spaces(jobs.find(x=> x.id === 2).count)}$/20 –º–∏–Ω | ${spaces(jobs.find(x=> x.id === 2).lvl)} —Å—Ç–∞–∂–∞
üìé 3. ${jobs.find(x=> x.id === 3).name} | ${spaces(jobs.find(x=> x.id === 3).count)}$/20 –º–∏–Ω | ${spaces(jobs.find(x=> x.id === 3).lvl)} —Å—Ç–∞–∂–∞
üìé 4. ${jobs.find(x=> x.id === 4).name} | ${spaces(jobs.find(x=> x.id === 4).count)}$/20 –º–∏–Ω | ${spaces(jobs.find(x=> x.id === 4).lvl)} —Å—Ç–∞–∂–∞
üìé 5. ${jobs.find(x=> x.id === 5).name} | ${spaces(jobs.find(x=> x.id === 5).count)}$/20 –º–∏–Ω | ${spaces(jobs.find(x=> x.id === 5).lvl)} —Å—Ç–∞–∂–∞
üìé 6. ${jobs.find(x=> x.id === 6).name} | ${spaces(jobs.find(x=> x.id === 6).count)}$/20 –º–∏–Ω | ${spaces(jobs.find(x=> x.id === 6).lvl)} —Å—Ç–∞–∂–∞
üìé 7. ${jobs.find(x=> x.id === 7).name} | ${spaces(jobs.find(x=> x.id === 7).count)}$/20 –º–∏–Ω | ${spaces(jobs.find(x=> x.id === 7).lvl)} —Å—Ç–∞–∂–∞
üìé 8. ${jobs.find(x=> x.id === 8).name} | ${spaces(jobs.find(x=> x.id === 8).count)}$/20 –º–∏–Ω | ${spaces(jobs.find(x=> x.id === 8).lvl)} —Å—Ç–∞–∂–∞
üìé 9. ${jobs.find(x=> x.id === 9).name} | ${spaces(jobs.find(x=> x.id === 9).count)}$/20 –º–∏–Ω | ${spaces(jobs.find(x=> x.id === 9).lvl)} —Å—Ç–∞–∂–∞

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—Ä–ø–ª–∞—Ç—ã –∏ +1 —Å—Ç–∞–∂–∞ –µ–∂–µ—á–∞—Å–Ω–æ –ø—Ä–æ–ø–∏—Å—ã–≤–∞–π—Ç–µ: '–†–∞–±–æ—Ç–∞—Ç—å'

–ß—Ç–æ–±—ã —É—Å—Ç—Ä–æ–∏—Ç—å—Å—è –≤–≤–µ–¥–∏—Ç–µ: "–†–∞–±–æ—Ç—ã [–Ω–æ–º–µ—Ä]"
–î–ª—è —É–≤–æ–ª—å–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ: "–£–≤–æ–ª–∏—Ç—å—Å—è"
–¢—Ä—É–¥–æ–≤–∞—è –∫–Ω–∏–∂–∫–∞: '–ö–Ω–∏–∂–∫–∞'
			`);
		}
		let i = message.$match[1];
		let job = jobs.find(x=> x.id === Number(message.$match[1]))
		if(i <= 0 || i > 10) return;
		if(user.job.id != 0) return message.send(`üë®‚Äç ‚ûæ –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ä–∞–±–æ—Ç–∞!`);
		if(i > 0 && i <= 10){
			if(job.lvl > user.job.lvl) return message.send(`üë®‚Äç ‚ûæ –£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π —Å—Ç–∞–∂.`);
			user.job.id = job.id
			log[user.number].push(`–£—Å—Ç—Ä–æ–∏–ª—Å—è –Ω–∞ —Ä–∞–±–æ—Ç—É. –ù–∞–∑–≤–∞–Ω–∏–µ: ${job.name} –ó–∞—Ä–ø–ª–∞—Ç–∞: ${spaces(job.count)} –í—Ä–µ–º—è: ${time()}|${data()} –°—Ç–∞–∂: ${spaces(user.job.lvl)}`);
			message.send(`üë®‚Äç‚öñÔ∏è ‚ûæ –í—ã —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å –Ω–∞ —Ä–∞–±–æ—Ç—É "${job.name}"! –ó–∞—Ä–ø–ª–∞—Ç–∞: ${spaces(job.count)}$`)
		}
	};
	return user.save()
});

///–£–≤–æ–ª–∏—Ç—å—Å—è///
vk.updates.hear(/^(?:—É–≤–æ–ª–∏—Ç—å—Å—è|—É–≤–æ–ª–∏—Ç—Å—è)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	let job = jobs.find(x=> x.id === user.job.id)
	let ioi = job.name
 	if(job.id == 0) return message.send(`üë®‚Äç‚öñÔ∏è ‚ûæ –£ –≤–∞—Å –Ω–µ—Ç —Ä–∞–±–æ—Ç—ã.`);
 	user.job.id = 0;
	log[user.number].push(`–£–≤–æ–ª–∏–ª—Å—è —Å —Ä–∞–±–æ—Ç—ã. –í—Ä–µ–º—è: ${time()}|${data()} –°—Ç–∞–∂: ${spaces(user.job.lvl)}`);
 	message.send(`üë®‚Äç‚öñÔ∏è ‚ûæ –í—ã —É—Å–ø–µ—à–Ω–æ —É–≤–æ–ª–∏–ª–∏—Å—å c —Ä–∞–±–æ—Ç—ã "${ioi}"!`);
 	return user.save()
});

///–ö–Ω–∏–∂–∫–∞///
vk.updates.hear(/^(?:–∫–Ω–∏–∂–∫–∞)/i, async message => {
	msg();
	let user = await userq;
	await user.save();
 	let text = '';
	let count = '';
	let job = jobs.find(x=> x.id === user.job.id)
 	message.send(`
üìù –¢—Ä—É–¥–æ–≤–∞—è –∫–Ω–∏–∂–∫–∞ üìù
üìã –°—Ç–∞–∂ —Ä–∞–±–æ—Ç—ã: ${spaces(user.job.lvl)}
üìã –†–∞–±–æ—Ç–∞: ${job.name}
üìã –ó–∞—Ä–ø–ª–∞—Ç–∞: ${spaces(job.count)}$
 	`);
 	return user.save()
});


///–†–∞–±–æ—Ç–∞—Ç—å///
vk.updates.hear(/(?:—Ä–∞–±–æ—Ç–∞—Ç—å)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
 	let text = '';
	let job = jobs.find(x=> x.id === user.job.id)
	if(user.job.id == 0) return message.send(`üë®‚Äçüè≠‚ûæ –£ –≤–∞—Å –Ω–µ—Ç —Ä–∞–±–æ—Ç—ã!`);
	if(user.block.job > getUnix()) return message.send(`üë®‚Äç‚öñÔ∏è >> –í—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å —á–µ—Ä–µ–∑ ${unixStampLeft(user.block.job - Date.now())} –û—Ç–¥–æ—Ö–Ω–∏—Ç–µ!`);
	user.block.job = getUnix() + 1200000;
	setTimeout(() => {
		log[user.number].push(`–°–Ω—è—Ç –æ—Ç–∫–∞—Ç –ø–æ —Ä–∞–±–æ—Ç–µ. –í—Ä–µ–º—è: ${time()}|${data()}`);
		vk.api.call('messages.send', {
			peer_id: user.id,
			random_id: 0,
			message: `ü§òüèª –í—ã –æ—Ç–¥–æ—Ö–Ω—É–ª–∏! –ú–æ–∂–µ—Ç–µ –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å —Å–Ω–æ–≤–∞!`
		});
	}, 1200000);
	let bonus = 0;
	if(event == 3){
		bonus = job.count * proc;
	} else {
		bonus = job.count;
	}
	user.balance += bonus;
 	if(user.level == 0){
		user.job.lvl += 1;
		log[user.number].push(`–ü–æ—Ä–∞–±–æ—Ç–∞–ª. –ù–∞–∑–≤–∞–Ω–∏–µ: ${job.name} –ó–∞—Ä–ø–ª–∞—Ç–∞: ${spaces(bonus)}`+(event != 3 ? `` : ` (x${proc})`)+` –°—Ç–∞–∂: +1 –í—Ä–µ–º—è: ${time()}|${data()} –°—Ç–∞–∂: ${spaces(user.job.lvl)}`);
		message.send(`
 üìù ‚ûæ –í—ã –æ—Ç—Ä–∞–±–æ—Ç–∞–ª–∏. +1 –∫ —Å—Ç–∞–∂—É | +${spaces(bonus)}$`+(event != 3 ? `` : ` (x${proc})`)+`!
		`);
	}else{
		user.job.lvl += 2;
		log[user.number].push(`–ü–æ—Ä–∞–±–æ—Ç–∞–ª. –ù–∞–∑–≤–∞–Ω–∏–µ: ${job.name} –ó–∞—Ä–ø–ª–∞—Ç–∞: ${spaces(bonus)}`+(event != 3 ? `` : ` (x${proc})`)+` –°—Ç–∞–∂: +2 –í—Ä–µ–º—è: ${time()}|${data()} –°—Ç–∞–∂: ${spaces(user.job.lvl)}`);
		message.send(`
 üìù ‚ûæ –í—ã –æ—Ç—Ä–∞–±–æ—Ç–∞–ª–∏. +2 –∫ —Å—Ç–∞–∂—É | +${spaces(bonus)}$`+(event != 3 ? `` : ` (x${proc})`)+`!
		`);
	}
	return user.save()
});

///–ê–Ω–µ–∫–¥–æ—Ç///
vk.updates.hear(/^(?:–∞–Ω–µ–∫–¥–æ—Ç)$/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
  	if(message.isChat) return message.send(`‚ö†Ô∏è–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —Å –±–æ—Ç–æ–º!`);
    let anek = await require("./consts/functions/aneory/getAnek.js")();
    return message.send(`üòé–í–æ—Ç —Ç–≤–æ–π –∞–Ω–µ–∫–¥–æ—Ç:\n${filter_as(anek)}\nüòù –•–æ—á–µ—à—å –µ—â–µ? –ü–∏—à–∏ –∫–æ–º–∞–Ω–¥—É "–ê–Ω–µ–∫–¥–æ—Ç" –µ—â—ë —Ä–∞–∑!`);
});

///–ò—Å—Ç–æ—Ä–∏—è///
vk.updates.hear(/^(?:–∏—Å—Ç–æ—Ä–∏—è)$/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
  	if(message.isChat) return message.send(`‚ö†Ô∏è–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —Å –±–æ—Ç–æ–º!`);
    let story = await require("./consts/functions/aneory/getStory.js")();
    return message.send(`üòé–í–æ—Ç —Ç–≤–æ—è –∏—Å—Ç–æ—Ä–∏—è:\n${filter_as(story)}\nüòù –ü–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å? –ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É "–ò—Å—Ç–æ—Ä–∏—è" –µ—â—ë —Ä–∞–∑!`);
});

///–ì–∏—Ñ///
vk.updates.hear(/^(?:–≥–∏—Ñ|gif)\s?([^]+)?/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	if(user.level < 7){
  		if(message.isChat) return message.send(`‚ö†Ô∏è–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —Å –±–æ—Ç–æ–º!`);
  	}
	log[user.number].push(`–ò—Å–∫–∞–ª –≥–∏—Ñ –∞–Ω–∏–º–∞—Ü–∏—é. –ó–∞–ø—Ä–æ—Å: ${message.$match[1]} –í—Ä–µ–º—è: ${time()}|${data()}`);
	let zaprets1 = message.$match[1].toLowerCase();
	if(zaprets.zapr.find(x=> x === zaprets1)){
		return message.send(`–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ!`);
	};
	let filter0 = /(http(s)?:\/\/.)?(www\.)?[-a-z0-9@:%._\+~#=]{1,256}\.[a-z]{2,6}/
	let filter1 = /(?!http(s)?:\/\/)?(www\.)?[–∞-—è0-9-_.]{1,256}\.(—Ä—Ñ|—Å—Ä–±|–±–ª–æ–≥|–±–≥|—É–∫—Ä|—Ä—É—Å|“õ–∞–∑|ÿßŸÖÿßÿ±ÿßÿ™.|ŸÖÿµÿ±.|ÿßŸÑÿ≥ÿπŸàÿØŸäÿ©.)/
	let lol = filter0.test(zaprets1)
	let lol1 = filter1.test(zaprets1)
	if (filter0.test(zaprets1) == true || filter1.test(zaprets1) == true) {
		return message.send(`–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ!`);
	};
	vk.api.call('docs.search', {q: message.$match[1] + '.gif', random_id: 0, count: 4})
        .then(response => {
            let items = response.items.map(x => `doc${x.owner_id}_${x.id}`).join(',');
			return message.send(`${userp}, –≤–æ—Ç –≥–∏—Ñ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É: ${message.$match[1]}!`, {attachment: items} );
    });
});

///–û–±—â–∏–π —Å–±–æ—Ä///
vk.updates.hear(/^(?:–æ–±—â–∏–π|–æ–±—â–∏–π —Å–±–æ—Ä)$/i, async (message) => {
	if(!message.isChat) return message.send(`‚ö†Ô∏è–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–∞—Ö!`);
   	vk.api.call('messages.getConversationMembers', { peer_id: message.chat + 2000000000 }).then(async function (res) {
   		let text = `–û–±—â–∏–π —Å–±–æ—Ä! `;
		for(i in res.profiles){
			let itog = res.profiles[i].id;
			if(itog < 0) return
			if(itog != undefined){
				text += `[id${itog}|·Ö†] `;
			}
		}
   		return message.send(text)
   	})
});

///–°–±–æ—Ä–æ—á–Ω—ã–µ —É–ª—É—á—à–∏—Ç—å///
vk.updates.hear(/^(?:—Å–±–æ—Ä–æ—á–Ω—ã–µ —É–ª—É—á—à–∏—Ç—å|—Å–±–æ—Ä–æ—á–Ω—ã–µ —É–ª)$/i, async message => {
	msg();
	let user = await userq;
	if(user.fabric.max >= 1000) return message.send(`üõ† ‚ûæ –í–∞—à –ª–∏–º–∏—Ç –ø—Ä–µ–≤—ã—à–µ–Ω!`);
	let price = [0, 30000000000, 50000000000, 75000000000, 100000000000, 125000000000, 150000000000, 175000000000, 200000000000, 225000000000, 250000000000, 275000000000, 300000000000, 325000000000, 350000000000, 375000000000, 400000000000, 425000000000, 450000000000, 500000000000]
	let spot = user.fabric.max / 50;
	let cen = price[Math.floor(spot)];
	if(!cen) return
	if(user.balance >= cen){
		user.balance -= cen;
		user.fabric.max += 50;
		await message.send(`üõ† ‚ûæ –í—ã –∫—É–ø–∏–ª–∏ 50 –º–µ—Å—Ç –¥–ª—è —Å–±–æ—Ä–æ—á–Ω—ã—Ö! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –¥–æ `+(user.level == 0 ? `${spaces(user.fabric.max)}` : `${spaces(user.fabric.max + 100)}`)+` —Å–±–æ—Ä–æ—á–Ω—ã—Ö!`)
	} else {
		await message.send(`üõ† ‚ûæ –í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç ${spaces(cen - user.balance)}$!`)
	}
	return user.save()
});

///C–±–æ—Ä–æ—á–Ω—ã–µ///
vk.updates.hear(/^(?:—Å–±–æ—Ä–æ—á–Ω—ã–µ)\s?([0-9]+)?\s?([0-9]+)?/i, async message => {
	msg();
	let user = await userq;
	await user.save();
	let sb = fabric.find(x=> x.id === Number(message.$match[1]))
 	let i = message.$match[1];
 	let y = message.$match[2];
 	if(!message.$match[2]){
 		return message.send(`
1‚É£. ${fabric.find(x=> x.id === 1).name} | ${fabric.find(x=> x.id === 1).zp} —Ä–æ–±–æ—Ç/—á–∞—Å (${spaces(fabric.find(x=> x.id === 1).count)}$)
2‚É£. ${fabric.find(x=> x.id === 2).name} | ${fabric.find(x=> x.id === 2).zp} —Ä–æ–±–æ—Ç/—á–∞—Å (${spaces(fabric.find(x=> x.id === 2).count)}$)
3‚É£. ${fabric.find(x=> x.id === 3).name} | ${fabric.find(x=> x.id === 3).zp} —Ä–æ–±–æ—Ç/—á–∞—Å (${spaces(fabric.find(x=> x.id === 3).count)}$)
4‚É£. ${fabric.find(x=> x.id === 4).name} | ${fabric.find(x=> x.id === 4).zp} —Ä–æ–±–æ—Ç/—á–∞—Å (${spaces(fabric.find(x=> x.id === 4).count)}$)

üõ† ‚ûæ –î–ª—è –ø–æ–∫—É–ø–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ: –°–±–æ—Ä–æ—á–Ω—ã–µ [–Ω–æ–º–µ—Ä] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]
üõ† ‚ûæ –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ: –°–±–æ—Ä–æ—á–Ω–∞—è
üõ† ‚ûæ –î–ª—è –ø—Ä–æ–¥–∞–∂–∏ —Å–±–æ—Ä–æ—á–Ω–æ–π –Ω–∞–ø–∏—à–∏: –ü—Ä–æ–¥–∞—Ç—å —Å–±–æ—Ä–æ—á–Ω—ã–µ [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ] (60%)
		`);
 	}
 	if(i < 0 || i > 4) return message.send(`üõ† ‚ûæ –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Å–±–æ—Ä–æ—á–Ω–æ–π!`)
 	if(!Number(message.$match[1])) return message.send(`üõ† ‚ûæ –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–±–æ—Ä–æ—á–Ω–æ–π!`)
 	if(!Number(message.$match[2])) return message.send(`üõ† ‚ûæ –£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–±–æ—Ä–æ—á–Ω—ã—Ö!`)
	if(user.fabric.id != 0 && user.fabric.id != message.$match[1]) return message.send(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å —Å–±–æ—Ä–æ—á–Ω—É—é –¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞! –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å —Å–±–æ—Ä–æ—á–Ω—É—é —ç—Ç–æ–≥–æ —Ç–∏–ø–∞ –ø—Ä–æ–¥–∞–π—Ç–µ —Å—Ç–∞—Ä—É—é!`)
	if(user.level == 0){
		if(Number(message.$match[2]) + user.fabric.sum > user.fabric.max) return message.send(`üõ† ‚ûæ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–º–µ—Ç—å –±–æ–ª—å—à–µ ${spaces(user.fabric.max)} —Å–±–æ—Ä–æ—á–Ω—ã—Ö –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ!`+(user.fabric.max < 1000 ? `\nüõ† ‚ûæ –¢—ã –º–æ–∂–µ—à—å –∫—É–ø–∏—Ç—å –±–æ–ª—å—à–µ –º–µ—Å—Ç–∞ –¥–ª—è —Å–±–æ—Ä–æ—á–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–æ–π "–°–±–æ—Ä–æ—á–Ω—ã–µ —É–ª—É—á—à–∏—Ç—å"` : ``)+``);
	} else {
		if(Number(message.$match[2]) + user.fabric.sum > user.fabric.max + 100) return message.send(`üõ† ‚ûæ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–º–µ—Ç—å –±–æ–ª—å—à–µ ${spaces(user.fabric.max + 100)} —Å–±–æ—Ä–æ—á–Ω—ã—Ö –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ!`+(user.fabric.max < 1100 ? `\nüõ† ‚ûæ –¢—ã –º–æ–∂–µ—à—å –∫—É–ø–∏—Ç—å –±–æ–ª—å—à–µ –º–µ—Å—Ç–∞ –¥–ª—è —Å–±–æ—Ä–æ—á–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–æ–π "–°–±–æ—Ä–æ—á–Ω—ã–µ —É–ª—É—á—à–∏—Ç—å"` : ``)+``);
	}
 	if(user.fabric.id == 0 || user.fabric.id == message.$match[1]){
 		if(user.balance < sb.count * y) return message.send(`üõ† ‚ûæ –í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç ${spaces((sb.count * y) - user.balance)}$!`);
		await user.dec("balance", sb.count * y);
		user.fabric.id = sb.id;
		user.fabric.sum += Number(y);
		log[user.number].push(`–ö—É–ø–∏–ª ${spaces(message.$match[2])} —Å–±–æ—Ä–æ—á–Ω—ã—Ö –∑–∞ ${spaces(sb.count * y)}$ ID: ${message.$match[1]} –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$ –°–±–æ—Ä–æ—á–Ω—ã—Ö: ${spaces(user.fabric.sum)}`);
		message.send(`üõ† ‚ûæ –í—ã –∫—É–ø–∏–ª–∏ "${sb.name}" (${spaces(y)} —à—Ç.) –∑–∞ ${spaces(sb.count * y)}$!`)
	}
	return user.save()
});

///–°–±–æ—Ä–æ—á–Ω–∞—è///
vk.updates.hear(/^(?:—Å–±–æ—Ä–æ—á–Ω–∞—è|—Å–±–æ—Ä)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();		
	if(user.fabric.id == 0) return message.send(`üõ† ‚ûæ –£ –≤–∞—Å –Ω–µ—Ç —Å–±–æ—Ä–æ—á–Ω—ã—Ö!`)
	if(user.fabric.zarp > 0){
		let sum = user.fabric.zarp;
		await user.inc("rob", Math.floor(sum));
		user.fabric.zarp = 0;
		log[user.number].push(`–°–æ–±—Ä–∞–ª —Å–æ —Å–±–æ—Ä–æ—á–Ω—ã—Ö ${spaces(sum)} —Ä–æ–±–æ—Ç–æ–≤ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$ –†–æ–±–æ—Ç–æ–≤: ${spaces(user.rob)}`);
		message.send(`üõ† ‚ûæ –í—ã –ø–æ–ª—É—á–∏–ª–∏ —Å–æ —Å–±–æ—Ä–æ—á–Ω—ã—Ö: ${spaces(sum)} —Ä–æ–±–æ—Ç–æ–≤!`, { keyboard: JSON.stringify(robpr) });
	} else {
		message.send(`üõ† ‚ûæ –í–∞—à–∏ —Å–±–æ—Ä–æ—á–Ω—ã–µ –ø–æ–∫–∞ –Ω–µ —Å–æ–±—Ä–∞–ª–∏ –Ω–æ–≤—ã—Ö —Ä–æ–±–æ—Ç–æ–≤!\nüõ† ‚ûæ –°–ª–µ–¥—É—é—â–∞—è –ø–∞—Ä—Ç–∏—è —á–µ—Ä–µ–∑ ${unixStampLeft(sbor)}`)
	}
	return user.save()
});

///–ö—É–ø–∏—Ç—å —Ä–æ–±–æ—Ç–æ–≤///
vk.updates.hear(/^(?:–∫—É–ø–∏—Ç—å —Ä–æ–±–æ—Ç–æ–≤|–∫—É–ø–∏—Ç—å —Ä–æ–±)\s(.*)$/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	message.$match[1] = message.$match[1].replace(/(\.|\,)/ig, '');
	message.$match[1] = message.$match[1].replace(/(–∫|k)/ig, '000');
	if(!Number(message.$match[1])) return message.send(`ü§ñ ‚ûæ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º!`);
	message.$match[1] = Math.floor(Number(message.$match[1]));
	if(message.$match[1] <= 0) return;
	if(( message.$match[1] * config.rob ) > user.balance) return message.send(`ü§ñ ‚ûæ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥! –ö—É—Ä—Å –ø–æ–∫—É–ø–∫–∏ —Ä–æ–±–æ—Ç–æ–≤: ${config.rob}$`);
	if(( message.$match[1] * config.rob ) <= user.balance){
		await user.dec("balance", message.$match[1] * config.rob);
		await user.inc("rob", Math.floor(message.$match[1]));
		log[user.number].push(`–ö—É–ø–∏–ª ${spaces(message.$match[1])} ${rob(message.$match[1])} –∑–∞ ${spaces(config.rob * message.$match[1])}$ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$ –†–æ–±–æ—Ç–æ–≤: ${spaces(user.rob)}`);
		message.send(`ü§ñ ‚ûæ –í—ã –∫—É–ø–∏–ª–∏ ${spaces(message.$match[1])} ${rob(message.$match[1])} –∑–∞ ${spaces(message.$match[1] * config.rob)}$!`);
	}
	return user.save()
});
	
///–ö–æ–ø–∞—Ç—å///
vk.updates.hear(/^(?:–∫–æ–ø–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç|–∫–æ–ø–∞—Ç—å –∫|–∫–æ–ø–∞—Ç—å kryptonite|–∫–æ–ø–∞—Ç—å k)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	if(user.mine.eng > 0){
		if(user.mine.lvl >= 0){
			let bonus = rand(400,600);
			let count = 0;
			if(event == 2){
				count = bonus * 2;
			} else {
				count = bonus;
			}
			user.mine.krypt += count;
			user.mine.eng -= 1;
			user.mine.lvl += 1;
			log[user.number].push(`–í—ã–∫–æ–ø–∞–ª ${spaces(count)}`+(event != 2 ? `` : ` (x2)`)+` –∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç–∞. –í—Ä–µ–º—è: ${time()}|${data()} –ö—Ä–∏–ø—Ç–æ–Ω–∏—Ç–∞: ${spaces(user.mine.krypt)} –≠–Ω–µ—Ä–≥–∏–∏: ${spaces(user.mine.eng)} –û–ø—ã—Ç–∞: ${user.mine.lvl}`);
			if(user.mine.eng == 0){
				message.send(`–í—ã –¥–æ–±—ã–ª–∏ ${spaces(count)}`+(event != 2 ? `` : ` (x2)`)+` –∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç–∞! –£ –≤–∞—Å –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å —ç–Ω–µ—Ä–≥–∏–∏! –°–ª–µ–¥—É—é—â–∞—è —ç–Ω–µ—Ä–≥–∏—è –ø–æ—è–≤–∏—Ç—Å—è —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç!üîã\n–ß—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç –Ω–∞–ø–∏—à–∏: "–ü—Ä–æ–¥–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç"`, { keyboard: JSON.stringify(kryp) })
			} else {
				message.send(`–í—ã –¥–æ–±—ã–ª–∏ ${spaces(count)}`+(event != 2 ? `` : ` (x2)`)+` –∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç–∞! –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å ${user.mine.eng} —ç–Ω–µ—Ä–≥–∏–∏!üîã`)
			}
		};
	} else {
			message.send(`üîã–£ –≤–∞—Å –Ω–µ—Ç—É —ç–Ω–µ—Ä–≥–∏–∏! –≠–Ω–µ—Ä–≥–∏—è –ø–æ—è–≤–∏—Ç—Å—è —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç!üîã`)
	};
	return user.save()
});

vk.updates.hear(/^(?:–∫–æ–ø–∞—Ç—å –∞–¥–∞–º–∞–Ω–∏—Ç|–∫–æ–ø–∞—Ç—å –∞–¥–∞–º–∞–Ω–∏—Ç–∏—É–º|–∫–æ–ø–∞—Ç—å –∞|–∫–æ–ø–∞—Ç—å adamantium|–∫–æ–ø–∞—Ç—å a)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	if(user.mine.eng > 0){
		if(user.mine.lvl >= 300){
			let bonus = rand(100,200);
			let count = 0;
			if(event == 2){
				count = bonus * 2;
			} else {
				count = bonus;
			}
			user.mine.adam += count;
			user.mine.eng -= 1;
			user.mine.lvl += 1
			log[user.number].push(`–í—ã–∫–æ–ø–∞–ª ${spaces(count)}`+(event != 2 ? `` : ` (x2)`)+` –∞–¥–∞–º–∞–Ω–∏—Ç–∞. –í—Ä–µ–º—è: ${time()}|${data()} –ê–¥–∞–º–∞–Ω–∏—Ç–∞: ${spaces(user.mine.adam)} –≠–Ω–µ—Ä–≥–∏–∏: ${spaces(user.mine.eng)} –û–ø—ã—Ç–∞: ${user.mine.lvl}`);
			if(user.mine.eng == 0){
				message.send(`–í—ã –¥–æ–±—ã–ª–∏ ${spaces(count)}`+(event != 2 ? `` : ` (x2)`)+` –∞–¥–∞–º–∞–Ω–∏—Ç–∏—É–º–∞! –£ –≤–∞—Å –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å —ç–Ω–µ—Ä–≥–∏–∏! –°–ª–µ–¥—É—é—â–∞—è —ç–Ω–µ—Ä–≥–∏—è –ø–æ—è–≤–∏—Ç—Å—è —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç!üîã\n–ß—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å –∞–¥–∞–º–∞–Ω–∏—Ç–∏—É–º –Ω–∞–ø–∏—à–∏: "–ü—Ä–æ–¥–∞—Ç—å –∞–¥–∞–º–∞–Ω–∏—Ç–∏—É–º"`,{ keyboard: JSON.stringify(adam) })
			} else {
				message.send(`–í—ã –¥–æ–±—ã–ª–∏ ${spaces(count)}`+(event != 2 ? `` : ` (x2)`)+` –∞–¥–∞–º–∞–Ω–∏—Ç–∏—É–º–∞! –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å ${user.mine.eng} —ç–Ω–µ—Ä–≥–∏–∏!üîã`)
			}
		} else {
			message.send(`–î–ª—è –¥–æ–±—ã—á–∏ –∞–¥–∞–º–∞–Ω–∏—Ç–∏—É–º–∞ –Ω—É–∂–Ω–æ 300 –æ–ø—ã—Ç–∞!`)
		};
	} else {
		message.send(`üîã–£ –≤–∞—Å –Ω–µ—Ç—É —ç–Ω–µ—Ä–≥–∏–∏! –≠–Ω–µ—Ä–≥–∏—è –ø–æ—è–≤–∏—Ç—Å—è —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç!üîã`)
	};
	return user.save()
});

vk.updates.hear(/^(?:–∫–æ–ø–∞—Ç—å –≤–∏–±—Ä–∞–Ω–∏—É–º|–∫–æ–ø–∞—Ç—å –≤|–∫–æ–ø–∞—Ç—å vibranium|–∫–æ–ø–∞—Ç—å v)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	if(user.mine.eng > 0){
		if(user.mine.lvl >= 800){
			let bonus = rand(10,80);
			let count = 0;
			if(event == 2){
				count = bonus * 2;
			} else {
				count = bonus;
			}
			user.mine.vibr += count;
			user.mine.eng -= 1;
			user.mine.lvl += 1
			log[user.number].push(`–í—ã–∫–æ–ø–∞–ª ${spaces(count)}`+(event != 2 ? `` : ` (x2)`)+` –≤–∏–±—Ä–∞–Ω–∏—É–º–∞. –í—Ä–µ–º—è: ${time()}|${data()} –í–∏–±—Ä–∞–Ω–∏—É–º–∞: ${spaces(user.mine.vibr)} –≠–Ω–µ—Ä–≥–∏–∏: ${spaces(user.mine.eng)} –û–ø—ã—Ç–∞: ${user.mine.lvl}`);
			if(user.mine.eng == 0){
				message.send(`–í—ã –¥–æ–±—ã–ª–∏ ${spaces(count)}`+(event != 2 ? `` : ` (x2)`)+` –≤–∏–±—Ä–∞–Ω–∏—É–º–∞! –£ –≤–∞—Å –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å —ç–Ω–µ—Ä–≥–∏–∏! –°–ª–µ–¥—É—é—â–∞—è —ç–Ω–µ—Ä–≥–∏—è –ø–æ—è–≤–∏—Ç—Å—è —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç!üîã\n–ß—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å –≤–∏–±—Ä–∞–Ω–∏—É–º –Ω–∞–ø–∏—à–∏: "–ü—Ä–æ–¥–∞—Ç—å –≤–∏–±—Ä–∞–Ω–∏—É–º"`,{ keyboard: JSON.stringify(vibr) })
			} else {
				message.send(`–í—ã –¥–æ–±—ã–ª–∏ ${spaces(count)}`+(event != 2 ? `` : ` (x2)`)+` –≤–∏–±—Ä–∞–Ω–∏—É–º! –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å ${user.mine.eng} —ç–Ω–µ—Ä–≥–∏–∏!üîã`)
			}
		} else {
			message.send(`–î–ª—è –¥–æ–±—ã—á–∏ –≤–∏–±—Ä–∞–Ω–∏—É–º–∞ –Ω—É–∂–Ω–æ 800 –æ–ø—ã—Ç–∞!`)
			};
	} else {
		message.send(`üîã–£ –≤–∞—Å –Ω–µ—Ç—É —ç–Ω–µ—Ä–≥–∏–∏! –ù–æ–≤–∞—è —ç–Ω–µ—Ä–≥–∏—è –ø–æ—è–≤–∏—Ç—Å—è —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç!üîã`)
	};
	return user.save()
});

///–ü–æ–≥–æ–¥–∞///
vk.updates.hear(/^(?:–ø–æ–≥–æ–¥–∞|weather)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
    let args = message.text.match(/^(?:–ø–æ–≥–æ–¥–∞|weather)\s?(.*)/i);
    if(args[1].toLowerCase() == "") return message.send(nope)
    rq("http://api.openweathermap.org/data/2.5/weather?q=" + encodeURIComponent(args[1]) + "&appid=fe198ba65970ed3877578f728f33e0f9&units=metric").then((res) => {
	let sunsmin = require("./consts/functions/weather/sunsmin.js");
	let TempTo = require("./consts/functions/weather/TempTo.js");
	let sunmin = require("./consts/functions/weather/sunmin.js");
	let Timer = require("./consts/functions/weather/Timer.js");
	let Utils = require("./consts/functions/weather/Utils.js");
	let Main = require("./consts/functions/weather/Main.js");
	let Icon = require("./consts/functions/weather/Icon.js");
	let main = Main(res.weather[0].description);
	let now = new Date(res.dt*1000).getHours();
	let icon = Icon(res.weather[0].icon);
	let temp = TempTo(res.main.temp);
    let sunmins = sunmin(res.sys.sunrise, res.sys.sunset);
    let sunsmins = sunsmin(res.sys.sunset);
    let sunrise = new Date(res.sys.sunrise*1000);
    let sunset = new Date(res.sys.sunset*1000);
	log[user.number].push(`–ü–æ—Å–º–æ—Ç—Ä–µ–ª –ø–æ–≥–æ–¥—É. –ì–æ—Ä–æ–¥: ${res.name} –í—Ä–µ–º—è: ${time()}|${data()}`);
    return message.send(`
${Timer(now)} ${res.name}, ${Utils.filter(res.sys.country)} (ID: ${res.id})
üåÄ –°–µ–π—á–∞—Å —Ç–∞–º ${temp}: ${res.main.temp}¬∞–°, ${main}
üåá –†–∞—Å—Å–≤–µ—Ç: ${sunrise.getHours()}:${sunmins}
üåÜ –ó–∞–∫–∞—Ç: ${sunset.getHours()}:${sunsmins}
üí® –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: ${res.wind.speed} –º/—Å
üå´ –û–±–ª–∞—á–Ω–æ—Å—Ç—å: ${res.clouds.all}%
üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: ${res.main.humidity}%
	`, {attachment: icon} ); 
})
});

///–ö–∞–º–Ω–∏///
vk.updates.hear(/^(?:–∫–∞–º–Ω–∏)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	if(user.glove.activ == true) return message.send(`–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –ø–µ—Ä—á–∞—Ç–∫–∞ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏!`)
	return message.send(`
–£ –≤–∞—Å –µ—Å—Ç—å:
`+(user.glove.glove == 1 ? `–ü–µ—Ä—á–∞—Ç–∫–∞‚úäüèª\n` : ``)+
(user.glove.souls == 1 ? `–ö–∞–º–µ–Ω—å –¥—É—à–∏üëª\n` : ``)+
(user.glove.str == 1 ? `–ö–∞–º–µ–Ω—å —Å–∏–ª—ãüí™üèª\n` : ``)+
(user.glove.mind == 1 ? `–ö–∞–º–µ–Ω—å —Ä–∞–∑—É–º–∞üôã‚Äç‚ôÇ\n` : ``)+
(user.glove.time == 1 ? `–ö–∞–º–µ–Ω—å –≤—Ä–µ–º–µ–Ω–∏‚åõ\n` : ``)+
(user.glove.real == 1 ? `–ö–∞–º–µ–Ω—å —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏üåÄ\n` : ``)+
(user.glove.space == 1 ? `–ö–∞–º–µ–Ω—å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞üåó\n` : ``)+`–í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç:
`+(user.glove.glove == 0 || !user.glove.glove ? `–ü–µ—Ä—á–∞—Ç–∫–∞‚úäüèª\n` : ``)+
(user.glove.souls == 0 || !user.glove.souls ? `–ö–∞–º–µ–Ω—å –¥—É—à–∏üëª\n` : ``)+
(user.glove.str == 0 || !user.glove.str ? `–ö–∞–º–µ–Ω—å —Å–∏–ª—ãüí™üèª\n` : ``)+
(user.glove.mind == 0 || !user.glove.mind ? `–ö–∞–º–µ–Ω—å —Ä–∞–∑—É–º–∞üôã‚Äç‚ôÇ\n` : ``)+
(user.glove.time == 0 || !user.glove.time ? `–ö–∞–º–µ–Ω—å –≤—Ä–µ–º–µ–Ω–∏‚åõ\n` : ``)+
(user.glove.real == 0 || !user.glove.real ? `–ö–∞–º–µ–Ω—å —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏üåÄ\n` : ``)+
(user.glove.space == 0 || !user.glove.space ? `–ö–∞–º–µ–Ω—å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞üåó\n` : ``)+`
	`);
});

///–°–æ–±—Ä–∞—Ç—å –ø–µ—Ä—á–∞—Ç–∫—É///
vk.updates.hear(/^(?:—Å–æ–±—Ä–∞—Ç—å –ø–µ—Ä—á–∞—Ç–∫—É)\s?([0-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	if(user.glove.glove == 0 || !user.glove.glove) return message.send(`–í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ "–ø–µ—Ä—á–∞—Ç–∫–∞"!`);
	if(user.glove.souls == 0 || !user.glove.souls) return message.send(`–í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ "–∫–∞–º–µ–Ω—å –¥—É—à–∏"!`);
	if(user.glove.str == 0 || !user.glove.str) return message.send(`–í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ "–∫–∞–º–µ–Ω—å —Å–∏–ª—ã"!`);
	if(user.glove.time == 0 || !user.glove.time) return message.send(`–í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ "–∫–∞–º–µ–Ω—å –≤—Ä–µ–º–µ–Ω–∏"!`);
	if(user.glove.space == 0 || !user.glove.space) return message.send(`–í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ "–∫–∞–º–µ–Ω—å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞"!`);
	if(user.glove.real == 0 || !user.glove.real) return message.send(`–í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ "–∫–∞–º–µ–Ω—å —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏"!`);
	if(user.glove.mind == 0 || !user.glove.mind) return message.send(`–í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ "–∫–∞–º–µ–Ω—å —Ä–∞–∑—É–º–∞"!`);
	if(user.glove.activate == true) return message.send(`–£ –≤–∞—Å —É–∂–µ —Å–æ–±—Ä–∞–Ω–Ω–∞ –ø–µ—Ä—á–∞—Ç–∫–∞ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏!`);
	user.glove.glove = 0;
	user.glove.souls = 0;
	user.glove.str = 0;
	user.glove.time = 0;
	user.glove.space = 0;
	user.glove.real = 0;
	user.glove.mind = 0;
	user.glove.activ = true;
	log[user.number].push(`–°–æ–±—Ä–∞–ª –ø–µ—Ä—á–∞—Ç–∫—É. –í—Ä–µ–º—è: ${time()}|${data()}`);
	message.send(`–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!!!üí• –í—ã —Å–æ–±—Ä–∞–ª–∏ —Ä–µ–¥—á–∞–π—à–∏–π –∞—Ä—Ç–∏—Ñ–∞–∫—Ç "–ü–µ—Ä—á–∞—Ç–∫—É –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏"!!! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É "—â–µ–ª—á–æ–∫"!`)
	return user.save()
});

///–ü–µ—Ä–µ–¥–∞—á–∞ –∫–∞–º–Ω–µ–π///
vk.updates.hear(/^(?:–ø–µ—Ä–µ–¥–∞—Ç—å –ø–µ—Ä—á–∞—Ç–∫—É|–ø–µ—Ä–µ–¥–∞—Ç—å –ø–µ—Ä—á–∞—Ç–∫–∞)\s?([0-9]+)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	let userz = await User.findOne({ number: message.$match[1] });
	if(user.glove.activ == true) return message.send(`–£ –≤–∞—Å —É–∂–µ —Å–æ–±—Ä–∞–Ω–∞ –ø–µ—Ä—á–∞—Ç–∫–∞ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏!`)
	if(userz.glove.activ == true) return message.send(`–£ –∏–≥—Ä–æ–∫–∞ —É–∂–µ —Å–æ–±—Ä–∞–Ω–∞ –ø–µ—Ä—á–∞—Ç–∫–∞ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏!`)
	if(userz.glove.glove == 1) return message.send(`–£ –∏–≥—Ä–æ–∫–∞ —É–∂–µ –µ—Å—Ç—å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç "–ø–µ—Ä—á–∞—Ç–∫–∞"!`);
	if(user.glove.glove == 0 || !user.glove.glove) return message.send(`–£ –≤–∞—Å –Ω–µ—Ç—É –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ "–ø–µ—Ä—á–∞—Ç–∫–∞"!`);
	user.glove.glove = 0;
	userz.glove.glove = 1;
	log[user.number].push(`–ü–µ—Ä–µ–¥–∞–ª –ø–µ—Ä—á–∞—Ç–∫—É –∏–≥—Ä–æ–∫—É ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
	log[userz.number].push(`–ü–æ–ª—É—á–∏–ª –ø–µ—Ä—á–∞—Ç–∫—É –æ—Ç –∏–≥—Ä–æ–∫–∞ ${user.number}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(userz.balance)}$`);
	message.send(`–í—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç "–ø–µ—Ä—á–∞—Ç–∫–∞" –∏–≥—Ä–æ–∫—É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")}!`);
	await user.save()
	return userz.save()
});

vk.updates.hear(/^(?:–ø–µ—Ä–µ–¥–∞—Ç—å –∫–∞–º–µ–Ω—å –¥—É—à–∏|–ø–µ—Ä–µ–¥–∞—Ç—å –¥—É—à–∏)\s?([0-9]+)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	let userz = await User.findOne({ number: message.$match[1] });
	if(user.glove.activ == true) return message.send(`–£ –≤–∞—Å —É–∂–µ —Å–æ–±—Ä–∞–Ω–∞ –ø–µ—Ä—á–∞—Ç–∫–∞ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏!`)
	if(userz.glove.activ == true) return message.send(`–£ –∏–≥—Ä–æ–∫–∞ —É–∂–µ —Å–æ–±—Ä–∞–Ω–∞ –ø–µ—Ä—á–∞—Ç–∫–∞ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏!`)
	if(userz.glove.souls == 1) return message.send(`–£ –∏–≥—Ä–æ–∫–∞ —É–∂–µ –µ—Å—Ç—å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç "–∫–∞–º–µ–Ω—å –¥—É—à–∏"!`);
	if(user.glove.souls == 0 || !user.glove.souls) return message.send(`–£ –≤–∞—Å –Ω–µ—Ç—É –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ "–∫–∞–º–µ–Ω—å –¥—É—à–∏"!`);
	user.glove.souls = 0;
	userz.glove.souls = 1;
	log[user.number].push(`–ü–µ—Ä–µ–¥–∞–ª –∫–∞–º–µ–Ω—å –¥—É—à–∏ –∏–≥—Ä–æ–∫—É ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
	log[userz.number].push(`–ü–æ–ª—É—á–∏–ª –∫–∞–º–µ–Ω—å –¥—É—à–∏ –æ—Ç –∏–≥—Ä–æ–∫–∞ ${user.number}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(userz.balance)}$`);
	message.send(`–í—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç "–∫–∞–º–µ–Ω—å –¥—É—à–∏" –∏–≥—Ä–æ–∫—É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")}!`);
	await user.save()
	return userz.save()
});

vk.updates.hear(/^(?:–ø–µ—Ä–µ–¥–∞—Ç—å –∫–∞–º–µ–Ω—å —Å–∏–ª—ã|–ø–µ—Ä–µ–¥–∞—Ç—å —Å–∏–ª—ã)\s?([0-9]+)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	let userz = await User.findOne({ number: message.$match[1] });
	if(user.glove.activ == true) return message.send(`–£ –≤–∞—Å —É–∂–µ —Å–æ–±—Ä–∞–Ω–∞ –ø–µ—Ä—á–∞—Ç–∫–∞ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏!`)
	if(userz.glove.activ == true) return message.send(`–£ –∏–≥—Ä–æ–∫–∞ —É–∂–µ —Å–æ–±—Ä–∞–Ω–∞ –ø–µ—Ä—á–∞—Ç–∫–∞ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏!`)
	if(userz.glove.str == 1) return message.send(`–£ –∏–≥—Ä–æ–∫–∞ —É–∂–µ –µ—Å—Ç—å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç "–∫–∞–º–µ–Ω—å —Å–∏–ª—ã"!`);
	if(user.glove.str == 0 || !user.glove.str) return message.send(`–£ –≤–∞—Å –Ω–µ—Ç—É –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ "–∫–∞–º–µ–Ω—å —Å–∏–ª—ã"!`);
	user.glove.str = 0;
	iuserzd.glove.str = 1;
	log[user.number].push(`–ü–µ—Ä–µ–¥–∞–ª –∫–∞–º–µ–Ω—å —Å–∏–ª—ã –∏–≥—Ä–æ–∫—É ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
	log[userz.number].push(`–ü–æ–ª—É—á–∏–ª –∫–∞–º–µ–Ω—å —Å–∏–ª—ã –æ—Ç –∏–≥—Ä–æ–∫–∞ ${user.number}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(userz.balance)}$`);
	message.send(`–í—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç "–∫–∞–º–µ–Ω—å —Å–∏–ª—ã" –∏–≥—Ä–æ–∫—É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")}!`);
	await user.save()
	return userz.save()
});

vk.updates.hear(/^(?:–ø–µ—Ä–µ–¥–∞—Ç—å –∫–∞–º–µ–Ω—å –≤—Ä–µ–º–µ–Ω–∏|–ø–µ—Ä–µ–¥–∞—Ç—å –≤—Ä–µ–º–µ–Ω–∏)\s?([0-9]+)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	let userz = await User.findOne({ number: message.$match[1] });
	if(user.glove.activ == true) return message.send(`–£ –≤–∞—Å —É–∂–µ —Å–æ–±—Ä–∞–Ω–∞ –ø–µ—Ä—á–∞—Ç–∫–∞ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏!`)
	if(userz.glove.activ == true) return message.send(`–£ –∏–≥—Ä–æ–∫–∞ —É–∂–µ —Å–æ–±—Ä–∞–Ω–∞ –ø–µ—Ä—á–∞—Ç–∫–∞ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏!`)
	if(userz.glove.time == 1) return message.send(`–£ –∏–≥—Ä–æ–∫–∞ —É–∂–µ –µ—Å—Ç—å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç "–∫–∞–º–µ–Ω—å –≤—Ä–µ–º–µ–Ω–∏"!`);
	if(user.glove.time == 0 || !user.glove.time) return message.send(`–£ –≤–∞—Å –Ω–µ—Ç—É –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ "–∫–∞–º–µ–Ω—å –≤—Ä–µ–º–µ–Ω–∏"!`);
	user.glove.time = 0;
	userz.glove.time = 1;
	log[user.number].push(`–ü–µ—Ä–µ–¥–∞–ª –∫–∞–º–µ–Ω—å –≤—Ä–µ–º–µ–Ω–∏ –∏–≥—Ä–æ–∫—É ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
	log[userz.number].push(`–ü–æ–ª—É—á–∏–ª –∫–∞–º–µ–Ω—å –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç –∏–≥—Ä–æ–∫–∞ ${user.number}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(userz.balance)}$`);
	message.send(`–í—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç "–∫–∞–º–µ–Ω—å –≤—Ä–µ–º–µ–Ω–∏" –∏–≥—Ä–æ–∫—É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")}!`);
	await user.save()
	return userz.save()
});

vk.updates.hear(/^(?:–ø–µ—Ä–µ–¥–∞—Ç—å –∫–∞–º–µ–Ω—å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞|–ø–µ—Ä–µ–¥–∞—Ç—å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞)\s?([0-9]+)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	let userz = await User.findOne({ number: message.$match[1] });
	if(user.glove.activ == true) return message.send(`–£ –≤–∞—Å —É–∂–µ —Å–æ–±—Ä–∞–Ω–∞ –ø–µ—Ä—á–∞—Ç–∫–∞ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏!`)
	if(userz.glove.activ == true) return message.send(`–£ –∏–≥—Ä–æ–∫–∞ —É–∂–µ —Å–æ–±—Ä–∞–Ω–∞ –ø–µ—Ä—á–∞—Ç–∫–∞ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏!`)
	if(userz.glove.space == 1) return message.send(`–£ –∏–≥—Ä–æ–∫–∞ —É–∂–µ –µ—Å—Ç—å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç "–∫–∞–º–µ–Ω—å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞"!`);
	if(user.glove.space == 0 || !user.glove.space) return message.send(`–£ –≤–∞—Å –Ω–µ—Ç—É –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ "–∫–∞–º–µ–Ω—å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞"!`);
	user.glove.space = 0;
	userz.glove.space = 1;
	log[user.number].push(`–ü–µ—Ä–µ–¥–∞–ª –∫–∞–º–µ–Ω—å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –∏–≥—Ä–æ–∫—É ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
	log[userz.number].push(`–ü–æ–ª—É—á–∏–ª –∫–∞–º–µ–Ω—å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –æ—Ç –∏–≥—Ä–æ–∫–∞ ${user.number}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(userz.balance)}$`);
	message.send(`–í—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç "–∫–∞–º–µ–Ω—å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞" –∏–≥—Ä–æ–∫—É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")}!`);
	await user.save()
	return userz.save()
});

vk.updates.hear(/^(?:–ø–µ—Ä–µ–¥–∞—Ç—å –∫–∞–º–µ–Ω—å —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏|–ø–µ—Ä–µ–¥–∞—Ç—å —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏)\s?([0-9]+)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	let userz = await User.findOne({ number: message.$match[1] });
	if(user.glove.activ == true) return message.send(`–£ –≤–∞—Å —É–∂–µ —Å–æ–±—Ä–∞–Ω–∞ –ø–µ—Ä—á–∞—Ç–∫–∞ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏!`)
	if(userz.glove.activ == true) return message.send(`–£ –∏–≥—Ä–æ–∫–∞ —É–∂–µ —Å–æ–±—Ä–∞–Ω–∞ –ø–µ—Ä—á–∞—Ç–∫–∞ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏!`)
	if(userz.glove.real == 1) return message.send(`–£ –∏–≥—Ä–æ–∫–∞ —É–∂–µ –µ—Å—Ç—å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç "–∫–∞–º–µ–Ω—å —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏"!`);
	if(user.glove.real == 0 || !user.glove.real) return message.send(`–£ –≤–∞—Å –Ω–µ—Ç—É –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ "–∫–∞–º–µ–Ω—å —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏"!`);
	user.glove.real = 0;
	userz.glove.real = 1;
	log[user.number].push(`–ü–µ—Ä–µ–¥–∞–ª –∫–∞–º–µ–Ω—å —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∏–≥—Ä–æ–∫—É ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
	log[userz.number].push(`–ü–æ–ª—É—á–∏–ª –∫–∞–º–µ–Ω—å —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç –∏–≥—Ä–æ–∫–∞ ${user.number}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(userz.balance)}$`);
	message.send(`–í—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç "–∫–∞–º–µ–Ω—å —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏" –∏–≥—Ä–æ–∫—É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")}!`);
	await user.save()
	return userz.save()
});

vk.updates.hear(/^(?:–ø–µ—Ä–µ–¥–∞—Ç—å –∫–∞–º–µ–Ω—å —Ä–∞–∑—É–º–∞|–ø–µ—Ä–µ–¥–∞—Ç—å —Ä–∞–∑—É–º–∞)\s?([0-9]+)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	let userz = await User.findOne({ number: message.$match[1] });
	if(user.glove.activ == true) return message.send(`–£ –≤–∞—Å —É–∂–µ —Å–æ–±—Ä–∞–Ω–∞ –ø–µ—Ä—á–∞—Ç–∫–∞ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏!`)
	if(userz.glove.activ == true) return message.send(`–£ –∏–≥—Ä–æ–∫–∞ —É–∂–µ —Å–æ–±—Ä–∞–Ω–∞ –ø–µ—Ä—á–∞—Ç–∫–∞ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏!`)
	if(userz.glove.mind == 1) return message.send(`–£ –∏–≥—Ä–æ–∫–∞ —É–∂–µ –µ—Å—Ç—å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç "–∫–∞–º–µ–Ω—å —Ä–∞–∑—É–º–∞"!`);
	if(user.glove.mind == 0 || !user.glove.mind) return message.send(`–£ –≤–∞—Å –Ω–µ—Ç—É –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ "–∫–∞–º–µ–Ω—å —Ä–∞–∑—É–º–∞"!`);
	user.glove.mind = 0;
	userz.glove.mind = 1;
	log[user.number].push(`–ü–µ—Ä–µ–¥–∞–ª –∫–∞–º–µ–Ω—å —Ä–∞–∑—É–º–∞ –∏–≥—Ä–æ–∫—É ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
	log[userz.number].push(`–ü–æ–ª—É—á–∏–ª —Ä–∞–∑—É–º–∞ —Ä–∞–∑—É–º–∞ –æ—Ç –∏–≥—Ä–æ–∫–∞ ${user.number}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(userz.balance)}$`);
	return message.send(`–í—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç "–∫–∞–º–µ–Ω—å —Ä–∞–∑—É–º–∞" –∏–≥—Ä–æ–∫—É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")}!`);
	await user.save()
	return userz.save()
});

///–©–µ–ª—á–æ–∫///
vk.updates.hear(/(?:—â–µ–ª—á–æ–∫|—â—ë–ª—á–æ–∫|—â–µ–ª—á–µ–∫|—â—ë–ª—á–µ–∫)\s?([1-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	let userz = await User.findOne({ number: message.$match[1] });
	if(user.glove.activ == false) return message.send(`–£ –≤–∞—Å –Ω–µ—Ç –ø–µ—Ä—á–∞—Ç–∫–∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏!`)
	if(!message.$match[1]){
		if(user.block.glove > getUnix()) return message.send(`–ï—â—ë –æ–¥–∏–Ω —â–µ–ª—á–æ–∫ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —Å–¥–µ–ª–∞—Ç—å —á–µ—Ä–µ–∑ ${unixStampLeft(user.block.glove - Date.now())}`);
		let bonus = 2500000000;
		user.balance += bonus;
		user.block.glove = getUnix() + 21600000;
		setTimeout(() => {
			log[user.number].push(`–°–Ω—è—Ç –æ—Ç–∫–∞—Ç –ø–æ —â–µ–ª—á–∫—É. –í—Ä–µ–º—è: ${time()}|${data()}`);
		}, 21600000);
		log[user.number].push(`–°–¥–µ–ª–∞–ª —â–µ–ª—á–æ–∫ –∏ –≤—ã–¥–∞–ª —Å–µ–±–µ ${spaces(bonus)}$. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		message.send(`–í—ã —Å–¥–µ–ª–∞–ª–∏ —â–µ–ª—á–µ–∫ –∏ –≤—ã–¥–∞–ª–∏ —Å–µ–±–µ ${spaces(bonus)}$!`)
	} else {
		let bonus = 5000;
		userz.balance += bonus;
		log[user.number].push(`–°–¥–µ–ª–∞–ª —â–µ–ª—á–æ–∫ –∏ –≤—ã–¥–∞–ª –∏–≥—Ä–æ–∫—É ${message.$match[1]} ${spaces(bonus)}$. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		log[userz.number].push(`–ò–≥—Ä–æ–∫ ${user.number} —Å–¥–µ–ª–∞–ª —â–µ–ª—á–æ–∫ –∏ –≤—ã–¥–∞–ª ${spaces(bonus)}$. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(userz.balance)}$`);
		message.send(`–í—ã —Å–¥–µ–ª–∞–ª–∏ —â–µ–ª—á–µ–∫ –∏ –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${spaces(bonus)}$!`)
		await userz.save()
	}
	return user.save()
});

///Vig///
vk.updates.hear(/^(?:vig)\s?([0-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	let userz = await User.findOne({ number: message.$match[1] });
	let adm = adms.find(x=> x.lvl === user.level);
	if(!message.$match[1]) return message.send(`üî∏ ‚ûæ –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: vig [ID] `);
	if(!Number(message.$match[1])) return message.send(`üî∏ ‚ûæ –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –≤–∏–¥–∞.`);
	if(user.level < 7) return message.send(`–í—ã –Ω–µ –ì–ª.–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!`);
	if(!userz) return message.send(`‚ùé ‚ûæ –¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç!`);
	if(userz.level > 9) return message.send(`–û—à–∏–±–∫–∞!`);
	await userz.inc("vig", Math.floor(1));
	log[user.number].push(`–í—ã–¥–∞–ª –ø—Ä–µ–¥—Ä–µ–∂–¥–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É: ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()}`);
	log[userz.number].push(`–ü–æ–ª—É—á–∏–ª –ø—Ä–µ–¥—Ä–µ–∂–¥–µ–Ω–∏–µ –æ—Ç –∏–≥—Ä–æ–∫–∞: ${user.number}.–í—Ä–µ–º—è: ${time()}|${data()}`);
	let text = ``;
	if(userz.vig >= 3){
		await userz.set("vig", 0);
		await userz.set("level", 0);
		log[userz.number].push(`–ò–≥—Ä–æ–∫ –ø–æ–ª—É—á–∏–ª 3 –≤—ã–≥–æ–≤–æ—Ä–∞ –∏ –±—ã–ª —Å–Ω—è—Ç —Å –¥–æ–ª–∂–Ω–æ—Å—Ç–∏. –í—Ä–µ–º—è: ${time()}|${data()}`);
		text += `‚úÖ ‚ûæ ${userp} –≤—ã–¥–∞–ª –≤–∞–º –∞–¥–º–∏–Ω-–≤—ã–≥–æ–≤–æ—Ä.\n‚úÖ ‚ûæ –£ –≤–∞—Å 3 –∞–¥–º–∏–Ω –≤—ã–≥–æ–≤–æ—Ä–∞.\n‚úÖ ‚ûæ –í—ã —Å–Ω—è—Ç—ã!`
	} else {
		text += `‚úÖ ‚ûæ ${userp} –≤—ã–¥–∞–ª –≤–∞–º –∞–¥–º–∏–Ω-–≤—ã–≥–æ–≤–æ—Ä.\n‚úÖ ‚ûæ –ü–æ—Å–ª–µ 3 –∞–¥–º–∏–Ω-–≤—ã–≥–æ–≤–æ—Ä –≤—ã –±—É–¥–µ—Ç–µ —Å–Ω—è—Ç—ã!\n‚ùó ‚ûæ –í—ã–≥–æ–≤–æ—Ä–æ–≤: ${userz.vig} –∏–∑ 3!`
	}
	vk.api.call('messages.send', {
		peer_id: userz.id,
		random_id: 0,
		message: text
	}); 

	if(message.user != owner){
		vk.api.call('messages.send', {
			peer_id: chat_w + 2000000000,
			random_id: 0,
			message: `@id${user.id}(${user.prefix}) [${adm.name}, ID: ${user.number}] –≤—ã–¥–∞–ª –∞–¥–º–∏–Ω-–≤—ã–≥–æ–≤–æ—Ä –∏–≥—Ä–æ–∫—É @id${userz.id}(${userz.prefix}) [ID: ${message.$match[1]}]!\n‚ùó ‚ûæ –í—ã–≥–æ–≤–æ—Ä–æ–≤: ${userz.vig} –∏–∑ 3!`
		}); 
	}

	message.send(`‚úÖ ‚ûæ –í—ã –≤—ã–¥–∞–ª–∏ –≤—ã–≥–æ–≤–æ—Ä –∏–≥—Ä–æ–∫—É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")}!\n‚ùó ‚ûæ –í—ã–≥–æ–≤–æ—Ä–æ–≤: ${userz.vig} –∏–∑ 3!`);
	await user.save()
	return userz.save()
}); 

///UnVig///
vk.updates.hear(/^(?:unvig)\s?([0-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	let userz = await User.findOne({ number: message.$match[1] });
	let adm = adms.find(x=> x.lvl === user.level);
	if(!message.$match[1]) return message.send(`üî∏ ‚ûæ –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: unwarn ID`);
	if(!Number(message.$match[1])) return message.send(`üî∏ ‚ûæ –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –≤–∏–¥–∞.`);
	if(user.level < 7) return message.send(`–í—ã –Ω–µ –ì–ª.–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!`);
	if(!userz) return message.send(`‚ùé ‚ûæ –¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç!`);
	await userz.set("vig", 0);
	log[user.number].push(`–°–Ω—è–ª –≤—Å–µ –≤—ã–≥–æ–≤–æ—Ä—ã —Å –∏–≥—Ä–æ–∫–∞ ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()}`);
	log[userz.number].push(`–°–Ω—è—Ç—ã –≤—Å–µ –≤—ã–≥–æ–≤–æ—Ä—ã –∏–≥—Ä–æ–∫–æ–º: ${user.number}. –í—Ä–µ–º—è: ${time()}|${data()}`);
	
	vk.api.call('messages.send', {
		peer_id: userz.id,
		random_id: 0,
		message: `‚úÖ ‚ûæ ${userp} [${adm.name}] —Å–Ω—è–ª –í–∞–º –≤—Å–µ –≤—ã–≥–æ–≤–æ—Ä—ã`
	});

	if(message.user != owner){
		vk.api.call('messages.send', {
			peer_id: chat_w + 2000000000,
			random_id: 0,
			message: `@id${user.id}(${user.prefix}) [${adm.name}, ID: ${user.number}] —Å–Ω—è–ª –≤—Å–µ –∞–¥–º–∏–Ω-–≤—ã–≥–æ–≤–æ—Ä—ã –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É @id${userz.id}(${userz.prefix}) [ID: ${userz.number}]!`
		}); 
	}

	message.send(`‚úÖ ‚ûæ –í—ã —Å–Ω—è–ª–∏ –≤—Å–µ –≤—ã–≥–æ–≤–æ—Ä—ã –∏–≥—Ä–æ–∫—É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")}!`);
	await user.save()
	return userz.save()
});

///–û–Ω–ª–∞–π–Ω///
vk.updates.hear(/^–æ–Ω–ª–∞–π–Ω/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	if(!message.isChat) return message.send(`–ö–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–µ!`);
    vk.api.messages.getConversationMembers({
        peer_id: message.peerId,
        fields: "online"
    }).then(async function (response) {
        let text = `üëæ –°–ø–∏—Å–æ–∫ –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥—è—Ç—Å—è –æ–Ω–ª–∞–π–Ω:\n`;
        await response.profiles.map(e => {
            if(e.id < 1) return;
            if(e.online != 0) text += `${[ 'üòé', 'üôÇ', 'üôÉ', 'üòå',  'üòá', 'üò≥', 'üòÇ', 'üòù', 'üôÑ', 'üòù' , 'üòõ'].random()} || *id${e.id} (${e.first_name} ${e.last_name})\n`;
			})
        return message.send(text)
    });
});

///–°–æ–∫—Ä–∞—Ç–∏—Ç—å///
vk.updates.hear(/^(?:—Å–æ–∫—Ä–∞—Ç–∏—Ç—å)\s?([^]+)?/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	let text = message.$match[1];
	log[user.number].push(`–°–æ–∫—Ä–∞—Ç–∏–ª —Å—Å—ã–ª–∫—É. –°—Å—ã–ª–∫–∞: ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()}`);
	if(!text) return message.send("‚ö† –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ —Å–æ–∫—Ä–∞—Ç–∏—Ç—å!");
	let url = ``;
	try { ( url = await vk.api.call("utils.getShortLink", {url: text})) () } catch(e) {};
	vk.api.call("utils.checkLink", {url: text}).then(async function (res){ 
		let per = ``;
		if(res.status == "not_banned"){
			per = `‚úÖ ‚ûæ –°—Å—ã–ª–∫–∞ –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞!`
		} else if(res.status == "banned"){
			return message.send(`‚õî ‚ûæ –°—Å—ã–ª–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞!`);
		} else {
			return message.send(`‚ôª ‚ûæ –°—Å—ã–ª–∫–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è!`);
		}
		message.send(`üòú ‚ûæ –ö–æ—Ä–æ—Ç–∫–∞—è —Å—Å—ã–ª–∫–∞: ${url.short_url}\n${per}`);
  		let qr = qrcode.image(url.short_url, { type: 'png' });
  		qr.pipe(fs.createWriteStream('image/qr.png'));
  		return message.sendPhoto(qr);
	});
});

///!–ö–∏–∫–Ω—É—Ç—å///
vk.updates.hear(/^(?:!–∫–∏–∫–Ω—É—Ç—å)\s?([0-9]+)?/i, async (message) => { 
	msg();
	let user = await userq;
	await user.save();
	let users = await vk.api.messages.getConversationMembers({peer_id: message.peerId});
	let usere = users.items.find((item) => item.member_id === message.senderId);
	config.command += 1;
	user.msg.command += 1;
	user.msg.last_msg = `${time()}|${data()}`;
	await user.save();
	let userz = await User.findOne({ number: message.$match[1] });
	if(!message.isChat) return message.send(`‚ö†Ô∏è–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–∞—Ö!`);
	if(!message.$match[1]) return message.send(`–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: !–ö–∏–∫–Ω—É—Ç—å [–∏–≥—Ä–æ–≤–æ–π id]`);
	if(!usere.is_admin || message.user != owner){
		return message.send(`–í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –±–µ—Å–µ–¥—ã!`);
	}
	if(!userz) return message.send(`–ù–µ –≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ | –ò–≥—Ä–æ–∫–∞ –Ω–µ—Ç`);  
	vk.api.call("messages.removeChatUser", { chat_id: message.chatId, peer_id: userz.id });
	return message.send(`[id${userz.id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] —É—Å–ø–µ—à–Ω–æ –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –±–µ—Å–µ–¥—ã!`);
});

///!kickadm///
vk.updates.hear(/^(?:!kickadm)\s?([0-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	if(message.$match[1]){
		if(message.user == owner){  
			vk.api.call("messages.removeChatUser",{ 
				chat_id: message.chatId, 
				user_id: message.$match[1] 
			});
			return message.send(`–Ø—Ä–æ—Å–ª–∞–≤, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –±–µ—Å–µ–¥—ã!`);
		}
    }
});

///!–î–æ–±–∞–≤–∏—Ç—å///
vk.updates.hear(/^(?:!–¥–æ–±–∞–≤–∏—Ç—å|!–ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å)\s?([0-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	let users = await vk.api.messages.getConversationMembers({peer_id: message.peerId});
	let usere = users.items.find((item) => item.member_id === message.senderId);
	config.command += 1;
	user.msg.command += 1;
	user.msg.last_msg = `${time()}|${data()}`;
	await user.save();
	let userz = await User.findOne({ number: message.$match[1] });
	if(!usere.is_admin || message.user != owner){
		return message.send(`–í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –±–µ—Å–µ–¥—ã!`);
	}
	if(!message.$match[1]) return message.send(`–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: !–î–æ–±–∞–≤–∏—Ç—å [–∏–≥—Ä–æ–≤–æ–π id]`);
	if(!userz) return message.send(`–ù–µ –≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ | –ò–≥—Ä–æ–∫–∞ –Ω–µ—Ç`);  
	vk.api.call("messages.addChatUser", { chat_id: message.chatId, user_id: userz.id });
	return message.send(`–í—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏ [id${userz.id}|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] –≤ —ç—Ç—É –±–µ—Å–µ–¥—É!`);
});

///–ü—Ä–∞–≤–∏–ª–∞///
vk.updates.hear(/^(?:–ø—Ä–∞–≤–∏–ª–∞)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	return message.send(`–ü—Ä–∞–≤–∏–ª–∞ –±–æ—Ç–∞ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –¥–∞–Ω–Ω–æ–π —Å—Ç–∞—Ç—å–µ: vk.com/@bot_rikl-rules !üôÇ`);
});

///–õ–æ—Ç–µ—Ä–µ—è///
vk.updates.hear(/^(?:–ª–æ—Ç–µ—Ä–µ—è|–ª–æ—Ç–µ—Ä–∏—è|–ª–æ—Ç—ã—Ä–µ—è|–ª–æ—Ç—ã—Ä–∏—è|–ª–∞—Ç–µ—Ä–µ—è|–ª–∞—Ç–µ—Ä–∏—è|–ª–∞—Ç—ã—Ä–µ—è|–ª–∞—Ç—ã—Ä–∏—è)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	let userz = await User.findOne({ number: lottery.win[lottery.win_people].id });
	for(u in lottery.players)
	if(lottery.players[u].id == user.number) return message.send(`üîî–í—ã —É–∂–µ —É—á–∞–≤—Å—Ç–≤—É–µ—Ç–µ –≤ –ª–æ—Ç–µ—Ä–µ–∏!\n üí∞–¢–µ–∫—É—â–∞—è —Å—É–º–º–∞ —Ä–æ–∑—ã–≥—Ä—ã—à–∞: ${spaces(lottery.balance)}$!`)
	let count = rand(100000000,200000000)
	lottery.balance += count;
	lottery.people += 1;
	lottery.players[lottery.people] = {
		id: user.number
	};
	fs.writeFileSync("./base/lottery.json", JSON.stringify(lottery, null, "\t"))
	log[user.number].push(`–ü–æ—É—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ –ª–æ—Ç–µ—Ä–µ–∏. –°—É–º–º–∞ –ø—Ä–∏–±–∞–≤–∫–∏ –∫ —Ñ–æ–Ω–¥—É: ${spaces(count)}$ –í—Ä–µ–º—è: ${time()}|${data()}`);
	message.send(`
üì¢–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è–ª–∏ —É—á–∞—Å—Ç–∏–µ –≤ –ª–æ—Ç–µ—Ä–µ–∏! 
üí∞–°—É–º–º–∞ —Ä–æ–∑—ã–≥—Ä—ã—à–∞: ${spaces(lottery.balance)}$!
üåú–ü—Ä–æ—à–ª—ã–π –ø–æ–±–µ–¥–∏—Ç–µ–ª—å: ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)}!
üî•–í—ã–∏–≥—Ä—ã—à: ${spaces(lottery.win[lottery.win_people].count)}$!
üîî–ù–∞–ø–æ–º–∏–Ω–∞–µ–º —Ç–æ, —á—Ç–æ –µ—Å–ª–∏ –≤—ã –Ω–µ —Ä–∞–∑—É –Ω–µ –ø–∏—Å–∞–ª–∏ –±–æ—Ç—É –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –æ –≤—ã–∏–≥—Ä—ã—à–µ!
	`)
	return user.save()
});

///–°—Ç–∞–∫–∞–Ω—á–∏–∫///
vk.updates.hear(/^(?:—Å—Ç–∞–∫–∞–Ω—á–∏–∫|—Å—Ç–∞–∫)\s([1-4])\s(.*)$/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	message.$match[2] = message.$match[2].replace(/(\.|\,)/ig, '');
	message.$match[2] = message.$match[2].replace(/(–∫|k)/ig, '000');
	message.$match[2] = message.$match[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, user.balance);
	message.$match[2] = Math.floor(Number(message.$match[2]));

	if(!Number(message.$match[2]) || !message.$match[1]) return message.send(`–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: —Å—Ç–∞–∫–∞–Ω—á–∏–∫ [1-4] [—Å—Ç–∞–≤–∫–∞]`);
	if(message.$match[2] > user.balance) return message.send(`üóë–£ –≤–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω–æ–π —Å—É–º–º—ã!`);
	if(message.$match[2] < 1000 || message.$match[2] > 10000000000) return message.send(`üóë–°—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∏–∂–µ 1.000$ –∏ –±–æ–ª—å—à–µ 10.000.000.000$!`);
	let multiply = utils.pick([0.95, 0.9, 0.85, 0.8, 0.75, 0.7, 0.65]);
	let cup = rand(1,4);
    let bon = message.$match[2] * multiply;
	let bonus = 0;
	if(event == 1){
		bonus = Math.floor(bon * (1 + (proc / 100)));
	} else {
		bonus = Math.floor(bon);
	}

	if(message.$match[2] <= user.balance){
		if(cup == message.$match[1]){
			user.balance += bonus;
			log[user.number].push(`–í—ã–∏–≥—Ä–∞–ª –≤ —Å—Ç–∞–∫–∞–Ω—á–∏–∫–µ. –í—ã–∏–≥—Ä—ã—à: ${spaces(message.$match[2] * multiply)}$ –°—Ç–∞–≤–∫–∞: ${spaces(message.$match[1])}$ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}`);
			if(user.quest.lvl == 4){
				user.quest.per += 1
				if(user.quest.per == 3){
					await user.inc("balance", Math.floor(7500000000));
					await user.inc("don", Math.floor(2));
					user.quest.lvl = 5;
					user.quest.per = 0;
					user.inv.case.two += 1;
					log[user.number].push(`–í—ã–ø–æ–ª–Ω–∏–ª –∫–≤–µ—Å—Ç 4 —É—Ä–æ–≤–Ω—è! –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`)
					message.send(`
üéâ–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!
üëí–í—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –∫–≤–µ—Å—Ç 4 —É—Ä–æ–≤–Ω—è!
üéÆ–í–∞—à–∞ –Ω–∞–≥—Ä–∞–¥–∞:
7.500.000.000$
2 —Ä–∏–∫–ª–∞
${cases.find(x=> x.id === 2).name}
üéÆ–°–ª–µ–¥—É—é—â–∞—è —Ü–µ–ª—å:
–í—ã–∏–≥—Ä–∞—Ç—å 2 —Ä–∞–∑–∞ –≤ –∫–∞–∑–∏–Ω–æ —Å –º–Ω–æ–∂–µ—Ç–µ–ª–µ–º x10 –ø—Ä–∏ —Å—Ç–∞–≤–∫–µ —Å–≤—ã—à–µ 1.000.000.000$
					`)
					await user.save()
					return message.send(`üóë–í—ã —É–≥–∞–¥–∞–ª–∏! –ü—Ä–∏–∑ ${spaces(bonus)}$`+(event != 1 ? `` : ` (+${proc}%)`)+`!`);
			} else {
					await user.save()
					return message.send(`üóë–í—ã —É–≥–∞–¥–∞–ª–∏! –ü—Ä–∏–∑ ${spaces(bonus)}$`+(event != 1 ? `` : ` (+${proc}%)`)+`!\n–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–≤–µ—Å—Ç–∞: ${user.quest.per} –∏–∑ 3`);
				}
			};
			await user.save();
			return message.send(`üóë–í—ã —É–≥–∞–¥–∞–ª–∏! –ü—Ä–∏–∑ ${spaces(bonus)}$`+(event != 1 ? `` : ` (+${proc}%)`)+`!`);
		} else {
			log[user.number].push(`–ü—Ä–æ–∏–≥—Ä–∞–ª –≤ —Å—Ç–∞–∫–∞–Ω—á–∏–∫–µ. –°—Ç–∞–≤–∫–∞: ${spaces(message.$match[1])}$ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}`);
			if(user.quest.lvl == 4){
				if(user.quest.per > 0){
					user.quest.per = 0;
					await user.save();
					message.send(`–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–≤–µ—Å—Ç–∞ –±—ã–ª –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω!`)
				}
			}
			user.balance -= message.$match[2];
			await user.save();
			return message.send(`üóë–í—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏, —ç—Ç–æ –±—ã–ª ${cup} —Å—Ç–∞–∫–∞–Ω—á–∏–∫!\nüí∞–í–∞—à –±–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		}
	}
});

///–ë—Ä–∞–∫–∏///
vk.updates.hear(/^(?:–±—Ä–∞–∫–∏)$/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	let req = ``;
    if(user.marriage.part != 0) return message.send(`‚ö° B—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –±—Ä–∞–∫–µ!!`);
	for(let i = 0; i < user.marriage.req.length; i++){
		if(user.marriage.req.length > i){
			let userm = await User.findOne({ number: user.marriage.req[i] });
			req += `\nüíÉ –û—Ç –∏–≥—Ä–æ–∫–∞ @id${userm.id}(${userm.prefix}) [ID: ${userm.number}]`;
		}
	}
    return message.send(`üíç –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:${user.marriage.req == [] ? `\n–ù–µ—Ç—É` : req}
‚ö° –ß—Ç–æ–±—ã –∂–µ–Ω–∏—Ç—å—Å—è/–≤—ã–π—Ç–∏ –∑–∞–º—É–∂ –Ω–∞–ø–∏—à–∏—Ç–µ: –ë—Ä–∞–∫ [id –∏–∑ —Å–ø–∏—Å–∫–∞] `);
});

///–ë—Ä–∞–∫///
vk.updates.hear(/^(?:–±—Ä–∞–∫)\s?(.*)?$/i,async (message) => {
	msg();
	let user = await userq;
	await user.save();
	let userz = await User.findOne({ number: message.$match[1] });
	let usere = await User.findOne({ number: user.marriage.part });
    if(user.marriage.part){
        return message.send(`‚ö° –í—ã —É–∂–µ –≤ –±—Ä–∞–∫–µ —Å –∏–≥—Ä–æ–∫–æ–º ${usere.prefix}!`);
    }
	
    if(userz.marriage.part != 0){
        return message.send(`‚ö° –≠—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫ —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –±—Ä–∞–∫–µ!`);
    }

    if(message.$match[1] == user.number){
        return message.send(`‚ö° –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∂–µ–Ω–∏—Ç—å—Å—è/–≤—ã–π—Ç–∏ –∑–∞–º—É–∂ –∑–∞ —Å–µ–±—è!`)
    }
	
    if(userz.marriage.req == user.number){
        return message.send(`‚ö° –í—ã —É–∂–µ –¥–µ–ª–∞–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —ç—Ç–æ–º—É –∏–≥—Ä–æ–∫—É!`);
    }
	
	let userm = `${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")}`

	if(user.marriage.req.find(x=> x == message.$match[1])){
        user.marriage.req = [];
        user.marriage.part = userz.number;

        userz.marriage.req = [];
        userz.marriage.part = user.number;
		
		vk.api.call('messages.send', {
		peer_id: userz.id,
		random_id: 0,
		message: `üíç –ò–≥—Ä–æ–∫ ${userp} –≤—ã—à–µ–ª –∑–∞ –≤–∞—Å!`
		});
		log[user.number].push(`–í—Å—Ç—É–ø–∏–ª –≤ –±—Ä–∞–∫ —Å –∏–≥—Ä–æ–∫–æ–º ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		log[userz.number].push(`–ò–≥—Ä–æ–∫ ${user.number} —Å—Ç–∞–ª –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º –∏–≥—Ä–æ–∫–∞ –∏–≥—Ä–æ–∫–∞. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(userz.balance)}$`);
		await user.save()
		await userz.save()
        return message.send(`üíç –í—ã –≤—Å—Ç—É–ø–∏–ª–∏ –≤ –±—Ä–∞–∫ —Å –∏–≥—Ä–æ–∫–æ–º ${userm}!`);
    }

	vk.api.call('messages.send', {
		peer_id: userz.id,
		random_id: 0,
		message: `üíç –ò–≥—Ä–æ–∫ ${userp} —Å–¥–µ–ª–∞–ª –≤–∞–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!`
	});

	userz.marriage.req.push(user.number);
	log[user.number].push(`–°–¥–µ–ª–∞–ª –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É ${message.$match[1]}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
	log[userz.number].push(`–ò–≥—Ä–æ–∫ ${user.number} —Å–¥–µ–ª–∞–ª –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(userz.balance)}$`);
	await user.save()
	await userz.save()
    return message.send(`üíç –í—ã —Å–¥–µ–ª–∞–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É ${userm}!`);
});

///–†–∞–∑–≤–µ—Å—Ç–∏—Å—å///
vk.updates.hear(/^(—Ä–∞–∑–≤|—Ä–∞–∑–≤–µ—Å—Ç–∏—Å—å|—Ä–∞–∑–≤–æ–¥)$/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	let usere = await User.findOne({ number: user.marriage.part });
	if(user.marriage.part == 0) return message.send(`üíç –í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –±—Ä–∞–∫–µ!`)
	if(user.marriage.part != 0){
		vk.api.call('messages.send', {
			peer_id: usere.id,
			random_id: 0,
			message: `üíç –ò–≥—Ä–æ–∫ ${userp} —Ä–∞–∑–≤–µ–ª—Å—è —Å –≤–∞–º–∏!`
		});
		let partner = user.marriage.part
		let lol = usere.marriage.part
		log[user.number].push(`–†–∞–∑–≤–µ–ª—Å—è —Å –∏–≥—Ä–æ–∫–æ–º ${partner}. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		log[user.marriage.part].push(`–ò–≥—Ä–æ–∫ ${lol} —Ä–∞–∑–≤–µ–ª—Å—è. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(usere.balance)}$`);
		usere.marriage.part = 0
		user.marriage.part = 0
		message.send(`üíç –í—ã —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ–ª–∏—Å—å —Å –∏–≥—Ä–æ–∫–æ–º ${usere.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${usere.nick.toString().replace(/true/gi, `@id${usere.id}(${usere.prefix})`).replace(/false/gi, `${usere.prefix}`)} ${usere.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")}!`)
		await user.save()
		return usere.save()
	}
});

///–ò—Ñ–∞–∫—Ç///
vk.updates.hear(/^(?:–∏—Ñ–∞–∫—Ç|–∏–≥—Ä–æ—Ñ–∞–∫—Ç|–∏–≥—Ä–æ —Ñ–∞–∫—Ç)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	let a = gfact.random();
	log[user.number].push(`–ü–æ—Å–º–æ—Ç—Ä–µ–ª –∏–≥—Ä–æ—Ñ–∞–∫—Ç. ID: ${a.id} –í—Ä–µ–º—è: ${time()}|${data()}`);
	return message.send(`
üéÆ –ò–≥—Ä–∞ ¬´${a.game}¬ª
üìù –ò–≥—Ä–æ–≤–æ–π –§–∞–∫—Ç:
${a.fact}
	`)
});

///–ö–≤–µ—Å—Ç—ã///
vk.updates.hear(/^(?:–∫–≤–µ—Å—Ç|–∫–≤–µ—Å—Ç—ã)/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	if(user.quest.lvl == 1){
		return message.send(`
üìó –ö–≤–µ—Å—Ç–æ–≤–∞—è –∫–Ω–∏–∂–∫–∞ üìó
üéõ–¢–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –∫–≤–µ—Å—Ç–∞: 1
üéõ–¢–≤–æ—è –∑–∞–¥–∞—á–∞: –í—ã–∏–≥—Ä–∞—Ç—å 3 —Ä–∞–∑–∞ –≤ –∫—É–±–∏–∫
üéõ–¢–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å: ${user.quest.per} –∏–∑ 3
		`)
	} else if(user.quest.lvl == 2){
		return message.send(`
üìó –ö–≤–µ—Å—Ç–æ–≤–∞—è –∫–Ω–∏–∂–∫–∞ üìó
üéõ–¢–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –∫–≤–µ—Å—Ç–∞: 2
üéõ–¢–≤–æ—è –∑–∞–¥–∞—á–∞: –û—Ç–≥–∞–¥–∞—Ç—å —Å–µ–π—Ñ
üéõ–¢–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å: ${user.quest.per} –∏–∑ 1
		`)
	} else if(user.quest.lvl == 3){
		return message.send(`
üìó –ö–≤–µ—Å—Ç–æ–≤–∞—è –∫–Ω–∏–∂–∫–∞ üìó
üéõ–¢–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –∫–≤–µ—Å—Ç–∞: 3
üéõ–¢–≤–æ—è –∑–∞–¥–∞—á–∞: –í—ã–∏–≥—Ä–∞—Ç—å 3 —Ä–∞–∑–∞ –≤ –∫—É–±–∏–∫ –ø–æ–¥—Ä—è–¥
üéõ–¢–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å: ${user.quest.per} –∏–∑ 3
		`)
	} else if(user.quest.lvl == 4){
		return message.send(`
üìó –ö–≤–µ—Å—Ç–æ–≤–∞—è –∫–Ω–∏–∂–∫–∞ üìó
üéõ–¢–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –∫–≤–µ—Å—Ç–∞: 4
üéõ–¢–≤–æ—è –∑–∞–¥–∞—á–∞: –í—ã–∏–≥—Ä–∞—Ç—å –≤ —Å—Ç–∞–∫–∞–Ω—á–∏–∫–µ 3 —Ä–∞–∑ –ø–æ–¥—Ä—è–¥
üéõ–¢–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å: ${user.quest.per} –∏–∑ 3
		`)
	} else if(user.quest.lvl == 5){
		return message.send(`
üìó –ö–≤–µ—Å—Ç–æ–≤–∞—è –∫–Ω–∏–∂–∫–∞ üìó
üéõ–¢–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –∫–≤–µ—Å—Ç–∞: 5
üéõ–¢–≤–æ—è –∑–∞–¥–∞—á–∞: –í—ã–∏–≥—Ä–∞—Ç—å 2 —Ä–∞–∑–∞ –≤ –∫–∞–∑–∏–Ω–æ —Å –º–Ω–æ–∂–µ—Ç–µ–ª–µ–º x10 –ø—Ä–∏ —Å—Ç–∞–≤–∫–µ —Å–≤—ã—à–µ 1.000.000.000$
üéõ–¢–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å: ${user.quest.per} –∏–∑ 2
		`)
	} else {
		return message.send(`
üìó –ö–≤–µ—Å—Ç–æ–≤–∞—è –∫–Ω–∏–∂–∫–∞ üìó
üéõ–í—Å–µ –∫–≤–µ—Å—Ç—ã —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!		
		`)
	}
});

///Zapret///
vk.updates.hear(/^(?:zapret)\s([^]+)?/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	if(user.level < 5) return message.send(`–í—ã –Ω–µ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä!`);
	zaprets.zapr.push(message.$match[1]);
	fs.writeFileSync("./base/zapret.json", JSON.stringify(zaprets, null, "\t"))
	log[user.number].push(`–î–æ–±–∞–≤–∏–ª –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ –≤ –∑–∞–ø—Ä–µ—Ç: "${message.$match[1]}"`);
	return message.send(`–í—ã –¥–æ–±–∞–≤–∏–ª–∏ –≤ –∑–∞–ø—Ä–µ—Ç –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ!`)
});

///–ü–µ—Ä–µ–¥–∞—Ç—å///
vk.updates.hear(/^(?:–ø–µ—Ä–µ–¥–∞—Ç—å|pay)\s?([0-9]+)\s(.*)$/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	if(!message.$match[1] || !message.$match[2]) return message.send(`üëâ ‚ûæ –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: –ø–µ—Ä–µ–¥–∞—Ç—å ID –°–£–ú–ú–ê`);
	message.$match[2] = message.$match[2].replace(/(\.|\,|\$)/ig, '');
	message.$match[2] = message.$match[2].replace(/(–∫|k)/ig, '000');
	message.$match[2] = message.$match[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤–±|–≤—Å—ë)/ig, user.balance);
	let userz = await User.findOne({ number: message.$match[1] });
	if(message.$match[1] == user.number) return message.send(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –¥–µ–Ω—å–≥–∏ —Å–∞–º–æ–º—É —Å–µ–±–µ! –≠—Ç–æ –∂–µ –±–µc—Å–º—ã—Å–ª–µ–Ω–Ω–æ!=)`)
	if(!Number(message.$match[1]) || !Number(message.$match[2])) return message.send(`üëâ ‚ûæ ID –∏ –°–£–ú–ú–ê –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —á–∏—Å–ª–æ–≤–æ–≥–æ –≤–∏–¥–∞.`)
	if(!userz || message.$match[2] < 0) return message.send(`üëâ ‚ûæ –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–≤–µ–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ`)
	if(message.$match[2] > user.balance) return message.send(`–£ –≤–∞—Å –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥!`);
	if(user.limit == true){
		if(user.level == 0){
			if(user.pay_l >= 25000000000) return message.send(`üí¥ ‚ûæ –í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ª–∏–º–∏—Ç 25.000.000.000$!\nüîî ‚ûæ –£ VIP/VIP+ - –õ–∏–º–∏—Ç –ø–µ—Ä–µ–¥–∞—á–∏ —É–≤–µ–ª–∏—á–µ–Ω.`);
			if(message.$match[2] > 25000000000-user.pay_l) return message.send(`üí¥ ‚ûæ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–µ—Ä–µ–¥–∞—á–∏ 25.000.000.000$!\nüîî ‚ûæ –£ VIP/VIP+ - –õ–∏–º–∏—Ç –ø–µ—Ä–µ–¥–∞—á–∏ —É–≤–µ–ª–∏—á–µ–Ω.`);
			await user.inc("pay_l", Math.floor(message.$match[2]));
		}
		if(user.level == 1){
			if(user.pay_l >= 50000000000) return message.send(`üí¥ ‚ûæ –í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ª–∏–º–∏—Ç 50.000.000.000$!\n üîî‚ûæ –£ VIP+ - –õ–∏–º–∏—Ç –ø–µ—Ä–µ–¥–∞—á–∏ —É–≤–µ–ª–∏—á–µ–Ω.`);
			if(message.$match[2] > 50000000000-user.pay_l) return message.send(`üí¥ ‚ûæ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–µ—Ä–µ–¥–∞—á–∏ 50.000.000.000$!\n üîî‚ûæ –£ VIP+ - –õ–∏–º–∏—Ç –ø–µ—Ä–µ–¥–∞—á–∏ —É–≤–µ–ª–∏—á–µ–Ω.`);
			await user.inc("pay_l", Math.floor(message.$match[2]));
		}
		if(user.level == 2){
			if(user.pay_l >= 100000000000) return message.send(`üí¥ ‚ûæ –í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ª–∏–º–∏—Ç 100.000.000.000$!`);
			if(message.$match[2] > 100000000000-user.pay_l) return message.send(`üí¥ ‚ûæ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–µ—Ä–µ–¥–∞—á–∏ 100.000.000.000$!`);
			await user.inc("pay_l", Math.floor(message.$match[2]));
		}
		if(user.level == 3 || user.level == 4){
			if(user.pay_l >= 250000000000) return message.send(`üí¥ ‚ûæ –í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ª–∏–º–∏—Ç 250.000.000.000$!`);
			if(message.$match[2] > 250000000000-user.pay_l) return message.send(`üí¥ ‚ûæ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–µ—Ä–µ–¥–∞—á–∏ 250.000.000.000$!`);
			await user.inc("pay_l", Math.floor(message.$match[2]));
		}
	}
	userz.balance += Math.floor(message.$match[2]);
  	await userz.save()
	user.balance -= message.$match[2];
	await user.save()
	vk.api.call("messages.send", {
		peer_id: userz.id,
		random_id: 0,
		message: `–ò–≥—Ä–æ–∫ ${userp} –ø–µ—Ä–µ–≤–µ–ª –≤–∞–º ${spaces(message.$match[2])}$!`
	});
	if(message.user != owner){
		vk.api.call("messages.send", {
			peer_id: chat_w + 2000000000,
			random_id: 0,
			message: `–ò–≥—Ä–æ–∫ @id${user.id}(${user.prefix}) [id: ${user.number}] –ø–µ—Ä–µ–≤–µ–ª –∏–≥—Ä–æ–∫—É @id${userz.id}(${userz.prefix}) [id: ${message.$match[1]}] ${spaces(message.$match[2])}$!`
		});
	}
	log[user.number].push(`–ü–µ—Ä–µ–≤–µ–ª –≤–∞–ª—é—Ç—É –∏–≥—Ä–æ–∫—É ${message.$match[1]}. –°—É–º–º–∞: ${spaces(message.$match[2])}$ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
	log[userz.number].push(`–ü–æ–ª—É—á–∏–ª –≤–∞–ª—é—Ç—É –æ—Ç –∏–≥—Ä–æ–∫–∞ ${user.number}. –°—É–º–º–∞: ${spaces(message.$match[2])}$ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(userz.balance)}$`);
	message.send(`${userp}, –≤—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${spaces(message.$match[2])}$!`);
	user.save()
	return userz.save()
});

///–ó–∞–≥–∞–¥–∫–∞///
vk.updates.hear(/(?:–∑–∞–≥–∞–¥–∫–∞)\s?([^]+)?/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	if(user.block.rid > getUnix()) return message.send(`‚öï ‚ûæ –ó–∞–≥–∞–¥–∫—É –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –æ—Ç–≥–∞–¥–∞—Ç—å —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ ${unixStampLeft(user.block.rid - Date.now())}`);
	if(!user.rid || user.rid == 0){
		let random = rand(1, riddle.length);
		let rid = riddle.find(x=> x.id === random)
		user.rid = rid.id;
		await user.save();
		return message.send(`${rid.riddle}`)
	} else if(message.$match[1]){
		let otvet = riddle.find(x=> x.id === user.rid)
		if(otvet.reply.indexOf(message.$match[1].toLowerCase()) !== -1){
			user.block.rid = getUnix() + 300000;
			setTimeout(() => {
				log[user.number].push(`–°–Ω—è—Ç –æ—Ç–∫–∞—Ç –∑–∞–≥–∞–¥–∫–∏. –í—Ä–µ–º—è: ${time()}|${data()}`);
			}, 300000);
			user.rid = 0;
			let vin = rand(1,4);
			let gl = rand(1,5);
			let lvl = rand(1,10);
			let robs = rand(1000,8000);
			if(vin == 1){
				user.job.lvl += 1;
				await user.save();
				return message.send(`‚öï ‚ûæ –≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!\n${otvet.answer}\n+1 –∫ —Å—Ç–∞–∂—É!`);
			} else if(vin == 2){
				user.gl += gl;
				await user.save();
				return message.send(`‚öï ‚ûæ –≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!\n${otvet.answer}\n+${spaces(gl)} –∫ —Ä–µ–π—Ç–∏–Ω–≥—É!`);
			} else if(vin == 3){
				user.mine.lvl += lvl;
				await user.save();
				return message.send(`‚öï ‚ûæ –≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!\n${otvet.answer}\n+${spaces(lvl)} –∫ –æ–ø—ã—Ç—É!`);
			} else if(vin == 4){
				user.robot += rob;
				await user.save();
				return message.send(`‚öï ‚ûæ –≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!\n${otvet.answer}\n+${spaces(robs)} –∫ ${rob(robs)}!`);
			}
		} else {
			return message.send(`‚öï ‚ûæ –≠—Ç–æ –Ω–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç!`)
		}
	} else {
		let rid = riddle.find(x=> x.id === user.rid)
		return message.send(`${rid.riddle}`)
	}
});

///online///
vk.updates.hear(/^(?:online)\s?([^]+)?/i, async (message) => {
	if(message.user != owner) return;
	if(message.$match[1] == "off"){
		let res = await vk.api.call("groups.disableOnline", { group_id: group })
		return message.send(`${res.toString().replace(/0/gi, "–û—à–∏–±–∫–∞!").replace(/1/gi, "–°–æ–æ–±—â–µ—Å—Ç–≤–æ —Ç–µ–ø–µ—Ä—å –Ω–µ –æ–Ω–ª–∞–π–Ω!")}`)
	} else if(message.$match[1] == "on"){
		let res = await vk.api.call("groups.enableOnline", { group_id: group })
		return message.send(`${res.toString().replace(/0/gi, "–û—à–∏–±–∫–∞!").replace(/1/gi, "–°–æ–æ–±—â–µ—Å—Ç–≤–æ —Ç–µ–ø–µ—Ä—å –æ–Ω–ª–∞–π–Ω!")}`)
	} else {
		return message.send(`–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: online off/on.`)
	}
});

///–ë–µ—Å–µ–¥—ã///
vk.updates.hear(/^(?:–±–µ—Å–µ–¥—ã)$/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	let text = ``;
	let info = [];
	for(let i = 0; i < config.spon.length; i++){
		vk_user.api.call("messages.getChat",{ chat_id: config.spon[i].id }).then((response) => {
			info.push({ title: response.title, members: response.members_count, url: config.spon[i].url, num: i + 1, pet: config.spon[i].pet });
			text = "–ë–µ—Å–µ–¥—ã Bot Rikl:\n" + info.map(a => a.num + ". " + a.title + " [" + a.members + `/`+(a.pet == 14 ? `2000` : `500`)+`]\n` + "–°—Å—ã–ª–∫–∞: " + a.url).join("\n") + "\n–•–æ—á–µ—à—å —á—Ç–æ–±—ã –≤ —Å–ø–∏—Å–∫–µ –±—ã–ª–∞ –∏ —Ç–≤–æ—è –±–µ—Å–µ–¥–∞? –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ —Å–æ–∑–¥–∞—Ç–µ–ª—é –∏ –≤—ã–ø–æ–ª–Ω–∏ —Ä—è–¥ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π!"
			if(i + 1 == config.spon.length){
				return message.send(text)
			}
		});
	};
});

///–ú–æ–Ω–µ—Ç–∫–∞ –õ–∏—Å—Ç///
vk.updates.hear(/^(?:–º–æ–Ω–µ—Ç–∫–∞)$/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	let mon = await GetListMonetka();
	return message.send(mon);
});

///–ú–æ–Ω–µ—Ç–∫–∞ –æ—Ç–º–µ–Ω–∞///
vk.updates.hear(/^(?:–º–æ–Ω–µ—Ç–∫–∞ –æ—Ç–º–µ–Ω–∞)$/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	let mon = await DelMonetka();
	return message.send(mon);
});
///–ú–æ–Ω–µ—Ç–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å///
vk.updates.hear(/^(?:–º–æ–Ω–µ—Ç–∫–∞)\s(.*)?\s(.*)$/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	let mon = await AddMonetka(message.$match[1],message.$match[2]);
	return message.send(mon);
});

///–ú–æ–Ω–µ—Ç–∫–∞ –∏–≥—Ä–∞—Ç—å///
vk.updates.hear(/^(?:–º–æ–Ω–µ—Ç–∫–∞)\s([1-9]+)$/i, async (message) => {
	msg();
	let user = await userq;
	await user.save();
	let mon = await PlayMonetka(message.$match[1]);
	return message.send(mon);
});

///–°–∫–∞–∂–∏///
vk.updates.hear(/^(?:—Å–∫–∞–∂–∏)\s(.*)/i, async (message) => {
	msg();
	if(message.$match[1].length > 200) return message.send(`–°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!`);
	control(message.$match[1]).then(function(itog){
		return message.send(itog)}).catch(function(err){
			googleTTS(message.$match[1], `ru`, speed).then(function (url){
			message.sendAudioMessage(url)}).catch(function (err){
			console.error(err.stack);
		});
	});
});

///Logs///
vk.updates.hear(/^(?:logs)$/i, async (message) => {
	if(adm.indexOf(message.user) !== -1 || message.user != owner) return
	if(message.chat != chat_w) return
	await message.send(`–õ–æ–≥–∏ —Å–æ–æ–±—â–µ–Ω–∏–π:`)
	await message.sendDocument(way)
	await message.send(`–ò–≥—Ä–æ–≤—ã–µ –ª–æ–≥–∏:`)
	return message.sendDocument("./base/log.json");
});

///Wiki///
vk.updates.hear(/^(?:wiki|–≤–∏–∫–∏)\s(.*)$/i, async (message) => {
	msg();
	let user = await userq;
	let info = ``;
	control(message.$match[1]).then(function(itog){
		return message.send(itog)}).catch(function(err){
	    rq("https://ru.wikipedia.org/w/api.php?action=opensearch&search="+encodeURIComponent(message.$match[1])+"&meta=siteinfo&rvprop=content&format=json").then((res) => {
	    	if(res[2][0].length < 10){
	    		info = res[2][1]
	    	} else {
	    		info = res[2][0]
	    	}
	    	return message.send(`–í–æ—Ç —Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –∫–æ—Ç–æ—Ä—É—é —è —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É!\n${info}\n–°—Å—ã–ª–∫–∞: ${res[3][0]}`)
    	});
	});
});

///–§–∞–∫—Ç///
vk.updates.hear(/^(?:—Ñ–∞–∫—Ç)$/i, async (message) => {
	msg();
	rq("http://webdiscover.ru/facts/rand.php").then((e) => {
		return message.send(`üìù –§–∞–∫—Ç:\n${e}`);
	});
});

///–ü–µ—Ä–µ–≤–µ–¥–∏///
vk.updates.hear(/^(?:–ø–µ—Ä–µ–≤–µ–¥–∏)\s?([1,2]+)?\s(.*)$/i, async (message) => {
	msg();
	let language = ``;
	if(!message.$match[1] || !message.$match[2]) return message.send(`–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: –ü–µ—Ä–µ–≤–µ–¥–∏ [1/2] [—Ç–µ–∫—Å—Ç]\n1 - –í–≤–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç: –∞–Ω–≥–ª–∏–π—Å–∫–∏–π\n2 - –í–≤–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç: —Ä—É—Å—Å–∫–∏–π`)
	if(message.$match[1] == 1){
		language = `ru`
	} else if(message.$match[1] == 2){
		language = `en`
	} else {
		return message.send(`–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: –ü–µ—Ä–µ–≤–µ–¥–∏ [1/2] [—Ç–µ–∫—Å—Ç]\n1 - –í–≤–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç: –∞–Ω–≥–ª–∏–π—Å–∫–∏–π\n2 - –í–≤–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç: —Ä—É—Å—Å–∫–∏–π`)
	}
	control(message.$match[2]).then(function(itog){
		return message.send(itog)}).catch(function(err){
		    rq(`https://translate.yandex.net/api/v1.5/tr.json/translate?key=${login.transl}&lang=${language}&text=${encodeURIComponent(message.$match[2])}`).then((res) => {
		    	return message.send(`–ü–µ—Ä–µ–≤–æ–¥: ${res.text}`);
		  	});
	});
});

///–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏///
vk.updates.hear(/^(?:—Ä–µ–≥|–¥–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏|–¥–∞—Ç–∞ —Ä–µ–≥)$/i, async (message) => {
	rq("https://apidog.ru/api/v2/%20apidog.getUserDateRegistration?userDomain=" + message.user).then(body => {
    	return message.send(`–î–∞—Ç–∞ –≤–∞—à–µ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${body.response.date}`)
	});
});

///–†–∞–∑–¥–∞—á–∞///
vk.updates.hear(config.dist.answer, async (message) => {
	msg();
	let user = await userq;
	if(message.isChat) return message.send(`–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∏–∑–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º! ${smileerr}`)
	if(user.old == true) return message.send(`–í—ã —É–∂–µ –ø–æ–ª—É—á–∞–ª–∏ –Ω–∞–≥—Ä–∞–¥—É –∑–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç! ${smileerr}`);
	user.old = true;
	user.balance += config.dist.reward;
	log[user.number].push(`–ü–æ—É—á–∞–≤—Å—Ç–≤–æ–≤–∞–ª –≤ —Ä–∞–∑–¥–∞—á–µ. –ü–æ–ª—É—á–∏–ª: ${spaces(config.dist.reward)}$ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
	await message.send(`–ó–∞—á–∏—Å–ª–µ–Ω–æ +${spaces(config.dist.reward)}$ –∑–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç! üî•\n–ù–∞ —Ä—É–∫–∞—Ö: ${spaces(user.balance)}$ üí∞`);
	return user.save()
});

///!–û—á–∏—Å—Ç–∫–∞///
vk.updates.hear(/^(?:!–æ—á–∏—Å—Ç–∫–∞)/i, async (message) => {
	if(message.user != owner) return
	msg();
	let user = await userq;
	let users = await User.find({ ban: false });
	for(let i = 0; i < users.length; i += 1){
		eval(config.clean);
		users[i].save();
	}
	return message.send(`–ì–æ—Ç–æ–≤–æ!`)
});

///Infop///
vk.updates.hear(/^(?:infop)\s(.*)/i, async (message) => {
	msg();
	let user = await userq;
	if(user.level < 6) return message.send(`üî∏ ‚ûæ –í—ã –Ω–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!`);
	if(promo.promos[message.$match[1]]){
		let prom = promo.promos[message.$match[1]];
		return message.send(`
–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –ø—Ä–æ–º–æ–∫–æ–¥—É "${message.$match[1]}":
–¢–∏–ø: ${prom.type.toString().replace(/(1)/ig, `–î–µ–Ω—å–≥–∏\n–°—É–º–º–∞: ${spaces(prom.balance)}$`).replace(/(2)/ig, `–†–∏–∫–ª—ã\n–°—É–º–º–∞: ${spaces(prom.balance)} —Ä–∏–∫–ª–æ–≤`).replace(/(3)/ig, `–†–æ–±–æ—Ç—ã\n–°—É–º–º–∞: ${spaces(prom.balance)} —Ä–æ–±–æ—Ç–æ–≤`).replace(/(4)/ig, `–†–µ–π—Ç–∏–Ω–≥\n–°—É–º–º–∞: ${spaces(prom.balance)} —Ä–µ–π—Ç–∏–Ω–≥–∞`).replace(/(5)/ig, `–†–∞–Ω–¥–æ–º–Ω—ã–π`)}
–ê–∫—Ç–∏–≤–∞—Ü–∏–π –æ—Å—Ç–∞–ª–æ—Å—å: ${prom.activ} –∏–∑ ${prom.activ_t}
–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: ${prom.time} ${prom.date}
`+(prom.time_l == `` ? `` : `–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è: ${prom.time_l}`)+	`
		`)
	} else {
		return message.send(`üî∏ ‚ûæ –¢–∞–∫–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ–Ω –∑–∞–∫–æ–Ω—á–∏–ª—Å—è!`)
	}
});

///–ö–Ω–æ–ø–∫–∞///
vk.updates.hear(/^(?:–∫–Ω–æ–ø–∫–∞|–∫–Ω–æ–ø–∫–∏)\s([^]+)$/i, async (message) => {
	msg();
	let user = await userq;
	let mes = message.$match[1];
	if(!user.button) user.button = [];
	let zaprets1 = mes.toLowerCase();
	let filter0 = /(http(s)?:\/\/.)?(www\.)?[-a-z0-9@:%._\+~#=]{1,256}\.[a-z]{2,6}/
	let filter1 = /(?!http(s)?:\/\/)?(www\.)?[–∞-—è0-9-_.]{1,256}\.(—Ä—Ñ|—Å—Ä–±|–±–ª–æ–≥|–±–≥|—É–∫—Ä|—Ä—É—Å|“õ–∞–∑|ÿßŸÖÿßÿ±ÿßÿ™.|ŸÖÿµÿ±.|ÿßŸÑÿ≥ÿπŸàÿØŸäÿ©.)/
	if (filter0.test(zaprets1) == true || filter1.test(zaprets1) == true || zaprets.zapr.find(x=> x === zaprets1)){
		return message.send(`–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ!`)
	}
    if(message.isChat){
    	let _users = await vk.api.messages.getConversationMembers({peer_id: message.peerId});
		let _user = _users.items.find((item) => item.member_id === message.senderId);
		if(!_user.is_admin || message.user != owner){
			return message.send(`–í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –±–µ—Å–µ–¥—ã!`);
		}
    	let conver = convers.find(x=> x.cid === message.chat);
    	if(!conver){
	        convers.push({
	            id: convers.length + 1,
	            cid: message.chat,
	            button: []
	        });
        	conver = convers.find(x=> x.cid === message.chat);
			fs.writeFileSync("./base/convers.json", JSON.stringify(convers, null, "\t"));
    	}
	    if(mes.toLowerCase() == "—É–¥–∞–ª–∏—Ç—å" || mes.toLowerCase() == "–æ—á–∏—Å—Ç–∏—Ç—å"){
	        conver.button = [];
			fs.writeFileSync("./base/convers.json", JSON.stringify(convers, null, "\t"));
	        return message.send(`${userp}, –≤—ã –æ—á–∏—Å—Ç–∏–ª–∏ –≤—Å–µ –∫–Ω–æ–ø–∫–∏!\nüîÅ –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –ö–Ω–æ–ø–∫–∞ [–¢–µ–∫—Å—Ç]\n‚ûï –ß—Ç–æ –±—ã –≤–∫–ª—é—á–∏—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã–Ω–µ –∫–Ω–æ–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏"`, { keyboard: Keyboard.keyboard([]) });
		}
		if(conver.button.length >= 40) return message.send(`[id${message.user.id}|${message.user.tag}], –≤–∞—à–µ –ø–æ–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ! (40/40)\nüîÅ –î–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø–æ–ª—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–∏—Ç—å\n‚ûï –ß—Ç–æ –±—ã –≤–∫–ª—é—á–∏—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã–Ω–µ –∫–Ω–æ–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏"`);
		conver.button.push(mes);
		fs.writeFileSync("./base/convers.json", JSON.stringify(convers, null, "\t"));
	    return message.send(`${userp}, –∫–Ω–æ–ø–∫–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!`, { keyboard: genkeyboard(conver.button, Keyboard) });
	} else {
	    if(mes.toLowerCase() == "—É–¥–∞–ª–∏—Ç—å" || mes.toLowerCase() == "–æ—á–∏—Å—Ç–∏—Ç—å"){
	        user.button = [];
	    	await user.save();
	        return message.send(`${userp}, –≤—ã —É–¥–∞–ª–∏–ª–∏ –≤—Å–µ –∫–Ω–æ–ø–∫–∏!\nüîÅ –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –ö–Ω–æ–ø–∫–∞ [–¢–µ–∫—Å—Ç]\n‚ûï –ß—Ç–æ –±—ã –≤–∫–ª—é—á–∏—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã–Ω–µ –∫–Ω–æ–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏"`, { keyboard: Keyboard.keyboard([]) });
	    }
		if(user.button == undefined) user.button = []
    	user.button.push(mes);
    	await user.save();
	    return message.send(`${userp}, –∫–Ω–æ–ø–∫–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!\nüîÅ –î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–∏—Ç—å\n‚ûï –ß—Ç–æ –±—ã –≤–∫–ª—é—á–∏—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã–Ω–µ –∫–Ω–æ–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏"`, { keyboard: genkeyboard(user.button, Keyboard) });
    }
});

///–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∫–Ω–æ–ø–∫–∞///
vk.updates.hear(/^(?:—Å—Ç–∞–Ω–¥–∞—Ä—Ç –∫–Ω–æ–ø–∫–∞|—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∫–Ω–æ–ø–∫–∞|—Å—Ç–∞–Ω–¥–∞—Ä—Ç|–≤—ã–∫–ª—é—á–∏—Ç—å –∫–Ω–æ–ø–∫–∏|—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏|—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ)$/i, async (message) => {
	msg();
	let user = await userq;
	if(message.isChat){
    	let _users = await vk.api.messages.getConversationMembers({peer_id: message.peerId});
		let _user = _users.items.find((item) => item.member_id === message.senderId);
		if(!_user.is_admin || message.user != owner){
			return message.send(`–í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –±–µ—Å–µ–¥—ã!`);
		}
		return message.send(`${userp}, –≤—ã –≤–∫–ª—é—á–∏–ª–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏!\nüîÅ –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –ö–Ω–æ–ø–∫–∞ [–¢–µ–∫—Å—Ç]`,{ keyboard: JSON.stringify(main) });
	} else {
		return message.send(`${userp}, –≤—ã –≤–∫–ª—é—á–∏–ª–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏!\nüîÅ –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –ö–Ω–æ–ø–∫–∞ [–¢–µ–∫—Å—Ç]`,{ keyboard: JSON.stringify(main) });
	}
});

///–î–∞—Ç—å—Å///
vk.updates.hear(/(?:–¥–∞—Ç—å—Å)\s?([1-9]+)?/i, async (message) => {
	let userz = await User.findOne({ number: message.$match[1] });
	let pet = pets.find(x=> x.id === 17);
	if(message.user != owner && message.user != 353389708) return message.send(`–ó–∞–ø—Ä–µ—â–µ–Ω–æ!`)
	if(!userz) return message.send(`–¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!`);
	userz.pet = 17;
	log[user.number].push(`–í—ã–¥–∞–ª –∏–≥—Ä–æ–∫—É ${userz.number} ${pet.name}. –í—Ä–µ–º—è: ${time()}|${data()}`);
	log[userz.number].push(`–ü–æ–ª—É—á–∏–ª –æ—Ç –∏–≥—Ä–æ–∫–∞ ${user.number} ${pet.name}. –í—Ä–µ–º—è: ${time()}|${data()}`);
	await message.send(`–ì–æ—Ç–æ–≤–æ! –í—ã –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} –ø–∏—Ç–æ–º—Ü–∞ "${pet.name}"!`)
	return userz.save()
});

///–û–ø–ª–∞—Ç–∞///
vk.updates.hear(/(?:–æ–ø–ª–∞—Ç–∞)\s?([0-9]+)?\s([0-9]+)?/i, async (message) => {
	let user = await userq;
	let userz = await User.findOne({ number: message.$match[1] });
	let count = [1, 2, 1, 8000000000, 20000000000, 50000000000, 100000000000, 1];
	if(message.user != owner) return;
	let name = `${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")}`
	let ph = "photo-182329862_457239074";
	if(message.$match[2] == 1 || message.$match[2] == 2){
		let adm = adms.find(x=> x.lvl === Math.floor(message.$match[2]));
		userz.level = count[message.$match[2] - 1];
		userz.vip = true;
		vk.api.call("messages.send", {
			peer_id: userz.id,
			random_id: 0,
			message: `–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É ${adm.name} —Å—Ç–∞—Ç—É—Å–∞!\n–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "–í–∏–ø"!`,
			attachment: ph
		});
		await message.send(`–ü–æ–∫—É–ø–∫–∞ –∏–≥—Ä–æ–∫—É ${name} "${adm.name} —Å—Ç–∞—Ç—É—Å" —É—Å–ø–µ—à–Ω–∞ –≤—ã–¥–∞–Ω–∞!`);
		return userz.save();
	} else if(message.$match[2] == 3){
		userz.inv.case.four += 1;
		vk.api.call("messages.send", {
			peer_id: userz.id,
			random_id: 0,
			message: `–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É –î–æ–Ω–∞—Ç–Ω–æ–≥–æ –∫–µ–π—Å–∞!`,
			attachment: ph
		});
		await message.send(`–ü–æ–∫—É–ø–∫–∞ –∏–≥—Ä–æ–∫—É ${name} "–î–æ–Ω–∞—Ç–Ω—ã–π –∫–µ–π—Å" —É—Å–ø–µ—à–Ω–∞ –≤—ã–¥–∞–Ω–∞!`);
		return userz.save();
	} else if(message.$match[2] == 8){
		if(userz.old == false){
			userz.inv.case.four += 1;
			userz.old = true;
			vk.api.call("messages.send", {
				peer_id: userz.id,
				random_id: 0,
				message: `üí•–°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ –∞–∫—Ü–∏–∏! –í–∞–º –≤—ã–¥–∞–Ω x1 –î–æ–Ω–∞—Ç–Ω—ã–π –∫–µ–π—Å!`
			});
			await message.send(`–ò–≥—Ä–æ–∫—É ${name} "–î–æ–Ω–∞—Ç–Ω—ã–π –∫–µ–π—Å" —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω!`);
			return userz.save();
		} else {
			vk.api.call("messages.send", {
				peer_id: userz.id,
				random_id: 0,
				message: `${smileerr}–ü—Ä–æ—Å—Ç–∏—Ç–µ, –Ω–æ –≤—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ —Å–≤–æ–π –ø—Ä–∏–∑ –∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ –∞–∫—Ü–∏–∏!`
			});
		}
	} else {
		userz.balance += count[message.$match[2] - 1];
		vk.api.call("messages.send", {
			peer_id: userz.id,
			random_id: 0,
			message: `–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–µ–æ–±—Ä–µ—Ç–µ–Ω–∏–µ ${spaces(count[message.$match[2] - 1])}$!`,
			attachment: ph
		});
		await message.send(`–ü–æ–∫—É–ø–∫–∞ –∏–≥—Ä–æ–∫—É ${name} "${spaces(count[message.$match[2] - 1])}$" —É—Å–ø–µ—à–Ω–∞ –≤—ã–¥–∞–Ω–∞!`);
		return userz.save();
	}
});

///–í—ã–¥–∞—Ç—å///
vk.updates.hear(/(?:–≤—ã–¥–∞—Ç—å)\s?([0-9]+)?\s([0-9]+)?\s(.*)?/i, async (message) => {
	let user = await userq;
	if(message.$match[3] == "pet" || message.$match[3] == "pets"){
		let pet = [];
		for(let i = 1; i < pets.length; i++){
			pet.push({ number: i, id: pets[i].id, name: pets[i].name });
		}
		return message.send(pet.map(a => a.number + ". " + a.name + " ID: " + a.id).join("\n"))
	}
	let userz = await User.findOne({ number: message.$match[1] });
	message.$match[3] = message.$match[3].replace(/(\.|\,)/ig, '');
	message.$match[3] = message.$match[3].replace(/(–∫|k)/ig, '000');
	let i = Number(message.$match[3]);
	let count = [`${spaces(i)}$`, `${spaces(i)} ${rob(i)}`, `${spaces(i)} ${gl(i)}`, `${spaces(i)} ${tabl(i)}`, ``+(message.$match[2] != 5 ? `` : `–ü–∏—Ç–æ–º–µ—Ü ${pets.find(x=> x.id === i).name}`)+``, ``+(message.$match[2] != 6 ? `` : `${cases.find(x=> x.id === i).name}üì¶`)+``];
	if(user.level < 7) return;
	if(!message.$match[1] && !message.$match[2] || !message.$match[3] || !message.$match[1] || !message.$match[2] || !userz || message.$match[2] > count.length) return message.send(`–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–µ "–í—ã–¥–∞—Ç—å"\n–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: –í—ã–¥–∞—Ç—å [ID –∏–≥—Ä–æ–∫–∞] [ID –≤–∏–¥–∞] [ID/—Å—É–º–º–∞]\n1. –í–∞–ª—é—Ç–∞ (ID 1, —Å—É–º–º–∞)\n2. –†–æ–±–æ—Ç—ã (ID 2, —Å—É–º–º–∞)\n3. –†–µ–π—Ç–∏–Ω–≥ (ID 3, —Å—É–º–º–∞)\n4. –¢–∞–±–ª–µ—Ç–∫–∏ (ID 4, —Å—É–º–º–∞)\n5. –ü–∏—Ç–æ–º—Ü—ã (ID 5, ID –ø–∏—Ç–æ–º—Ü–∞)\n6. –ö–µ–π—Å—ã (ID 6, ID –∫–µ–π—Å–∞)\n–í—ã–¥–∞—Ç—å 1 1 pets - —Å–ø–∏—Å–æ–∫ –ø–∏—Ç–æ–º—Ü–µ–≤`);
	let name = `${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")} ${userz.nick.toString().replace(/true/gi, `@id${userz.id}(${userz.prefix})`).replace(/false/gi, `${userz.prefix}`)} ${userz.vip.toString().replace(/true/gi, "üî•").replace(/false/gi, "")}`
	log[user.number].push(`–í—ã–¥–∞–ª –∏–≥—Ä–æ–∫—É ${userz.number} ${count[message.$match[2] - 1]}. –í—Ä–µ–º—è: ${time()}|${data()}`);
	log[userz.number].push(`–ü–æ–ª—É—á–∏–ª ${count[message.$match[2] - 1]} –æ—Ç –∏–≥—Ä–æ–∫–∞ ${user.number}. –í—Ä–µ–º—è: ${time()}|${data()}`);
	vk.api.call("messages.send", {
		peer_id: userz.id,
		random_id: 0,
		message: `–í—ã –ø–æ–ª—É—á–∏–ª–∏ ${count[message.$match[2] - 1]}!`
	});
	if(message.$match[2] == 1){
		await userz.inc("balance", Math.floor(message.$match[3]));
	} else if(message.$match[2] == 2){
		await userz.inc("rob", Math.floor(message.$match[3]));
	} else if(message.$match[2] == 3){
		await userz.inc("gl", Math.floor(message.$match[3]));
	} else if(message.$match[2] == 4){
		await userz.inc("tabl", Math.floor(message.$match[3]));
	} else if(message.$match[2] == 5){
		await userz.set("pet", Math.floor(message.$match[3]));
	} else if(message.$match[2] == 6){
		if(message.$match[3] == 1) userz.inv.case.one += 1;
		else if(message.$match[3] == 2) userz.inv.case.two += 1;
		else if(message.$match[3] == 3) userz.inv.case.three += 1;
		else if(message.$match[3] == 4) userz.inv.case.four += 1;
		else if(message.$match[3] == 5 && cases.find(x=> x.id === 5)) userz.inv.case.five += 1;
		await userz.save();
	}
	return message.send(`–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${name} ${count[message.$match[2] - 1]}!`);
});

///–ö–µ–π—Å –∏–Ω—Ñ–æ///
vk.updates.hear(/(?:–∫–µ–π—Å –∏–Ω—Ñ–æ)\s?([1-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let i = Number(message.$match[1]);
	let cas = cases.find(x=> x.id === i);
	if(!message.$match[1]) return message.send(`üì¶ –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–µ–π—Å–∞!`);
	log[user.number].push(`–ü–æ—Å–º–æ—Ç—Ä–µ–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ ${i} –∫–µ–π—Å–µ. –í—Ä–µ–º—è: ${time()}|${data()}`);
	if(i == 1) return message.send(`
üì¶ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ ${cas.title}:
–û–ø—ã—Ç - 30%
–í–∞–ª—é—Ç–∞ - 30%
–†–µ–π—Ç–∏–Ω–≥ - 30%
${cases.find(x=> x.id === 2).name} - 10%
	`);
	if(i == 2) return message.send(`
üì¶ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ ${cas.title}:
–û–ø—ã—Ç - 25%
–í–∞–ª—é—Ç–∞ - 25%
–†–µ–π—Ç–∏–Ω–≥ - 25%
VIP —Å—Ç–∞—Ç—É—Å –Ω–∞ –Ω–µ–¥–µ–ª—é - 15%
${cases.find(x=> x.id === 3).name} - 10%
	`);
	if(i == 3) return message.send(`
üì¶ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ ${cas.title}:
–û–ø—ã—Ç - 25%
–í–∞–ª—é—Ç–∞ - 25%
–†–µ–π—Ç–∏–Ω–≥ - 25%
VIP+ —Å—Ç–∞—Ç—É—Å –Ω–∞ –Ω–µ–¥–µ–ª—é - 15%
${cases.find(x=> x.id === 4).name} - 10%
	`);
	if(i == 4) return message.send(`
üì¶ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ ${cas.title}:
–°–±–æ—Ä–æ—á–Ω—ã–µ - 25%
–í–∞–ª—é—Ç–∞ - 25%
VIP+ —Å—Ç–∞—Ç—É—Å –Ω–∞ 2 –Ω–µ–¥–µ–ª–∏ - 50%
	`);
	if(i == 5) return message.send(`
üì¶ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ ${cas.title}:
–ü–∏—Ç–æ–º–µ—Ü ${pets.find(x=> x.id === 20).name} - 30%
–ü–∏—Ç–æ–º–µ—Ü ${pets.find(x=> x.id === 21).name} - 27%
–ü–∏—Ç–æ–º–µ—Ü ${pets.find(x=> x.id === 22).name} - 25%
–ü–∏—Ç–æ–º–µ—Ü ${pets.find(x=> x.id === 23).name} - 10%
–ü–∏—Ç–æ–º–µ—Ü ${pets.find(x=> x.id === 24).name} - 5%
–ü–∏—Ç–æ–º–µ—Ü ${pets.find(x=> x.id === 25).name} - 3%
	`);
});

///–ö–µ–π—Å—ã///
vk.updates.hear(/^(?:–∫–µ–π—Å—ã)\s?([1-9]+)?/i, async (message) => {
	msg();
	let user = await userq;
	let i = Number(message.$match[1]);
	let cas = cases.find(x=> x.id === i);
	if(!i){
		return message.send(`
üì¶ –ö–µ–π—Å—ã üì¶
1‚É£${cases.find(x=> x.id === 1).name} | ${spaces(cases.find(x=> x.id === 1).count)}$${cases.find(x=> x.id === 1).count > user.balance ? 'üîπ' : 'üî∏'}
2‚É£${cases.find(x=> x.id === 2).name} | ${spaces(cases.find(x=> x.id === 2).count)}$${cases.find(x=> x.id === 2).count > user.balance ? 'üîπ' : 'üî∏'}
3‚É£${cases.find(x=> x.id === 3).name} | ${spaces(cases.find(x=> x.id === 3).count)}$${cases.find(x=> x.id === 3).count > user.balance ? 'üîπ' : 'üî∏'}
4‚É£${cases.find(x=> x.id === 4).name} | ${spaces(cases.find(x=> x.id === 4).count)}—Ä—É–±.
5‚É£${cases.find(x=> x.id === 5).name} | ${spaces(cases.find(x=> x.id === 5).count)} –ü–µ—á–µ–Ω–µ–∫${cases.find(x=> x.id === 5).count > user.ev ? 'üå≤' : 'üéÑ'}
		
üõí –î–ª—è –ø–æ–∫—É–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ¬´–∫–µ–π—Å—ã [ID]¬ª
		`);
	}
	if(i == 1 || i == 2 || i == 3){
		if(user.balance < cas.count) return message.send(`üì¶ ‚ûæ –£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${spaces(cas.count - user.balance)}$!`,{ attachment: market_m,  keyboard: JSON.stringify(donat) });
		user.balance -= cas.count;
		if(i == 1){
			user.inv.case.one += 1;
			log[user.number].push(`–ö—É–ø–∏–ª 1 –∫–µ–π—Å –∑–∞ ${spaces(cas.count)}$ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		} else if(i == 2){
			user.inv.case.two += 1;
			log[user.number].push(`–ö—É–ø–∏–ª 2 –∫–µ–π—Å –∑–∞ ${spaces(cas.count)}$ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		} else if(i == 3){
			user.inv.case.three += 1;
			log[user.number].push(`–ö—É–ø–∏–ª 3 –∫–µ–π—Å –∑–∞ ${spaces(cas.count)}$ –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
		}
		log[user.number].push(``);
		message.send(`üì¶ ‚ûæ –í—ã –∫—É–ø–∏–ª–∏ ${cas.name} –∑–∞ ${spaces(cas.count)}$!`);
	}
	if(i == 4) return message.send(`${userp}, –ø–æ–∫—É–ø–∫–∞ –≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º —Ä–µ–∂–∏–º–µ: ${config.site}`)
	if(i == 5){
		if(user.ev < cas.count) return message.send(`üì¶ ‚ûæ –£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${spaces(cas.count - user.ev)} –ü–µ—á–µ–Ω–µ–∫üç™`);
		user.ev -= cas.count;
		user.inv.case.five += 1;
		log[user.number].push(`–ö—É–ø–∏–ª 5 –∫–µ–π—Å –∑–∞ ${spaces(cas.count)} –ü–µ—á–µ–Ω–µ–∫üç™ –í—Ä–µ–º—è: ${time()}|${data()} –ü–µ—á–µ–Ω–µ–∫: ${spaces(user.ev)}`);
		message.send(`üì¶ ‚ûæ –í—ã –∫—É–ø–∏–ª–∏ ${cas.name} –∑–∞ ${spaces(cas.count)} –ü–µ—á–µ–Ω–µ–∫üç™!`);
	}
	return user.save();
});

///–ö–µ–π—Å///
vk.updates.hear(/^(?:–∫–µ–π—Å)\s?([1-9]+)?/i, async (message) => {
	msg();
	let rez = rand(1,100);
	let user = await userq;
	let i = Number(message.$match[1]);
	if(i == 1){
		if(user.inv.case.one > 0){
			user.inv.case.one -= 1;
			if(rez > 0 && rez < 31){
				let count = rand(5,15);
				user.mine.lvl += count;
				await user.save();
				log[user.number].push(`–û—Ç–∫—Ä—ã–ª 1 –∫–µ–π—Å. –í—ã–±–∏–ª ${spaces(count)} –æ–ø—ã—Ç–∞. –í—Ä–µ–º—è: ${time()}|${data()} –û–ø—ã—Ç–∞: ${spaces(user.mine.lvl)}`);
				return message.send(`${userp}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${spaces(count)} –æ–ø—ã—Ç–∞ üèÜ ${smilesuc}`);
			}
			if(rez > 30 && rez < 61){
				let count = [500000000, 1500000000, 4000000000, 7500000000, 10000000000, 20000000000].random();
				await user.inc("balance", count);
				log[user.number].push(`–û—Ç–∫—Ä—ã–ª 1 –∫–µ–π—Å. –í—ã–±–∏–ª ${spaces(count)}$. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
				return message.send(`${userp}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${spaces(count)}$ ${smilesuc}`);
			}
			if(rez > 60 && rez < 91){
				let count = rand(4,30);
				await user.inc("gl", count);
				log[user.number].push(`–û—Ç–∫—Ä—ã–ª 1 –∫–µ–π—Å. –í—ã–±–∏–ª ${spaces(count)} —Ä–µ–π—Ç–∏–Ω–≥–∞. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.gl)}`);
				return message.send(`${userp}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${spaces(count)} —Ä–µ–π—Ç–∏–Ω–≥–∞ üëë ${smilesuc}`);
			}
			if(rez > 90 && rez < 100){
				user.inv.case.two += 1;
				await user.save();
				log[user.number].push(`–û—Ç–∫—Ä—ã–ª 1 –∫–µ–π—Å. –í—ã–±–∏–ª 2 –∫–µ–π—Å. –í—Ä–µ–º—è: ${time()}|${data()} 2 –∫–µ–π—Å–æ–≤: ${spaces(user.inv.case.two)}`);
				return message.send(`${userp}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${cases.find(x=> x.id === 2).name} ${smilesuc}`);
			}
		} else return message.send(`üì¶ –£ –≤–∞—Å –Ω–µ—Ç—É –¥–∞–Ω–Ω–æ–≥–æ –∫–µ–π—Å–∞!`);
	} else if(i == 2){
		if(user.inv.case.two > 0){
			user.inv.case.two -= 1;
			if(rez > 0 && rez < 26){
				let count = rand(25,60);
				user.mine.lvl += count;
				await user.save();
				log[user.number].push(`–û—Ç–∫—Ä—ã–ª 2 –∫–µ–π—Å. –í—ã–±–∏–ª ${spaces(count)} –æ–ø—ã—Ç–∞. –í—Ä–µ–º—è: ${time()}|${data()} –û–ø—ã—Ç–∞: ${spaces(user.mine.lvl)}`);
				return message.send(`${userp}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${spaces(count)} –æ–ø—ã—Ç–∞ üèÜ ${smilesuc}`);
			}
			if(rez > 25 && rez < 51){
				let count = [2500000000, 7500000000, 20000000000, 37500000000, 50000000000, 75000000000].random();
				await user.inc("balance", count);
				log[user.number].push(`–û—Ç–∫—Ä—ã–ª 2 –∫–µ–π—Å. –í—ã–±–∏–ª ${spaces(count)}$. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
				return message.send(`${userp}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${spaces(count)}$ ${smilesuc}`);
			}
			if(rez > 50 && rez < 76){
				let count = rand(20,120);
				await user.inc("gl", count);
				log[user.number].push(`–û—Ç–∫—Ä—ã–ª 2 –∫–µ–π—Å. –í—ã–±–∏–ª ${spaces(count)} —Ä–µ–π—Ç–∏–Ω–≥–∞. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.gl)}`);
				return message.send(`${userp}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${spaces(count)} —Ä–µ–π—Ç–∏–Ω–≥–∞ üëë ${smilesuc}`);
			}
			if(rez > 75 && rez < 91){
				let count = 7;
				await user.inc("adm", count);
				await user.set("level", 1);
				log[user.number].push(`–û—Ç–∫—Ä—ã–ª 2 –∫–µ–π—Å. –í—ã–±–∏–ª VIP —Å—Ç–∞—Ç—É—Å –Ω–∞ –Ω–µ–¥–µ–ª—é. –í—Ä–µ–º—è: ${time()}|${data()} –í—Ä–µ–º—è VIP: ${spaces(user.adm)} –°—É—Ç–æ–∫`);
				return message.send(`${userp}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ VIP —Å—Ç–∞—Ç—É—Å –Ω–∞ –Ω–µ–¥–µ–ª—é ${smilesuc}`);
			}
			if(rez > 90 && rez < 101){
				user.inv.case.three += 1;
				await user.save();
				log[user.number].push(`–û—Ç–∫—Ä—ã–ª 2 –∫–µ–π—Å. –í—ã–±–∏–ª 3 –∫–µ–π—Å. –í—Ä–µ–º—è: ${time()}|${data()} 3 –∫–µ–π—Å–æ–≤: ${spaces(user.inv.case.three)}`);
				return message.send(`${userp}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${cases.find(x=> x.id === 3).name} ${smilesuc}`);
			}
		} else return message.send(`üì¶ –£ –≤–∞—Å –Ω–µ—Ç—É –¥–∞–Ω–Ω–æ–≥–æ –∫–µ–π—Å–∞!`);
	} else if(i == 3){
		if(user.inv.case.three > 0){
			user.inv.case.three -= 1;
			if(rez > 0 && rez < 26){
				let count = rand(50,200);
				user.mine.lvl += count;
				await user.save();
				log[user.number].push(`–û—Ç–∫—Ä—ã–ª 3 –∫–µ–π—Å. –í—ã–±–∏–ª ${spaces(count)} –æ–ø—ã—Ç–∞. –í—Ä–µ–º—è: ${time()}|${data()} –û–ø—ã—Ç–∞: ${spaces(user.mine.lvl)}`);
				return message.send(`${userp}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${spaces(count)} –æ–ø—ã—Ç–∞ üèÜ ${smilesuc}`);
			}
			if(rez > 25 && rez < 51){
				let count = [10000000000, 30000000000, 80000000000, 150000000000, 200000000000, 250000000000].random();
				await user.inc("balance", count);
				log[user.number].push(`–û—Ç–∫—Ä—ã–ª 3 –∫–µ–π—Å. –í—ã–±–∏–ª ${spaces(count)}$. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
				return message.send(`${userp}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${spaces(count)}$ ${smilesuc}`);
			}
			if(rez > 50 && rez < 76){
				let count = rand(80,500);
				await user.inc("gl", count);
				log[user.number].push(`–û—Ç–∫—Ä—ã–ª 3 –∫–µ–π—Å. –í—ã–±–∏–ª ${spaces(count)} —Ä–µ–π—Ç–∏–Ω–≥–∞. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.gl)}`);
				return message.send(`${userp}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${spaces(count)} —Ä–µ–π—Ç–∏–Ω–≥–∞ üëë ${smilesuc}`);
			}
			if(rez > 75 && rez < 91){
				let count = 7;
				await user.inc("adm", count);
				await user.set("level", 2);
				log[user.number].push(`–û—Ç–∫—Ä—ã–ª 2 –∫–µ–π—Å. –í—ã–±–∏–ª VIP+ —Å—Ç–∞—Ç—É—Å –Ω–∞ –Ω–µ–¥–µ–ª—é. –í—Ä–µ–º—è: ${time()}|${data()} –í—Ä–µ–º—è VIP+: ${spaces(user.adm)} –°—É—Ç–æ–∫`);
				return message.send(`${userp}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ VIP+ —Å—Ç–∞—Ç—É—Å –Ω–∞ –Ω–µ–¥–µ–ª—é ${smilesuc}`);
			}
			if(rez > 90 && rez < 101){
				user.inv.case.four += 1;
				await user.save();
				log[user.number].push(`–û—Ç–∫—Ä—ã–ª 3 –∫–µ–π—Å. –í—ã–±–∏–ª 4 –∫–µ–π—Å. –í—Ä–µ–º—è: ${time()}|${data()} 4 –∫–µ–π—Å–æ–≤: ${spaces(user.inv.case.four)}`);
				return message.send(`${userp}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${cases.find(x=> x.id === 4).name} ${smilesuc}`);
			}
		} else return message.send(`üì¶ –£ –≤–∞—Å –Ω–µ—Ç—É –¥–∞–Ω–Ω–æ–≥–æ –∫–µ–π—Å–∞!`);
	} else if(i == 4){
		if(user.inv.case.four > 0){
			user.inv.case.four -= 1;
			if(rez > 0 && rez < 26){
				if(user.fabric.id == 1){
					user.fabric.sum += 100;
					log[user.number].push(`–û—Ç–∫—Ä—ã–ª 4 –∫–µ–π—Å. –í—ã–±–∏–ª ${spaces(100)} —Å–±–æ—Ä–æ—á–Ω—ã—Ö 1 —É—Ä–æ–≤–Ω—è. –í—Ä–µ–º—è: ${time()}|${data()} –°–±–æ—Ä–æ—á–Ω—ã—Ö: ${spaces(user.fabric.sum)}`);
					await message.send(`${userp}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${spaces(100)} —Å–±–æ—Ä–æ—á–Ω—ã—Ö 1 —É—Ä–æ–≤–Ω—è ${smilesuc}`);
				} else if(user.fabric.id == 2){
					user.fabric.sum += 80;
					log[user.number].push(`–û—Ç–∫—Ä—ã–ª 4 –∫–µ–π—Å. –í—ã–±–∏–ª ${spaces(80)} —Å–±–æ—Ä–æ—á–Ω—ã—Ö 2 —É—Ä–æ–≤–Ω—è. –í—Ä–µ–º—è: ${time()}|${data()} –°–±–æ—Ä–æ—á–Ω—ã—Ö: ${spaces(user.fabric.sum)}`);
					await message.send(`${userp}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${spaces(80)} —Å–±–æ—Ä–æ—á–Ω—ã—Ö 2 —É—Ä–æ–≤–Ω—è ${smilesuc}`);
				} else if(user.fabric.id == 3){
					user.fabric.sum += 40;
					log[user.number].push(`–û—Ç–∫—Ä—ã–ª 4 –∫–µ–π—Å. –í—ã–±–∏–ª ${spaces(40)} —Å–±–æ—Ä–æ—á–Ω—ã—Ö 3 —É—Ä–æ–≤–Ω—è. –í—Ä–µ–º—è: ${time()}|${data()} –°–±–æ—Ä–æ—á–Ω—ã—Ö: ${spaces(user.fabric.sum)}`);
					await message.send(`${userp}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${spaces(40)} —Å–±–æ—Ä–æ—á–Ω—ã—Ö 3 —É—Ä–æ–≤–Ω—è ${smilesuc}`);
				} else if(user.fabric.id == 4 || user.fabric.id == 0){
					user.fabric.id = 4;
					user.fabric.sum += 20;
					log[user.number].push(`–û—Ç–∫—Ä—ã–ª 4 –∫–µ–π—Å. –í—ã–±–∏–ª ${spaces(20)} —Å–±–æ—Ä–æ—á–Ω—ã—Ö 4 —É—Ä–æ–≤–Ω—è. –í—Ä–µ–º—è: ${time()}|${data()} –°–±–æ—Ä–æ—á–Ω—ã—Ö: ${spaces(user.fabric.sum)}`);
					await message.send(`${userp}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${spaces(20)} —Å–±–æ—Ä–æ—á–Ω—ã—Ö 4 —É—Ä–æ–≤–Ω—è ${smilesuc}`);
				}
				return user.save();
			}
			if(rez > 25 && rez < 51){
				let count = [30000000000, 50000000000, 100000000000].random();
				await user.inc("balance", count);
				log[user.number].push(`–û—Ç–∫—Ä—ã–ª 4 –∫–µ–π—Å. –í—ã–±–∏–ª ${spaces(count)}$. –í—Ä–µ–º—è: ${time()}|${data()} –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}$`);
				return message.send(`${userp}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${spaces(count)}$ ${smilesuc}`);
			}
			if(rez > 50 && rez < 101){
				let count = 14;
				await user.inc("adm", count);
				await user.set("level", 2);
				log[user.number].push(`–û—Ç–∫—Ä—ã–ª 2 –∫–µ–π—Å. –í—ã–±–∏–ª VIP+ —Å—Ç–∞—Ç—É—Å –Ω–∞ 2 –Ω–µ–¥–µ–ª–∏. –í—Ä–µ–º—è: ${time()}|${data()} –í—Ä–µ–º—è VIP+: ${spaces(user.adm)} –°—É—Ç–æ–∫`);
				return message.send(`${userp}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ VIP+ —Å—Ç–∞—Ç—É—Å –Ω–∞ 2 –Ω–µ–¥–µ–ª–∏ ${smilesuc}`);
			}
		} else return message.send(`üì¶ –£ –≤–∞—Å –Ω–µ—Ç—É –¥–∞–Ω–Ω–æ–≥–æ –∫–µ–π—Å–∞!`);
	} else if(i == 5){
		if(user.inv.case.five > 0){
			user.inv.case.five -= 1;
			if(rez > 0 && rez < 31){
				await user.set("pet", 20);
				log[user.number].push(`–û—Ç–∫—Ä—ã–ª 5 –∫–µ–π—Å. –í—ã–±–∏–ª –ø–∏—Ç–æ–º—Ü—ã ${pets.find(x=> x.id === 20).name}. –í—Ä–µ–º—è: ${time()}|${data()}`);
				return message.send(`${userp}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –ø–∏—Ç–æ–º—Ü–∞ ${pets.find(x=> x.id === 20).name}`);
			}
			if(rez > 30 && rez < 58){
				await user.set("pet", 21);
				log[user.number].push(`–û—Ç–∫—Ä—ã–ª 5 –∫–µ–π—Å. –í—ã–±–∏–ª –ø–∏—Ç–æ–º—Ü—ã ${pets.find(x=> x.id === 21).name}. –í—Ä–µ–º—è: ${time()}|${data()}`);
				return message.send(`${userp}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –ø–∏—Ç–æ–º—Ü–∞ ${pets.find(x=> x.id === 21).name}`);
			}
			if(rez > 57 && rez < 83){
				await user.set("pet", 22);
				log[user.number].push(`–û—Ç–∫—Ä—ã–ª 5 –∫–µ–π—Å. –í—ã–±–∏–ª –ø–∏—Ç–æ–º—Ü—ã ${pets.find(x=> x.id === 22).name}. –í—Ä–µ–º—è: ${time()}|${data()}`);
				return message.send(`${userp}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –ø–∏—Ç–æ–º—Ü–∞ ${pets.find(x=> x.id === 22).name}`);
			}
			if(rez > 82 && rez < 93){
				await user.set("pet", 23);
				log[user.number].push(`–û—Ç–∫—Ä—ã–ª 5 –∫–µ–π—Å. –í—ã–±–∏–ª –ø–∏—Ç–æ–º—Ü—ã ${pets.find(x=> x.id === 23).name}. –í—Ä–µ–º—è: ${time()}|${data()}`);
				return message.send(`${userp}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –ø–∏—Ç–æ–º—Ü–∞ ${pets.find(x=> x.id === 23).name}`);
			}
			if(rez > 92 && rez < 98){
				await user.set("pet", 24);
				log[user.number].push(`–û—Ç–∫—Ä—ã–ª 5 –∫–µ–π—Å. –í—ã–±–∏–ª –ø–∏—Ç–æ–º—Ü—ã ${pets.find(x=> x.id === 24).name}. –í—Ä–µ–º—è: ${time()}|${data()}`);
				return message.send(`${userp}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –ø–∏—Ç–æ–º—Ü–∞ ${pets.find(x=> x.id === 24).name}`);
			}
			if(rez > 97 && rez < 101){
				await user.set("pet", 25);
				log[user.number].push(`–û—Ç–∫—Ä—ã–ª 5 –∫–µ–π—Å. –í—ã–±–∏–ª –ø–∏—Ç–æ–º—Ü—ã ${pets.find(x=> x.id === 25).name}. –í—Ä–µ–º—è: ${time()}|${data()}`);
				return message.send(`${userp}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –ø–∏—Ç–æ–º—Ü–∞ ${pets.find(x=> x.id === 25).name}`);
			}
		} else return message.send(`üì¶ –£ –≤–∞—Å –Ω–µ—Ç—É –¥–∞–Ω–Ω–æ–≥–æ –∫–µ–π—Å–∞!`);
	}
});

User.prototype.inc = inc; //+

User.prototype.dec = dec; //-

User.prototype.set = set; //=

run().catch(console.error);